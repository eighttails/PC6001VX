			  Z80 ASSEMBLER - ZASM VER 1.6
                      	;Compatible BASIC for PC-6001mkII/6601
                      	; by AKIKAWA, Hisashi  2017-2022
                      	
                      	;This software is redistributable under the LGPLv2.1 or any later version.
                      	
                      	
                      	;subroutine entry address
  0000                	BOOT	equ	0000h
  0008                	CHKPAR	equ	0008h
  0010                	ANADAT	equ	0010h
  0018                	JPHK1	equ	0018h
  0020                	CPHLDE	equ	0020h
  0028                	CHKSGN	equ	0028h
  0038                	JPHK2	equ	0038h
  0384                	ERRSTR	equ	0384h
  038B                	ERRIN	equ	038bh
  0390                	OK	equ	0390h
  0442                	EDIT	equ	0442h
  06EA                	CMDEND	equ	06eah
  0709                	INTPRT2	equ	0709h
  0741                	FTOI2	equ	0741h
  0BEE                	TOUPHL	equ	0beeh
  0D16                	ABTOF	equ	0d16h
  0DE3                	INT1INC	equ	0de3h
  0DE4                	INT1ARG	equ	0de4h
  0E78                	IN90H	equ	0e78h
  0E8F                	OUT90H	equ	0e8fh
  0EB0                	INTGRP	equ	0eb0h
  0EB5                	INTKEY	equ	0eb5h
  0EF6                	IKBF	equ	0ef6h
  0F2B                	IKPOP	equ	0f2bh
  0F74                	INTTIM	equ	0f74h
  0FBC                	GETCH	equ	0fbch
  0FC4                	GETC	equ	0fc4h
  103A                	GETKBF	equ	103ah
  1058                	CLRKBF	equ	1058h
  1061                	STICK	equ	1061h
  1075                	PRTC	equ	1075h
  10AA                	PRTCH	equ	10aah
  10EA                	PATCH1	equ	10eah
  116D                	SETCSR	equ	116dh
  1179                	CSRON	equ	1179h
  1181                	CSROFF	equ	1181h
  11B8                	Y2AD	equ	11b8h
  11CD                	XY2AD	equ	11cdh
  11DA                	DELLIN	equ	11dah
  1257                	PRTCHXY	equ	1257h
  1260                	SCRLU60	equ	1260h
  12A9                	SCRLD60	equ	12a9h
  1390                	CHGMOD	equ	1390h
  13ED                	CHGDSP	equ	13edh
  140C                	CHGACT	equ	140ch
  1478                	AD2GAD	equ	1478h
  14A0                	CGROM	equ	14a0h
  14AF                	PRTCHAD	equ	14afh
  15C0                	SETATT	equ	15c0h
  1A1C                	PUTPRT	equ	1a1ch
  1A4F                	CNVKANA	equ	1a4fh
  1A61                	ROPEN	equ	1a61h
  1A70                	GETCMT	equ	1a70h
  1AAA                	RCLOSE	equ	1aaah
  1AB8                	WOPEN	equ	1ab8h
  1ACC                	PUTCMT	equ	1acch
  1AED                	CHK90H	equ	1aedh
  1B06                	WCLOSE	equ	1b06h
  1B2A                	BLNKAST	equ	1b2ah
  1B49                	RLOFF	equ	1b49h
  1B4B                	RLON	equ	1b4bh
  1B54                	OUTB0H	equ	1b54h
  1B60                	PLSTPS	equ	1b60h
  1BB3                	PLSTOP	equ	1bb3h
  1BBE                	SETPSG2	equ	1bbeh
  1BC5                	SETPSG	equ	1bc5h
  1BCD                	BELL	equ	1bcdh
  1CA6                	JOYSTK	equ	1ca6h
  1CB4                	PATCH2	equ	1cb4h
  1D52                	CNSMAIN	equ	1d52h
  1D73                	SETCNSL	equ	1d73h
  1DBB                	SETC3	equ	1dbbh
  1DFB                	CLS	equ	1dfbh
  1E39                	SCRMAIN	equ	1e39h
  1EB3                	PLAY	equ	1eb3h
  204B                	SCALE	equ	204bh
  2539                	GETFN	equ	2539h
  254E                	CMTSKP	equ	254eh
  2576                	FOUND	equ	2576h
  2583                	PUTFN	equ	2583h
  259A                	INPOPN	equ	259ah
  25A8                	PRTOPN	equ	25a8h
  25E5                	WAIT	equ	25e5h
  26C7                	PUTDEV	equ	26c7h
  2701                	PUTPRNL	equ	2701h
  272D                	PUTNLX	equ	272dh
  2739                	PUTNL	equ	2739h
  274D                	STOPESC	equ	274dh
  28F9                	INPTSCR	equ	28f9h
  2905                	INPT1	equ	2905h
  2D13                	SETGXY	equ	2d13h
  2D47                	PSET	equ	2d47h
  2DE4                	LINEBF	equ	2de4h
  2E1F                	LINE	equ	2e1fh
  2E35                	LINEB	equ	2e35h
  2EF1                	PAINT2	equ	2ef1h
  2EFA                	PAINT	equ	2efah
  30CE                	PUTSINC	equ	30ceh
  30CF                	PUTS	equ	30cfh
  310F                	GC	equ	310fh
  34F9                	RESSTK	equ	34f9h
  3995                	CHKMOD	equ	3995h
  3A99                	INLNUM	equ	3a99h
  3AA1                	PUTI2	equ	3aa1h
  3AA5                	I2TOA	equ	3aa5h
  3AAC                	FTOA	equ	3aach
  3BAF                	RNDPLS	equ	3bafh
                      	
                      	;BASIC command
  0781                	C_RUN	equ	0781h		;RUN
  07E0                	C_DATA	equ	07e0h		;DATA
  07E2                	C_REM	equ	07e2h		;REM
  087A                	C_LPRT	equ	087ah		;LPRINT
  087E                	C_PRT	equ	087eh		;PRINT
  1CD2                	C_LOCA	equ	1cd2h		;LOCATE
  1CF6                	C_CNSL	equ	1cf6h		;CONSOLE
  1D9B                	C_COLR	equ	1d9bh		;COLOR
  1E04                	C_SCRN	equ	1e04h		;SCREEN
  4A72                	C_CRCL	equ	4a72h		;CIRCLE
  6B4A                	C_COL66	equ	6b4ah		;COLOR (mode5)
  6B9B                	C_SCR66	equ	6b9bh		;SCREEN (mode5)
  70C9                	C_LIN66	equ	70c9h		;LINE (mode5)
                      	
                      	;work area
  FA18                	STOPFLG	equ	0fa18h		;03h=STOP,1bh=ESC
  FA19                	CMTSTAT	equ	0fa19h		;bit1=data received, bit4=error
  FA1A                	INPDEV	equ	0fa1ah		;input device
  FA1D                	CMTBUF	equ	0fa1dh		;CMT data
  FA1E                	ASTSTAT	equ	0fa1eh		;cload asterisk status
  FA1F                	BAUD	equ	0fa1fh		;baud rate (00=600baud, ff=1200baud)
  FA20                	HEIGHT	equ	0fa20h		;Y max+1
                      	
  FA27                	PORTB0H	equ	0fa27h		;port b0h
  FA28                	TMCNT	equ	0fa28h		;time count, fa28-fa2b
  FA2D                	CONSOL4	equ	0fa2dh		;console 4th parameter
  FA2E                	CSRBLNK	equ	0fa2eh		;0=cursor blink off, 1=on
  FA2F                	CSRSTAT	equ	0fa2fh		;0=normal, ff=reversed
  FA30                	GRPWRK	equ	0fa30h		;input graphic character work
  FA31                	GRPFLG	equ	0fa31h		;print graphic character flag
  FA32                	FKEYCNT	equ	0fa32h		;function key counter
  FA51                	RSEED	equ	0fa51h		;random seed, fa51-fa55
  FA57                	PRTPOS	equ	0fa57h		;printer head position (0-origin)
  FA58                	DEVICE	equ	0fa58h		;output device
  FA5A                	KEYFLG	equ	0fa5ah		;special key flags
  FA5B                	STACK	equ	0fa5bh		;initial stack pointer
  FA5D                	LINENUM	equ	0fa5dh		;current line number
  FA5F                	STARTAD	equ	0fa5fh		;basic program start address
  FA61                	CMDTBL	equ	0fa61h		;command jump table
  FAE5                	FNCTBL	equ	0fae5h		;function jump table
  FB3D                	FKEYTBL	equ	0fb3dh		;function key data
  FB8D                	FKEYAD	equ	0fb8dh		;function key address
  FB8F                	KYBFIN	equ	0fb8fh		;key buffer pointer for input
  FB90                	KYBFOUT	equ	0fb90h		;key buffer pointer for output
  FB92                	KYBFSZ	equ	0fb92h		;key buffer size
  FB93                	KYBFAD	equ	0fb93h		;key buffer address
  FB95                	RSBFIN	equ	0fb95h		;RS-232C buffer in
  FB96                	RSBFOUT	equ	0fb96h		;RS-232C buffer out
  FB98                	RSBFSZ	equ	0fb98h		;RS-232C buffer size
  FB99                	RSBFAD	equ	0fb99h		;RS-232C buffer address
                      	
                      	;PLAY command
  FBA1                	BUFAIN	equ	0fba1h		;channelA buffer pointer for input
  FBA2                	BUFAOUT	equ	0fba2h		;channelA buffer pointer for output
  FBA4                	BUFASZ	equ	0fba4h		;channelA buffer size
  FBA5                	BUFAAD	equ	0fba5h		;channelA buffer address
  FBA7                	BUFBIN	equ	0fba7h		;channelB buffer in
  FBAD                	BUFCIN	equ	0fbadh		;channelC buffer in
                      	
  FBB9                	KEYBUF	equ	0fbb9h		;key buffer, fbb9-fbf8
  FBF9                	RSBUF	equ	0fbf9h		;RS-232C buffer, fbf9-fc38
                      	
                      	;PLAY command
  FC39                	BUFA	equ	0fc39h		;channelA buffer, fc39-fc78
  FC79                	BUFB	equ	0fc79h		;channelB buffer, fc79-fcb8
  FCB9                	BUFC	equ	0fcb9h		;channelC buffer, fcb9-fcf8
  FD14                	CHANNEL	equ	0fd14h		;channel (0-2)
  FD15                	SVBCK	equ	0fd15h		;backup of S/V-value
  FD17                	PLAYLEN	equ	0fd17h		;length
  FD18                	PLAYSTR	equ	0fd18h		;string address
  FD1B                	PLAYST	equ	0fd1bh		;PLAY status
  FD1D                	PLWKA	equ	0fd1dh		;PLAY work for channelA
  0000                	REMAIN	equ	0fd1dh-PLWKA	;remaining time
  0002                	PLLEN	equ	0fd1fh-PLWKA	;string length
  0003                	PLADR	equ	0fd20h-PLWKA	;string address
  000F                	OCTAVE	equ	0fd2ch-PLWKA	;O-value
  0010                	LENGTH	equ	0fd2dh-PLWKA	;L-value
  0011                	TEMPO	equ	0fd2eh-PLWKA	;T-value
  0012                	VOLUME	equ	0fd2fh-PLWKA	;V-value
  0013                	PERIOD	equ	0fd30h-PLWKA	;M-value
  FD42                	PLWKB	equ	0fd42h		;PLAY work for channelB
  FD67                	PLWKC	equ	0fd67h		;PLAY work for channelC
                      	
  FD8C                	PAGES	equ	0fd8ch		;How many pages?
  FD8D                	USREND	equ	0fd8dh		;user area end, fd8d-fd8e
  FD8F                	SCREEN2	equ	0fd8fh		;screen 2nd parameter-1
  FD90                	SCREEN3	equ	0fd90h		;screen 3rd parameter-1
                      	
  FD91                	VRAM	equ	0fd91h		;VRAM address (high)
  FD92                	SCREEN1	equ	0fd92h		;screen 1st parameter-1
  FD93                	COLOR1	equ	0fd93h		;color 1st parameter
  FD94                	COLOR2	equ	0fd94h		;color 2nd parameter
  FD95                	COLOR3	equ	0fd95h		;color 3rd parameter (processed)
  FD96                	M1COLOR	equ	0fd96h		;screen mode 1 color parameters, fd96-fd98
  FD99                	M2COLOR	equ	0fd99h		;screen mode 2 color parameters, fd99-fd9b
  FD9C                	M3COLOR	equ	0fd9ch		;screen mode 3 color parameters, fd9c-fd9e
  FD9F                	M4COLOR	equ	0fd9fh		;screen mode 4 color parameters, fd9f-fda1
  FDA2                	CONSOL1	equ	0fda2h		;console 1st line number+1
  FDA3                	CONSOL2	equ	0fda3h		;console last line number+1
  FDA4                	FSTLIN	equ	0fda4h		;=(CONSOL1)
  FDA5                	LASTLIN	equ	0fda5h		;sc12:(CONSOL2)-(CONSOL3) sc34:(CONSOLE2)
  FDA6                	CONSOL3	equ	0fda6h		;console 3rd parameter
  FDA7                	FKEYSFT	equ	0fda7h		;shift key status for function key display
  FDA8                	CSRY	equ	0fda8h		;cursor Y+1
  FDA9                	CSRX	equ	0fda9h		;cursor X+1
  FDAA                	CSRAD	equ	0fdaah		;cursor address
  FDAC                	WIDTH	equ	0fdach		;X max+1
  FDAE                	GRPX1	equ	0fdaeh		;graphic X, fdae-fdaf
  FDB0                	GRPY1	equ	0fdb0h		;graphic Y, fdb0-fdb1
  FDB5                	LINEST	equ	0fdb5h		;line connection status, (0=connect) fdb5-fdb7
  FDB9                	PAGE1	equ	0fdb9h		;page1 data, fdb9-fde0
  FDE1                	PAGE2	equ	0fde1h		;page2 data, fde1-fe08
  FE09                	PAGE3	equ	0fe09h		;page3 data, fe09-fe30
  FE31                	PAGE4	equ	0fe31h		;page4 data, fe31-fe58
                      	
  FE59                	INPTXY	equ	0fe59h		;INPUT command initial position
  FE5B                	INPTX	equ	0fe5bh		;INPUT command end position, or length
  FE5C                	INPTPAG	equ	0fe5ch		;INPUT command page
  FE5D                	INSMODE	equ	0fe5dh		;0=not insert mode, ff=insert mode
  FE5E                	STOPSC2	equ	0fe5eh		;screen 2nd parameter -1 in stop
  FE5F                	STOPSC3	equ	0fe5fh		;screen 3rd parameter -1 in stop
  FEAC                	ATTDAT	equ	0feach		;color attribute data
  FEAD                	GRPX2	equ	0feadh		;graphic X, fead-feae
  FEAF                	GRPY2	equ	0feafh		;graphic Y, feaf-feb0
  FEB1                	GRPX3	equ	0feb1h		;graphic work, feb1-feb2
  FEB3                	GRPY3	equ	0feb3h		;graphic work, feb3-feb4
  FEB5                	PAWRK	equ	0feb5h		;paint work, feb5-feb6
  FEB7                	PACNT	equ	0feb7h		;paint work
  FEC5                	BORDERA	equ	0fec5h		;paint border color attribute
  FEC6                	BORDERC	equ	0fec6h		;paint border color code
  FECA                	GMKYBUF	equ	0fecah		;reply to game key query
                      	;TARGET	equ	0fecbh		;target file name, fecb-fed0
  FED1                	FNAME	equ	0fed1h		;loading file name, fed1-fed6
  FED8                	VERIFY	equ	0fed8h		;load/verify flag 00h=load ffh=verify
  FEDA                	INPBUF	equ	0fedah		;input buffer, feda-ff21, (ff22)-(ff23)=00h
  FF25                	ARGTYP	equ	0ff25h		;0=value 1=string
  FF27                	STREND	equ	0ff27h		;strings area end
  FF29                	BASICAD	equ	0ff29h		;basic area start
  FF2D                	STRDSC1	equ	0ff2dh		;temporary string descriptor, ff2d-ff30
  FF31                	STRDSC2	equ	0ff31h		;ff31-ff34
  FF35                	STRDSC3	equ	0ff35h		;ff35-ff38
  FF39                	STRDSC4	equ	0ff39h		;ff39-ff3c
  FF3D                	STRAD	equ	0ff3dh		;string area start address - 1
  FF41                	GCWRK	equ	0ff41h		;garbage collection work
  FF45                	DATALN	equ	0ff45h		;data line number
  FF4E                	PROGAD	equ	0ff4eh		;program address in interpreting
  FF50                	TMP	equ	0ff50h		;temporary
  FF52                	STOPLN	equ	0ff52h		;line number at stop
  FF54                	STOPAD	equ	0ff54h		;stop address
  FF56                	VARAD	equ	0ff56h		;variable area start address
  FF58                	ARRAD	equ	0ff58h		;array area start address
  FF5A                	FREEAD	equ	0ff5ah		;free area start address
  FF5C                	DATAAD	equ	0ff5ch		;data command address
  FF5E                	FNPAR	equ	0ff5eh		;FN() parameter name
  FF60                	FNARG	equ	0ff60h		;FN() argument value, ff60-ff64
  FF65                	OPRTR	equ	0ff65h		;operator, FAC1-1
  FF66                	FAC1	equ	0ff66h		;floating accumlator 1, ff66-ff6a
  FF6D                	FAC2	equ	0ff6dh		;floating accumlator 2, ff6d-ff71
  FF72                	FAC3	equ	0ff72h		;floating accumlator 3 (string conversion)
  FF8A                	HOOK	equ	0ff8ah		;hook area, ff8a-ffe3
  FF8D                	HOOKERR	equ	0ff8dh		;hook for error
  FF93                	HOOKEDT	equ	0ff93h		;hook for screen editor
  FF99                	HOOKCLP	equ	0ff99h		;hook for changing link pointer
  FFAE                	HOOKPRT	equ	0ffaeh		;hook for PRINT# command
  FFBA                	HOOKINP	equ	0ffbah		;hook for INPUT# command
  FFC9                	HOOKRES	equ	0ffc9h		;hook for RESSTK
  FFCF                	HOOKPUT	equ	0ffcfh		;hook for PUTDEV
  FFD8                	HOOKSTP	equ	0ffd8h		;hook for stop key
  FFDB                	HOOK18H	equ	0ffdbh		;hook for 0018h
  FFE1                	HOOK38H	equ	0ffe1h		;hook for 0038h
  FFE6                	ASPECT	equ	0ffe6h		;aspect ratio for CIRCLE command
                      	
                      	
                      	;constant
  0020                	COLUMNS	equ	32
  0010                	ROWS	equ	16
  0023                	TRACKS	equ	35		;track number=0-34 (1D)
  0046                	CLSTS	equ	TRACKS*2	;cluster number=0-69
                      	
  0080                	END_	equ	080h
  0081                	FOR_	equ	081h
  0083                	DATA_	equ	083h
  0084                	INPUT_	equ	084h
  0088                	GOTO_	equ	088h
  0089                	RUN_	equ	089h
  008C                	GOSUB_	equ	08ch
  008E                	REM_	equ	08eh
  0090                	OUT_	equ	090h
  0093                	DEF_	equ	093h
  0095                	PRINT_	equ	095h
  009B                	PSET_	equ	09bh
  009F                	SCREEN_	equ	09fh
  00AA                	CMDLAST	equ	0aah		;last command for 60
  00AE                	PUT_	equ	0aeh
  00C2                	TAB_	equ	0c2h
  00C3                	TO_	equ	0c3h
  00C4                	FN_	equ	0c4h
  00C5                	SPC_	equ	0c5h
  00C6                	INKEY_	equ	0c6h
  00C7                	THEN_	equ	0c7h
  00C8                	NOT_	equ	0c8h
  00C9                	STEP_	equ	0c9h
  00CA                	PLUS_	equ	0cah
  00CB                	MINUS_	equ	0cbh
  00CF                	AND_	equ	0cfh
  00D0                	OR_	equ	0d0h
  00CC                	ASTRSK_	equ	0cch
  00D1                	GT_	equ	0d1h
  00D2                	EQ_	equ	0d2h
  00D3                	LT_	equ	0d3h
  00D4                	FNC1ST	equ	0d4h
  00D7                	USR_	equ	0d7h
  00EA                	LEFT_	equ	0eah
  00EC                	MID_	equ	0ech
  00F1                	FNCLAST	equ	0f1h		;last function for 60
                      	
                      	
                      	;extended basic subroutine entry address
  4274                	DISK	equ	4274h
  42B9                	INIDSK	equ	42b9h
  51F2                	SETFATP	equ	51f2h
  5CFD                	DISK2	equ	5cfdh
                      	
                      	;mkiI/6601 subroutine entry address
  016B                	CHGRAM	equ	016bh
  2030                	SCALE2	equ	2030h
  397A                	PUTI1	equ	397ah
  4000                	TALK	equ	4000h
  601C                	CALLINI	equ	601ch
  63E2                	SCRLU66	equ	63e2h
  642F                	SCRLD66	equ	642fh
  65CC                	AD2GAD2	equ	65cch
  69F3                	SETBO66	equ	69f3h
  6B7A                	SETC366	equ	6b7ah
  6B9E                	SCRN66	equ	6b9eh
  70E7                	LINBF66	equ	70e7h
  7122                	LINEB66	equ	7122h
  7161                	PA66POP	equ	7161h
  716A                	PAINT66	equ	716ah
  7AF9                	LOADHEX	equ	7af9h
                      	
                      	;mkII/6601 work area
  FCF9                	REGF	equ	0fcf9h
  FCFA                	REGA	equ	0fcfah
  FCFB                	REGC	equ	0fcfbh
  FCFC                	REGB	equ	0fcfch
  FCFD                	REGE	equ	0fcfdh
  FCFE                	REGD	equ	0fcfeh
  FCFF                	REGL	equ	0fcffh
  FD00                	REGH	equ	0fd00h
  FD02                	REGPC	equ	0fd02h
  FD04                	REGSP	equ	0fd04h
  FD06                	BRKADR1	equ	0fd06h
  FD08                	BRKSAV1	equ	0fd08h
  FD09                	BRKADR2	equ	0fd09h
  FD0B                	BRKSAV2	equ	0fd0bh
  FD0E                	MONFLG	equ	0fd0eh		;b6=RAM/ROM, b5=printer, b4=echo, b3=CMT/RS-232C, b0=CRT
                      	
  FE60                	ATTDAT2	equ	0fe60h
  FE61                	BORDERA2	equ	0fe61h
  FE64                	PORTF0H	equ	0fe64h		;port f0h
  FE65                	MODE	equ	0fe65h		;mode-1
  FE8D                	READRAM	equ	0fe8dh		;subroutine: read RAM data for mkII/6601
  FEA1                	OUTF0H	equ	0fea1h		;subroutine: output port f0h
  FE93                	LDIRRAM	equ	0fe93h		;subroutine: LDIR in RAM for mkII/6601
  FE98                	CHGBANK	equ	0fe98h		;subroutine: change 0000-7fff to BASIC ROM
  FEA5                	LDDRRAM	equ	0fea5h		;subroutine: LDDR in RAM for mkII/6601
  FEB8                	PAWRK2	equ	0feb8h		;paint work, feb8-feb9
  FEC7                	FKEYLEN	equ	0fec7h
                      	
                      	;work area for FDD
  FB31                	FILES	equ	0fb31h
  FB33                	FATP	equ	0fb33h		;FAT pointer+3
  FB35                	BUFPTBL	equ	0fb35h		;file buffer pointer table
  FB37                	BUF0	equ	0fb37h		;file#0 buffer data address
  FB39                	BUFP	equ	0fb39h		;file buffer pointer
  FB3B                	DRIVES	equ	0fb3bh
  FE70                	RDWRCHK	equ	0fe70h		;read or write or check FD
  FE71                	RMSECT	equ	0fe71h		;remaining sector
  FE72                	TRACK	equ	0fe72h
  FE73                	DRIVE	equ	0fe73h
  FE74                	SECTOR	equ	0fe74h
  FE75                	DRVBIT	equ	0fe75h		;bit4=drvieA,bit5=drvieB, bit6,7,0,1=external
  FE77                	RETRY	equ	0fe77h
  FE78                	NSECT	equ	0fe78h		;sectors to be read/written, 1-4
  FE79                	STATBF	equ	0fe79h		;FDC status, fe79-fe7f
  FFFC                	FATPTBL	equ	0fffch		;FAT pointer table
                      	
                      	
                      	;mkII/6601 constant
  0028                	CLMN66	equ	40
  0014                	ROWS66	equ	20
  00C1                	CLAST66	equ	0c1h		;last command for mkII/66
  00F9                	FLAST66	equ	0f9h		;last function for mkII/66
                      	
                      	;FD I/O port
  00B1                	FDCNTL	equ	0b1h		;FD control
  00B2                	FDCINT	equ	0b2h		;FDC interrupt
  00B3                	B2CNTL	equ	0b3h		;port b2 control?
  00D0                	FDBUF	equ	0d0h		;d0-d3
                      	
  00D0                	EFDA	equ	0d0h		;external FDD portA (input)
  00D1                	EFDB	equ	0d1h		;external FDD portB (output)
  00D2                	EFDC	equ	0d2h		;external FDD portC (control)
  00D3                	EFDCBIT	equ	0d3h		;external FDD portC bit set/reset (control)
                      	
  00D4                	MOTORST	equ	0d4h		;FDD motor status
  00D6                	MOTOR	equ	0d6h		;FDD motor on/off
  00DA                	BUFSIZ	equ	0dah		;0e=use port d0, 0d=d0-d1, 0c=d0-d2, 0b=d0-d3
  00DC                	FDCSTAT	equ	0dch		;FDC status register
  00DD                	FDCDATA	equ	0ddh		;FDC data register
  00DE                	ADJUST	equ	0deh		;?
                      	
                      	
                      	;;;;;;;;;;;;;;;;;;;;;;;;;
                      	
                      	;boot
  0000                		org	BOOT
  0000  F3            		di
  0001  C36E16        		jp	COLD
                      	
                      	
                      	;check parameter
                      	; compare (hl) and data at (sp)
                      	;input: sp,hl
                      	;output: a=data, hl=data address, z-flag(a=00h or 3ah), c-flag(a=30h-39h)
  0004                	_CHKPAR:ds	CHKPAR-_CHKPAR
  0008                		org	CHKPAR
                      	
  0008  E3            		ex	(sp),hl
  0009  7E            		ld	a,(hl)
  000A  23            		inc	hl
  000B  E3            		ex	(sp),hl
  000C  BE            		cp	(hl)
  000D  C2C203        		jp	nz,SNERR
                      	
                      	
                      	;skip space and analyze a byte
                      	;input: hl=address-1
                      	;output: a=data, hl=data address, z-flag(a=00h or 3ah), c-flag(a=30h-39h)
                      	;destroy: f
  0010                	_ANADAT:ds	ANADAT-_ANADAT
  0010                		org	ANADAT
                      	
  0010  CD5F3F        		call	SKIPSPINC
  0013  C3AD0B        		jp	CHKFIG
                      	
                      	
                      	;jump hook
  0016                	_JPHK1:	ds	JPHK1-_JPHK1
  0018                		org	JPHK1
                      	
  0018  C3DBFF        		jp	HOOK18H
                      	
                      	
                      	;compare hl and de
                      	;input: hl,de
                      	;output: f
                      	;destroy: af
  001B                	_CPHLDE:ds	CPHLDE-_CPHLDE
  0020                		org	CPHLDE
                      	
  0020  7C            		ld	a,h
  0021  92            		sub	d
  0022  C0            		ret	nz
  0023  7D            		ld	a,l
  0024  93            		sub	e
  0025  C9            		ret
                      	
                      	
                      	;check sign of FAC1
                      	;input: FAC1
                      	;output: a(0:FAC1=0 1:FAC1>0 ff:FAC1<0), z(1:FAC1=0)
                      	;destroy: af
  0026                	_CHKSGN:ds	CHKSGN-_CHKSGN
  0028                		org	CHKSGN
  0028  3A6AFF        		ld	a,(FAC1+4)
  002B  B7            		or	a
  002C  C8            		ret	z
  002D  C30239        		jp	CHKSGN2
                      	
                      	
                      	;jump hook
  0030                	_JPHK2:	ds	JPHK2-_JPHK2
  0038                		org	JPHK2
                      	
  0038  C3E1FF        		jp	HOOK38H
                      	
                      	
                      	;hot start
  003B                	HOT:
                      	;initialize function key
  003B  217201        		ld	hl,FKEYLST
  003E  113DFB        		ld	de,FKEYTBL
  0041  0E0A          		ld	c,0ah
  0043                	SETFKLP1:
  0043  7E            		ld	a,(hl)
  0044  23            		inc	hl
  0045  E5            		push	hl		;
  0046  CDB525        		call	CNVASC
                      	
  0049  0608          		ld	b,08h
  004B                	SETFKLP2:
  004B  FE41          		cp	'A'
  004D  3806          		jr	c,SETFKC
  004F  FE5B          		cp	'Z'+1
  0051  3002          		jr	nc,SETFKC
  0053  C620          		add	a,'a'-'A'
  0055                	SETFKC:
  0055  05            		dec	b
  0056  12            		ld	(de),a
  0057  13            		inc	de
  0058  23            		inc	hl
  0059  7E            		ld	a,(hl)
  005A  B7            		or	a
  005B  F24B00        		jp	p,SETFKLP2
                      	
  005E  E1            		pop	hl		;
  005F  7E            		ld	a,(hl)
  0060  23            		inc	hl
                      	
  0061                	SETFKLP3:
  0061  12            		ld	(de),a
  0062  13            		inc	de
  0063  AF            		xor	a
  0064  10FB          		djnz	SETFKLP3
                      	
  0066  0D            		dec	c
  0067  20DA          		jr	nz,SETFKLP1
  0069  CDAE12        		call	PRTFKEY
                      	
                      	;check external ROM
  006C  210340        		ld	hl,4003h
  006F  CDE33F        		call	CHKEXTAB
  0072  200A          		jr	nz,SKIPMENU	;if (4000h)='A' and (4001h)='B'
  0074  CDE03F        		call	CHKEXTCD
  0077  3EA1          		ld	a,0a1h		;0000-5fff:BASIC ROM, 6000-7fff:external ROM
  0079  D3F0          		out	(0f0h),a
  007B  CD0040        		call	CHKEXT6000	;check 6000h and select mode
  007E                	SKIPMENU:
  007E  F5            		push	af		;a=mode-1, z=mode 5?
  007F  CD98FE        		call	CHGBANK
                      	
                      	;How Many Pages?
  0082                	PAGELP:
  0082  211D01        		ld	hl,HOWMANY
  0085  CDCF30        		call	PUTS
  0088  CD0529        		call	INPT1
  008B  D7            		rst	ANADAT
  008C  3807          		jr	c,PAGEOK
  008E  218CFD        		ld	hl,PAGES
  0091  5E            		ld	e,(hl)
  0092  57            		ld	d,a		;if return, a=0
  0093  1803          		jr	CHKPAGE
                      	
  0095                	PAGEOK:
  0095  CDD427        		call	ATOI2
  0098                	CHKPAGE:
  0098  7A            		ld	a,d
  0099  B7            		or	a
  009A  20E6          		jr	nz,PAGELP
                      	
  009C  7B            		ld	a,e
  009D  3D            		dec	a
  009E  218CFD        		ld	hl,PAGES
  00A1  BE            		cp	(hl)
  00A2  30DE          		jr	nc,PAGELP
  00A4  73            		ld	(hl),e
                      	
  00A5  CDDB34        		call	NEW
  00A8  211801        		ld	hl,ENDTBL-1
  00AB  19            		add	hl,de		;d=0
  00AC  66            		ld	h,(hl)
  00AD  2EFF          		ld	l,0ffh
  00AF  228DFD        		ld	(USREND),hl
  00B2  F1            		pop	af		;a=mode-1, z=mode 5?
                      	
  00B3  CA6F61        		jp	z,MODE5
  00B6  FE02          		cp	02h
  00B8  D24440        		jp	nc,SETTBL
                      	
  00BB                	MODE12:
  00BB  013200        		ld	bc,50
  00BE  CDBC35        		call	CLRMAIN
                      	
                      	;print start message
  00C1                	PRTSYS60:
  00C1  212F01        		ld	hl,SYSNAME
  00C4                	PRTSYS:
  00C4  CDCF30        		call	PUTS
  00C7  CDE934        		call	CHKFRE
  00CA  212F00        		ld	hl,002fh	;for compatibility with N6X-BASIC
  00CD  19            		add	hl,de
  00CE  CDA13A        		call	PUTI2
  00D1  210D01        		ld	hl,BFREE
  00D4                	PUTSEDIT:
  00D4  CDCF30        		call	PUTS
  00D7  C34204        		jp	EDIT
                      	
                      	
                      	;initialize table
  00DA                	IOTBL93:
  00DA  C0            		db	0c0h		;bit0: portC-lower=output
                      					;bit1: portB=output
                      					;bit2: portB,portC-lower=mode 0
                      					;bit3: portC-upper=output
                      					;bit4: portA=output
                      					;bit65:portA,portC-upper=mode 2
                      					;bit7: mode definition
  00DB  0D            		db	0dh		;enable 8255 INT for writing
  00DC  09            		db	09h		;enable 8255 INT for reading
  00DD  05            		db	05h		;CGROM off
  00DE  03            		db	03h		;CRTC
  00DF  0F            		db	0fh		;nobf=1 (for emulator?)
                      	
  00E0                	IOTBL81:
  00E0  12            		db	12h		;reset error, DTR=1, RxE/TxEN=0
  00E1  12            		db	12h		; set twice for synchronous mode
  00E2  52            		db	52h		;reset, reset error, DTR=1, RxE/TxEN=0
  00E3  4F            		db	4fh		;stop bits=1, parity disable,
                      					; character length=8bits, baud rate factor=64
  00E4  37            		db	37h		;reset error, RTS/DTR/RxE/TxEN=1
                      	
  00E5                	IOTBLF0:
  00E5  11            	F0:	db	11h		;0000-7fff:BASIC ROM
  00E6  DD            	F1:	db	0ddh		;8000-ffff:internal RAM for reading
  00E7  55            	F2:	db	55h		;0000-ffff:internal RAM for writing
  00E8  C2            	F3:	db	0c2h		;wait and interrupt control
                      					; bit7: M1 wait (1=on)
                      					; bit6: ROM wait (1=on)
                      					; bit5: RAM wait (1=on)
                      					; bit4: INT2 interrupt address (1=output)
                      					; bit3: INT1 interrupt address (1=output)
                      					; bit2: timer interrupt (1=disable)
                      					; bit1: INT2 interrupt (1=disable)
                      					; bit0: INT1 interrupt (1=disable)
  00E9  00            	F4:	db	00h		;INT1 address
  00EA  00            	F5:	db	00h		;INT2 address
  00EB  03            	F6:	db	03h		;timer count up
  00EC  06            	F7:	db	06h		;timer interrupt address
  00ED  C3            	F8:	db	0c3h		;CG rom access control
                      					; bit7: wait (0=off, 1=on)
                      					; bit6: read enable (0=disable, 1=enable)
                      					; bit5: bit2 mask (1=mask)
                      					; bit4: bit1 mask (1=mask)
                      					; bit3: bit0 mask (1=mask)
                      					; bit2-0: CGROM address (=A15-A13)
                      	
                      	;interrupt
  00EE                	INTTBL:
  00EE  B50E          		dw	INTKEY		;fa02 normal key
  00F0  590F          		dw	INT232		;fa04 RS-232C
  00F2  740F          		dw	INTTIM		;fa06 2ms timer
  00F4  9A0F          		dw	INTCMT		;fa08 CMT read
  00F6  A70F          		dw	EIRET		;fa0a ?
  00F8  A70F          		dw	EIRET		;fa0c ?
  00FA  A90F          		dw	INTWSTP		;fa0e CMT write stop
  00FC  A90F          		dw	INTRSTP		;fa10 CMT read stop
  00FE  B10F          		dw	INTERR		;fa12 CMT error
  0100  B00E          		dw	INTGRP		;fa14 GRAPH key etc.
  0102  D10E          		dw	INTGAM		;fa16 reply to game key query
                      	
                      	
  0104  00            		db	00h		;fa18 STOPFLG
  0105  00            		db	00h		;fa19 CMTSTAT
  0106  00            		db	00h		;fa1a INPDEV
  0107  0000          		db	00h, 00h
  0109  00            		db	00h		;fa1d CMTBUF
  010A  20            		db	' '		;fa1e ASTSTAT
  010B  FF            		db	0ffh		;fa1f BAUD
  010C  10            		db	ROWS		;fa20 HEIGHT
                      	
                      	
  010D                	BFREE:
  010D  20427974657320		db	" Bytes free", 00h
  0119                	ENDTBL:
  0119  F9DFBF9F      		db	0f9h, 0dfh, 0bfh, 9fh
  011D                	HOWMANY:
  011D  486F77204D616E		db	"How Many Pages", 00h
  012C                	QMARK:
  012C  3F2000        		db	"? ", 00h
  012F                	SYSNAME:
  012F  36309ADE96FD42		db	"60", 9ah, 0deh, 96h, 0fdh, "BASIC", 0dh, 0ah, 00h
                      	
  013D                	PAGEDATA:
  013D  80            		db	80h		;fd91	VRAM address
  013E  00            		db	00h		;fd92	screen 1st parameter-1
  013F  01            		db	01h		;fd93	color 1st parameter
  0140  00            		db	00h		;fd94	color 2nd parameter
  0141  00            		db	00h		;fd95	color 3rd parameter (1,2 -> 0,2)
  0142  010000        		db	01h, 00h, 00h	;fd96	screen mode 1 color parameters
  0145  010000        		db	01h, 00h, 00h	;fd99	screen mode 2 color parameters
  0148  020000        		db	02h, 00h, 00h	;fd9c	screen mode 3 color parameters
  014B  030000        		db	03h, 00h, 00h	;fd9f	screen mode 4 color parameters
  014E  01            		db	01h		;fda2	console 1st line number+1
  014F  10            		db	10h		;fda3	console last line number+1
  0150  01            		db	01h		;fda4	=(fda2)
  0151  0F            		db	0fh		;fda5	sc12:(fda3)-(fda6) sc34:(fda3)
  0152  01            		db	01h		;fda6	console 3rd parameter
  0153  00            		db	00h		;fda7	shift key status for function key disp
  0154  01            		db	01h		;fda8	cursor Y+1
  0155  01            		db	01h		;fda9	cursor X+1
  0156  00C2          		dw	0c200h		;fdaa	cursor address
  0158  20            		db	COLUMNS		;fdac	X max+1
  0159  00            		db	00h		;fdad
  015A  0000          		dw	0000h		;fdae	graphic X
  015C  0000          		dw	0000h		;fdb0	graphic Y
  015E  00            		db	00h		;fdb2
  015F  00            		db	00h		;fdb3
  0160  FF            		db	0ffh		;fdb4	LINEST-1
  0161  FF            		db	0ffh		;fdb5	LINEST
  0162  FF            		db	0ffh		;fdb6
  0163  FF            		db	0ffh		;fdb7
                      	
                      	
                      	;change 0000-7fffh to RAM
                      	;destroy: none
  0164                	_CHGRAM:ds	CHGRAM-_CHGRAM
  016B                		org	CHGRAM
                      	
  016B  F5            		push	af
  016C  3EDD          		ld	a,0ddh		;0000-7fff:internal RAM for reading
  016E  F3            		di
  016F  C3A1FE        		jp	OUTF0H
                      	
                      	
  0172                	FKEYLST:
  0172  9A20          		db	9ah, ' '	;COLOR
  0174  A322          		db	0a3h, 22h	;CLOAD"
  0176  8820          		db	GOTO_, ' '	;GOTO
  0178  9720          		db	97h, ' '	;LIST
  017A  890D          		db	RUN_, 0dh	;RUN
  017C  9F20          		db	9fh, ' '	;SCREEN
  017E  A422          		db	0a4h, 22h	;CSAVE"
  0180  9520          		db	PRINT_, ' '	;PRINT
  0182  A720          		db	0a7h, ' '	;PLAY
  0184  960D          		db	96h, 0dh	;CONT
                      	
                      	
  0186                	OPRTBL:
                      	;c4-c7
                      	;	dw					F_FN,	F_SPC,	F_INKY,	C_THEN
                      	;c8-cf
  0186  F80BC2036F3685		dw	O_NOT,	C_STEP,	O_PLS,	O_MNS,	O_MUL,	O_DIV,	O_POW,	O_AND
                      	;d0-d3
  0196  B60B0A0C      		dw	O_OR,	O_GTEQLT
                      	
  019A                	CMDLST:
                      	;80-8f
  019A  66357206DC35E0		dw	C_END,	C_FOR,	C_NEXT,	C_DATA,	C_INPT,	C_DIM,	C_READ,	C_LET
  01AA  A3078107320817		dw	C_GOTO,	C_RUN,	C_IF,	C_RSTR,	C_GSUB,	C_RET,	C_REM,	C_STOP
                      	;90-9f
  01BA  B60D0B087A0857		dw	C_OUT,	C_ON,	C_LPRT,	C_DEF,	C_POKE,	C_PRT,	C_CONT,	C_LIST
  01CA  CD0594359B1D38		dw	C_LLST,	C_CLR,	C_COLR,	C_PSET,	C_PRST,	C_LINE,	C_PAIN,	C_SCRN
                      	;a0-aa
  01DA  FB1DD21CF61C58		dw	C_CLS,	C_LOCA,	C_CNSL,	C_CLD,	C_CSV,	C_EXEC,	C_SOUN,	C_PLAY
  01EA  E4224C22CD34  		dw	C_KEY,	C_LCPY,	C_NEW
                      	
  01F0                	FNCLST:
                      	;d4-df
  01F0  0A3980391639CB		dw					F_SGN,	F_INT,	F_ABS,	F_USR
  01F8  1332A80D330D41		dw	F_FRE,	F_INP,	F_LPOS,	F_POS,	F_SQR,	F_RND,	F_LOG,	F_EXP
                      	;e0-ef
  0208  7A3D8D3D583EEE		dw	F_COS,	F_SIN,	F_TAN,	F_PEEK,	F_LEN,	SNERR,	F_STR,	F_VAL
  0218  AC31B631C031C7		dw	F_ASC,	F_CHR,	F_LEFT,	F_RGT,	F_MID,	F_POIN,	F_CSRL,	F_STCK
                      	;f0-f1
  0228  2C226C1E      		dw	F_STRG,	F_TIME
                      	
                      	
  022C                	CMDNAME:
  022C  C54E44C64F52CE		db	'E'+80h,"ND",	'F'+80h,"OR",	'N'+80h,"EXT",	'D'+80h,"ATA"
  023A  C94E505554C449		db	'I'+80h,"NPUT",	'D'+80h,"IM",	'R'+80h,"EAD",	'L'+80h,"ET"
  0249  C74F544FD2554E		db	'G'+80h,"OTO",	'R'+80h,"UN",	'I'+80h,"F",	'R'+80h,"ESTORE"
  0259  C74F535542D245		db	'G'+80h,"OSUB",	'R'+80h,"ETURN",'R'+80h,"EM",	'S'+80h,"TOP"
                      	
  026B  CF5554CF4ECC50		db	'O'+80h,"UT",	'O'+80h,"N",	'L'+80h,"PRINT",'D'+80h,"EF"
  0279  D04F4B45D05249		db	'P'+80h,"OKE",	'P'+80h,"RINT",	'C'+80h,"ONT",	'L'+80h,"IST"
  028A  CC4C495354C34C		db	'L'+80h,"LIST",	'C'+80h,"LEAR",	'C'+80h,"OLOR",	'P'+80h,"SET"
  029D  D05245534554CC		db	'P'+80h,"RESET",'L'+80h,"INE",	'P'+80h,"AINT",	'S'+80h,"CREEN"
                      	
  02B2  C34C53CC4F4341		db	'C'+80h,"LS",	'L'+80h,"OCATE",'C'+80h,"ONSOLE",'C'+80h,"LOAD"
  02C7  C353415645C558		db	'C'+80h,"SAVE",	'E'+80h,"XEC",	'S'+80h,"OUND",	'P'+80h,"LAY"
  02D9  CB4559CC434F50		db	'K'+80h,"EY",	'L'+80h,"COPY",	'N'+80h,"EW"
                      	
  02E4                	FNCNAME:
  02E4  D4414228D44F  		db					'T'+80h,"AB(",	'T'+80h,"O"
  02EA  C64ED3504328C9		db	'F'+80h,"N",	'S'+80h,"PC(",	'I'+80h,"NKEY$",'T'+80h,"HEN"
  02FA  CE4F54D3544550		db	'N'+80h,"OT",	'S'+80h,"TEP",	'+'+80h,	'-'+80h
  0303  AAAFDEC14E44  		db	'*'+80h,	'/'+80h,	'^'+80h,	'A'+80h,"ND"
                      	
  0309  CF52BEBDBC    		db	'O'+80h,"R",	'>'+80h,	'='+80h,	'<'+80h
  030E  D3474EC94E54C1		db	'S'+80h,"GN",	'I'+80h,"NT",	'A'+80h,"BS",	'U'+80h,"SR"
  031A  C65245C94E50CC		db	'F'+80h,"RE",	'I'+80h,"NP",	'L'+80h,"POS",	'P'+80h,"OS"
  0327  D35152D24E44CC		db	'S'+80h,"QR",	'R'+80h,"ND",	'L'+80h,"OG",	'E'+80h,"XP"
                      	
  0333  C34F53D3494ED4		db	'C'+80h,"OS",	'S'+80h,"IN",	'T'+80h,"AN",	'P'+80h,"EEK"
  0340  CC454EC8455824		db	'L'+80h,"EN",	'H'+80h,"EX$",	'S'+80h,"TR$",	'V'+80h,"AL"
  034E  C15343C3485224		db	'A'+80h,"SC",	'C'+80h,"HR$",	'L'+80h,"EFT$",	'R'+80h,"IGHT$"
  0360  CD494424D04F49		db	'M'+80h,"ID$",	'P'+80h,"OINT",	'C'+80h,"SRLIN",'S'+80h,"TICK"
                      	
  0374  D354524947D449		db	'S'+80h,"TRIG",	'T'+80h,"IME",	80h
                      	
                      	
  037E                	_ERRBELL:ds	ERRSTR-1-_ERRBELL
  0383                		org	ERRSTR-1
  0383                	ERRBELL:
  0383  07            		db	07h
                      	
  0384                	_ERRSTR:ds	ERRSTR-_ERRSTR
  0384                		org	ERRSTR
  0384  204572726F7200		db	" Error", 00h
                      	
  038B                	_ERRIN:	ds	ERRIN-_ERRIN
  038B                		org	ERRIN
  038B  20696E2000    		db	" in ", 00h
                      	
  0390                	_OK:
  0390                		ds	OK-_OK
  0390                		org	OK
  0390  4F6B0D0A00    		db	"Ok", 0dh, 0ah, 00h
                      	
  0395                	ERRID:
  0395  4E46534E52474F		db	"NF", "SN", "RG", "OD", "FC", "OV", "OM", "UL"
  03A5  425344442F3049		db	"BS", "DD", "/0", "ID", "TM", "OS", "LS", "ST"
  03B5  434E554654524D		db	"CN", "UF", "TR", "MO", "FD"
                      	
  03BF                	NFERR:
  03BF  1E00          		ld	e,00h
  03C1  01            		db	01h		;ld bc,****
                      	
  03C2                	C_TO:
  03C2                	C_TAB:
  03C2                	F_SPC:
  03C2                	C_THEN:
  03C2                	C_STEP:
                      	
                      	;mode 5 (unimplemnted)
  03C2                	C_RENM:
                      	
                      	
  03C2                	SNERR:
  03C2  1E02          		ld	e,02h
  03C4  01            		db	01h		;ld bc,****
  03C5                	RGERR:
  03C5  1E04          		ld	e,04h
  03C7  01            		db	01h		;ld bc,****
  03C8                	ODERR:
  03C8  1E06          		ld	e,06h
  03CA  01            		db	01h		;ld bc,****
  03CB                	FCERR:
  03CB                	F_USR:
  03CB  1E08          		ld	e,08h
  03CD  01            		db	01h		;ld bc,****
  03CE                	OVERR:
  03CE  1E0A          		ld	e,0ah
  03D0  01            		db	01h		;ld bc,****
  03D1                	OMERR:
  03D1  1E0C          		ld	e,0ch
  03D3  01            		db	01h		;ld bc,****
  03D4                	ULERR:
  03D4  1E0E          		ld	e,0eh
  03D6  01            		db	01h		;ld bc,****
  03D7                	BSERR:
  03D7  1E10          		ld	e,10h
  03D9  01            		db	01h		;ld bc,****
  03DA                	DDERR:
  03DA  1E12          		ld	e,12h
  03DC  01            		db	01h		;ld bc,****
  03DD                	DIV0ERR:
  03DD  1E14          		ld	e,14h
  03DF  01            		db	01h		;ld bc,****
  03E0                	IDERR:
  03E0  1E16          		ld	e,16h
  03E2  01            		db	01h		;ld bc,****
  03E3                	TMERR:
  03E3  1E18          		ld	e,18h
  03E5  01            		db	01h		;ld bc,****
  03E6                	OSERR:
  03E6  1E1A          		ld	e,1ah
  03E8  01            		db	01h		;ld bc,****
  03E9                	LSERR:
  03E9  1E1C          		ld	e,1ch
  03EB  01            		db	01h		;ld bc,****
  03EC                	STERR:
  03EC  1E1E          		ld	e,1eh
  03EE  01            		db	01h		;ld bc,****
  03EF                	CNERR:
  03EF  1E20          		ld	e,20h
  03F1  01            		db	01h		;ld bc,****
  03F2                	UFERR:
  03F2  1E22          		ld	e,22h
  03F4  01            		db	01h		;ld bc,****
  03F5                	TRERR:
  03F5  1E24          		ld	e,24h
  03F7  01            		db	01h		;ld bc,****
  03F8                	MOERR:
  03F8  1E26          		ld	e,26h
  03FA  01            		db	01h		;ld bc,****
  03FB                	FDERR:
  03FB  1E28          		ld	e,28h
                      	
  03FD                	ERROR:
  03FD  CD8DFF        		call	HOOKERR
  0400  ED7B5BFA      		ld	sp,(STACK)
                      	
                      	;	xor	a
                      	;	ld	(STRDSC2),a
                      	;	ld	(STRDSC3),a
                      	;	ld	(STRDSC4),a
                      	;	dec	a
                      	;	ld	(STOPAD+1),a	;(STOPAD)>=fa00h
                      	
  0404  2131FF        		ld	hl,STRDSC2
  0407  01000C        		ld	bc,0c00h
  040A                	ERRORLP:
  040A  71            		ld	(hl),c
  040B  23            		inc	hl
  040C  10FC          		djnz	ERRORLP
  040E  2254FF        		ld	(STOPAD),hl	;>=fa00h
                      	
  0411  CD5E09        		call	PRTNLXTXT
                      	
                      	;print error message
                      	;input: e=error number
                      	;destroy: af,bc,de,hl
  0414                	PRTERR:
  0414  219503        		ld	hl,ERRID
  0417  7B            		ld	a,e
  0418  FE2A          		cp	2ah
  041A  3E3F          		ld	a,'?'
  041C  3806          		jr	c,PRTERRC
  041E  21E541        		ld	hl,ERRIDEX-2ah
  0421  CD7510        		call	PRTC
  0424                	PRTERRC:
  0424  1600          		ld	d,00h
  0426  19            		add	hl,de
                      	
  0427  0603          		ld	b,03h
  0429                	PRTERRLP:
  0429  CD7510        		call	PRTC
  042C  7E            		ld	a,(hl)
  042D  23            		inc	hl
  042E  10F9          		djnz	PRTERRLP
                      	
  0430  218303        		ld	hl,ERRBELL
  0433  CDCF30        		call	PUTS
                      	
  0436                	PRTLNUM:
  0436  CDB31B        		call	PLSTOP
                      	
  0439  2A5DFA        		ld	hl,(LINENUM)
  043C  7C            		ld	a,h
  043D  A5            		and	l
  043E  3C            		inc	a
  043F  C4993A        		call	nz,INLNUM	;if (LINENUM)<>0ffffh
                      	;	jp	EDIT
                      	
                      	
                      	;program edit and direct command mode
  0442                	_EDIT:	ds	EDIT-_EDIT
  0442                		org	EDIT
                      	
  0442  CD93FF        		call	HOOKEDT
  0445  CD5810        		call	CLRKBF
  0448  CD5B09        		call	PRTNLXALL
  044B  219003        		ld	hl,OK
  044E  CDCF30        		call	PUTS
  0451                	EDIT2:
  0451  CD0127        		call	PUTPRNL
  0454  21FFFF        		ld	hl,0ffffh
  0457  225DFA        		ld	(LINENUM),hl
                      	
  045A                	EDITLP:
  045A  CDF928        		call	INPTSCR		;hl=INPBUF-1
  045D  DCB31B        		call	c,PLSTOP
  0460  CD6A04        		call	INPTPRG
  0463  28F5          		jr	z,EDITLP
  0465  D20A07        		jp	nc,INTPRT
  0468  1857          		jr	CHGLKP
                      	
                      	;input program or command
                      	;input: hl=INPBUF-1
                      	;output: z-flag(1=no input), c-flag(1=program changed, 0=command)
                      	;destroy: af,bc,de,hl
  046A                	INPTPRG:
  046A  E5            		push	hl		;hl=INPBUF-1
  046B  CD2D05        		call	CNVIL
  046E  E1            		pop	hl		;hl=INPBUF-1
  046F  D7            		rst	ANADAT		;
  0470  3C            		inc	a
  0471  3D            		dec	a
  0472  D0            		ret	nc		;
                      	
                      	;change program
  0473                	CHGPRG:
  0473  CD6B07        		call	GETLN
  0476  E5            		push	hl		;buffer address after line number
  0477  D5            		push	de		;line number
  0478  E5            		push	hl		;buffer address after line number
  0479  CDFA04        		call	SRCHLN
  047C  DCE404        		call	c,DELPRG	;c-flag=1
  047F  E1            		pop	hl		;buffer address after line number
  0480  34            		inc	(hl)
  0481  35            		dec	(hl)
  0482  2007          		jr	nz,INSPRG
  0484  D2D403        		jp	nc,ULERR
  0487  D1            		pop	de		;line number
  0488  E1            		pop	hl		;buffer address after line number
  0489  25            		dec	h		;reset z-flag
  048A  C9            		ret			;c-flag=1, delete line
                      	
                      	;insert program
  048B                	INSPRG:
  048B  AF            		xor	a
  048C  110500        		ld	de,0005h
  048F                	PRGLP:
  048F  1C            		inc	e
  0490  3C            		inc	a
  0491  23            		inc	hl
  0492  34            		inc	(hl)
  0493  35            		dec	(hl)
  0494  20F9          		jr	nz,PRGLP
                      	
  0496  2A56FF        		ld	hl,(VARAD)
  0499  E5            		push	hl
                      	;	or	a
  049A  ED42          		sbc	hl,bc
  049C  E5            		push	hl		;slide size
  049D  09            		add	hl,bc		;old (VARAD)
  049E  19            		add	hl,de		;old (VARAD)+size
  049F  CDEC34        		call	CHKSTK
  04A2  2256FF        		ld	(VARAD),hl
  04A5  EB            		ex	de,hl
  04A6  C1            		pop	bc		;slide size
  04A7  E1            		pop	hl		;old (VARAD)
  04A8  2B            		dec	hl
  04A9  1B            		dec	de
  04AA  EDB8          		lddr
                      	
  04AC                	COPYPRG:
  04AC  23            		inc	hl		;address to be inserted in
  04AD  23            		inc	hl
  04AE  13            		inc	de
  04AF  13            		inc	de
  04B0  73            		ld	(hl),e
  04B1  23            		inc	hl
  04B2  72            		ld	(hl),d
  04B3  23            		inc	hl
  04B4  D1            		pop	de		;line number
  04B5  73            		ld	(hl),e
  04B6  23            		inc	hl
  04B7  72            		ld	(hl),d
  04B8  23            		inc	hl
  04B9  EB            		ex	de,hl
  04BA  E1            		pop	hl		;buffer address after line number
                      	
  04BB  4F            		ld	c,a		;b=0
  04BC  EDB0          		ldir
  04BE  0C            		inc	c		;reset z-flag
  04BF  37            		scf
  04C0  C9            		ret
                      	
                      	
                      	;change link pointer
  04C1                	CHGLKP:
  04C1  CD99FF        		call	HOOKCLP
  04C4  CDF934        		call	RESSTK
  04C7  CDCC04        		call	CHGLKPMAIN
  04CA  1885          		jr	EDIT2
                      	
                      	
                      	;change link pointer (main)
                      	;output: hl=last address
                      	;destroy: af,bc,de
  04CC                	CHGLKPMAIN:
  04CC  ED5B5FFA      		ld	de,(STARTAD)
                      	;skip address and line number
  04D0                	CHGLKPLP:
  04D0  62            		ld	h,d
  04D1  6B            		ld	l,e
  04D2  7E            		ld	a,(hl)
  04D3  23            		inc	hl
  04D4  B6            		or	(hl)
  04D5  C8            		ret	z
                      	
  04D6  010300        		ld	bc,0003h
  04D9  09            		add	hl,bc
                      	
                      	;search for next line
  04DA  AF            		xor	a
  04DB  4F            		ld	c,a		;b=0
  04DC  EDB1          		cpir
                      	
                      	;next line address
  04DE  EB            		ex	de,hl
  04DF  73            		ld	(hl),e
  04E0  23            		inc	hl
  04E1  72            		ld	(hl),d
  04E2  18EC          		jr	CHGLKPLP
                      	
                      	
                      	;input: bc=address to be deleted, hl=next line address
                      	;output: c-flag=1
                      	;destroy: af,de,hl
  04E4                	DELPRG:
  04E4  C5            		push	bc		;address to be deleted
  04E5  EB            		ex	de,hl		;de <- next line address
  04E6  2A56FF        		ld	hl,(VARAD)
  04E9  B7            		or	a
  04EA  ED52          		sbc	hl,de
  04EC  44            		ld	b,h
  04ED  4D            		ld	c,l
  04EE  EB            		ex	de,hl		;hl <- next line address
  04EF  D1            		pop	de		;address to be deleted
  04F0  D5            		push	de
  04F1  EDB0          		ldir
  04F3  ED5356FF      		ld	(VARAD),de
  04F7  C1            		pop	bc
  04F8  37            		scf
  04F9  C9            		ret
                      	
                      	
                      	;search for line number
                      	;input: de=line number
                      	;output: z=1,c=1) bc=address, hl=next line address
                      	;	 z=0,c=0) bc=next line address, hl=next next line address
                      	;	 z=1,c=0) bc=hl=end address
                      	;destroy: af
  04FA                	SRCHLN:
  04FA  2A5DFA        		ld	hl,(LINENUM)
  04FD  E7            		rst	CPHLDE
  04FE  300C          		jr	nc,SRCHSTART	;less than or equal to current line number
  0500  2A4EFF        		ld	hl,(PROGAD)
  0503                	SRCHLP1:
  0503  7E            		ld	a,(hl)
  0504  23            		inc	hl
  0505  B7            		or	a
  0506  20FB          		jr	nz,SRCHLP1
                      	
                      	;for PORTOPIA (mk2)
                      	;	jr	SRCHLP2
  0508  CD0F05        		call	SRCHLP2
  050B  D8            		ret	c
                      	
  050C                	SRCHSTART:
  050C  2A5FFA        		ld	hl,(STARTAD)	;search from program start address
                      	
  050F                	SRCHLP2:
  050F  44            		ld	b,h
  0510  4D            		ld	c,l
  0511  7E            		ld	a,(hl)
  0512  23            		inc	hl
  0513  B6            		or	(hl)
  0514  2813          		jr	z,SRCHEND	;program end
  0516  23            		inc	hl
  0517  23            		inc	hl
  0518  7E            		ld	a,(hl)
  0519  2B            		dec	hl
  051A  BA            		cp	d
  051B  2002          		jr	nz,SRCHNZ
  051D  7E            		ld	a,(hl)
  051E  BB            		cp	e
  051F                	SRCHNZ:
  051F  0A            		ld	a,(bc)
  0520  2B            		dec	hl
  0521  66            		ld	h,(hl)
  0522  6F            		ld	l,a
  0523  38EA          		jr	c,SRCHLP2	;(hl,hl-1)-de
  0525  23            		inc	hl
  0526  2001          		jr	nz,SRCHEND	;(hl,hl-1)-de
  0528  37            		scf
  0529                	SRCHEND:
  0529  2B            		dec	hl
  052A  0B            		dec	bc
  052B  2B            		dec	hl
  052C  C9            		ret
                      	
                      	
                      	;convert to intermediate language
                      	;input: hl=INPBUF-1
  052D                	CNVIL:
  052D  54            		ld	d,h
  052E  5D            		ld	e,l
                      	
  052F                	ILLP1:
  052F  13            		inc	de
  0530  1A            		ld	a,(de)
                      	
  0531  B7            		or	a
  0532  FA2F05        		jp	m,ILLP1		;skip kana
                      	
  0535  23            		inc	hl
  0536  2827          		jr	z,ILEND1	;00=line end
                      	
  0538  CDAD0B        		call	CHKFIG
  053B  3818          		jr	c,ILPUT
                      	
  053D  FE22          		cp	22h		;double quotation mark
  053F  2817          		jr	z,ILDQ
  0541  FE14          		cp	14h
  0543  280C          		jr	z,ILGRP
  0545  FE2A          		cp	'*'
  0547  380C          		jr	c,ILPUT		;00h-29h
  0549  FE3F          		cp	'?'
  054B  203D          		jr	nz,ILCMP
                      	
                      	;question mark
  054D  3695          		ld	(hl),PRINT_	;95h
  054F  18DE          		jr	ILLP1
                      	
                      	;graphic character
  0551                	ILGRP:
  0551  77            		ld	(hl),a
  0552  23            		inc	hl
  0553  13            		inc	de
  0554                	ILPUT2:
  0554  1A            		ld	a,(de)
  0555                	ILPUT:
  0555  77            		ld	(hl),a
  0556  18D7          		jr	ILLP1
                      	
                      	
                      	;double quotation mark
  0558                	ILDQ:
  0558  77            		ld	(hl),a
                      	
                      	;REM
  0559                	ILREM:
  0559  4F            		ld	c,a		;double quotation mark or 0(REM)
  055A  0601          		ld	b,01h		;double quotation counter
                      	
                      	;REM,DATA,""
                      	;loop until (de)=0 or (de)=c
  055C                	ILLP2:
  055C  13            		inc	de
  055D  23            		inc	hl
  055E  1A            		ld	a,(de)
  055F                	ILEND1:
  055F  77            		ld	(hl),a
  0560  B7            		or	a
  0561  280E          		jr	z,ILEND2
  0563  FE22          		cp	22h
  0565  2001          		jr	nz,ILNZ
  0567  04            		inc	b
  0568                	ILNZ:
  0568  CB40          		bit	0,b
  056A  20F0          		jr	nz,ILLP2
  056C  B9            		cp	c
  056D  20ED          		jr	nz,ILLP2
  056F  18BE          		jr	ILLP1
                      	
  0571                	ILEND2:
  0571  23            		inc	hl
  0572  77            		ld	(hl),a		;a=0
  0573  23            		inc	hl
  0574  77            		ld	(hl),a		;a=0
  0575  C9            		ret
                      	
                      	
                      	;found
  0576                	ILFOUND:
  0576  F1            		pop	af		;cancel
  0577  E1            		pop	hl
  0578  70            		ld	(hl),b
  0579  78            		ld	a,b
  057A  D68E          		sub	REM_
  057C  28DB          		jr	z,ILREM
  057E  FEF5          		cp	DATA_-REM_
  0580  20AD          		jr	nz,ILLP1
                      	;DATA
  0582                	ILDAT:
  0582  013A00        		ld	bc,003ah	;b=0, c=':'
  0585  18D5          		jr	ILLP2
                      	
                      	
                      	;not found
  0587                	ILNC:
  0587  E1            		pop	hl
  0588  18CA          		jr	ILPUT2
                      	
                      	
                      	;compare with command string
  058A                	ILCMP:
  058A  CDEF0B        		call	TOUPPER
  058D  12            		ld	(de),a
                      	
  058E  E5            		push	hl
  058F  212C02        		ld	hl,CMDNAME
  0592  0680          		ld	b,80h
                      	
  0594                	ILLP3:
  0594  1A            		ld	a,(de)
  0595  F680          		or	80h
  0597  BE            		cp	(hl)
  0598  2018          		jr	nz,ILLP6
                      	
                      	;1st character matched
  059A  D5            		push	de
  059B                	ILLP4:
  059B  23            		inc	hl
  059C  7E            		ld	a,(hl)
  059D  07            		rlca
  059E  38D6          		jr	c,ILFOUND
                      	
  05A0  78            		ld	a,b
  05A1  FE88          		cp	GOTO_
  05A3                	ILLP5:
  05A3  13            		inc	de
  05A4  1A            		ld	a,(de)
  05A5  2004          		jr	nz,NOGOTO
  05A7  FE20          		cp	' '
  05A9  28F8          		jr	z,ILLP5
  05AB                	NOGOTO:
  05AB  CDEF0B        		call	TOUPPER
  05AE  BE            		cp	(hl)
  05AF  28EA          		jr	z,ILLP4
  05B1  D1            		pop	de
                      	
  05B2                	ILLP6:
  05B2  23            		inc	hl
  05B3  7E            		ld	a,(hl)
  05B4  07            		rlca
  05B5  30FB          		jr	nc,ILLP6
  05B7  04            		inc	b
                      	
  05B8  3A65FE        		ld	a,(MODE)
  05BB  FE02          		cp	02h
  05BD  D27742        		jp	nc,CNVIL66
                      	
  05C0  78            		ld	a,b
  05C1  FEF2          		cp	FNCLAST+1
  05C3  30C2          		jr	nc,ILNC
  05C5  FEAB          		cp	CMDLAST+1
  05C7  20CB          		jr	nz,ILLP3
  05C9  06C2          		ld	b,TAB_
  05CB  18C7          		jr	ILLP3
                      	
                      	
                      	;LLIST command
  05CD                	C_LLST:
  05CD  3E01          		ld	a,01h
  05CF  3258FA        		ld	(DEVICE),a
                      	;	jp	C_LIST
                      	
                      	
                      	;LIST command
  05D2                	C_LIST:
  05D2  F1            		pop	af		;cancel return address
  05D3  110000        		ld	de,0000h
  05D6  CD673F        		call	CHKCLN
  05D9  2814          		jr	z,LISTTOEND
                      	
  05DB  CD6B07        		call	GETLN
  05DE  D5            		push	de		;start line number
  05DF  CD673F        		call	CHKCLN
  05E2  281D          		jr	z,LISTSTRT
                      	
  05E4  FECB          		cp	MINUS_
  05E6  C2C203        		jp	nz,SNERR
  05E9  CD663F        		call	CHKCLNINC
  05EC  2007          		jr	nz,LISTNZ
  05EE  D1            		pop	de
  05EF                	LISTTOEND:
  05EF  01FAFF        		ld	bc,65530
  05F2  C5            		push	bc
  05F3  180C          		jr	LISTSTRT
                      	
  05F5                	LISTNZ:
  05F5  CD6B07        		call	GETLN
  05F8  CD673F        		call	CHKCLN
  05FB  C2C203        		jp	nz,SNERR
                      	
  05FE  E1            		pop	hl
  05FF  D5            		push	de		;push end line number
  0600  EB            		ex	de,hl		;de <- start line number
                      	
                      	
                      	;de=start line number, (sp)=end line number
  0601                	LISTSTRT:
  0601  CDFA04        		call	SRCHLN
  0604  60            		ld	h,b
  0605  69            		ld	l,c
                      	
  0606                	LISTLP1:
  0606  CD4D27        		call	STOPESC
                      	
  0609  23            		inc	hl
  060A  7E            		ld	a,(hl)
  060B  23            		inc	hl
  060C  B6            		or	(hl)
  060D  2843          		jr	z,LISTEND2
                      	
  060F  CD3927        		call	PUTNL
                      	
  0612  D1            		pop	de		;end line number
  0613  D5            		push	de
                      	
  0614  23            		inc	hl
  0615  7E            		ld	a,(hl)
  0616  23            		inc	hl
  0617  E5            		push	hl
  0618  66            		ld	h,(hl)
  0619  6F            		ld	l,a
                      	
  061A  13            		inc	de
  061B  E7            		rst	CPHLDE
  061C  3033          		jr	nc,LISTEND
                      	
  061E  CDA13A        		call	PUTI2
  0621  3E20          		ld	a,' '
  0623  CDC726        		call	PUTDEV
                      	
  0626  E1            		pop	hl
                      	
  0627  010000        		ld	bc,0000h	;double quotation mark and DATA counter
  062A  50            		ld	d,b		;REM counter
  062B                	LISTLP3:
  062B  23            		inc	hl
  062C  7E            		ld	a,(hl)
  062D  B7            		or	a
  062E  28D6          		jr	z,LISTLP1
                      	
  0630  FE22          		cp	22h
  0632  2822          		jr	z,LISTDQ
                      	
  0634  CB40          		bit	0,b
  0636  2014          		jr	nz,LISTPUT
                      	
  0638  0C            		inc	c
  0639  0D            		dec	c
  063A  201D          		jr	nz,LISTCHKCLN
                      	
  063C  14            		inc	d
  063D  15            		dec	d
  063E  200C          		jr	nz,LISTPUT
                      	
  0640  FE8E          		cp	REM_
  0642  281C          		jr	z,LISTREM
  0644  FE83          		cp	DATA_
  0646  2819          		jr	z,LISTDATA
  0648  B7            		or	a
  0649  FA6206        		jp	m,LISTCMD
  064C                	LISTPUT:
  064C  CDC726        		call	PUTDEV
  064F  18DA          		jr	LISTLP3
                      	
  0651                	LISTEND:
  0651  F1            		pop	af		;cancel stack
  0652                	LISTEND2:
  0652  F1            		pop	af		;cancel stack
  0653  C34204        		jp	EDIT
                      	
  0656                	LISTDQ:
  0656  04            		inc	b
  0657  18F3          		jr	LISTPUT
                      	
  0659                	LISTCHKCLN:
  0659  FE3A          		cp	':'
  065B  20EF          		jr	nz,LISTPUT
  065D  0D            		dec	c
  065E  18EC          		jr	LISTPUT
                      	
  0660                	LISTREM:
  0660  14            		inc	d
  0661                	LISTDATA:
  0661  0C            		inc	c
  0662                	LISTCMD:
  0662  E5            		push	hl
  0663  CDB525        		call	CNVASC
                      	
  0666                	LISTLP4:
  0666  CDC726        		call	PUTDEV
  0669  23            		inc	hl
  066A  7E            		ld	a,(hl)
  066B  B7            		or	a
  066C  F26606        		jp	p,LISTLP4
  066F  E1            		pop	hl
  0670  18B9          		jr	LISTLP3
                      	
                      	
                      	;FOR command
  0672                	C_FOR:
  0672  F1            		pop	af		;cancel return address
  0673  CD7A33        		call	CHKVAR
  0676  7E            		ld	a,(hl)
  0677  FE28          		cp	'('
  0679  CAC203        		jp	z,SNERR
                      	
  067C  CD9432        		call	GETVAR
  067F  2A4EFF        		ld	hl,(PROGAD)
                      	
  0682  D5            		push	de		;variable address
                      	
  0683  CD9B34        		call	VARIN
  0686  CD680B        		call	CHKNUM
  0689  7E            		ld	a,(hl)
  068A  FEC3          		cp	TO_
  068C  C2C203        		jp	nz,SNERR
  068F  CD5E0B        		call	NARGMOINC
  0692  EB            		ex	de,hl
  0693  CD1F39        		call	PUSHF1		;TO value
  0696  EB            		ex	de,hl
  0697  CD673F        		call	CHKCLN		;a=(hl)
  069A  224EFF        		ld	(PROGAD),hl
  069D  CC3F22        		call	z,SETPLS1	;no change in z-flag
  06A0  2808          		jr	z,STEP1
  06A2  FEC9          		cp	STEP_
  06A4  C2C203        		jp	nz,SNERR
  06A7  CD5E0B        		call	NARGMOINC
  06AA                	STEP1:
  06AA  CD4C39        		call	POPF2		;TO value
  06AD  C1            		pop	bc		;variable address
                      	
  06AE  2A4EFF        		ld	hl,(PROGAD)
  06B1  E5            		push	hl		;program address
  06B2  210200        		ld	hl,0002h
  06B5  39            		add	hl,sp
  06B6                	FORLP:
  06B6  CDD207        		call	SRCHSTK2
  06B9  280F          		jr	z,FOROK		;not found or gosub identifier found
                      	
                      	;check program address
  06BB  111100        		ld	de,0011h
  06BE  19            		add	hl,de
  06BF  5E            		ld	e,(hl)
  06C0  23            		inc	hl
  06C1  56            		ld	d,(hl)
  06C2  23            		inc	hl
  06C3  E3            		ex	(sp),hl
  06C4  E7            		rst	CPHLDE
  06C5  E3            		ex	(sp),hl
  06C6  20EE          		jr	nz,FORLP
                      	
  06C8  F9            		ld	sp,hl
  06C9  D5            		push	de		;program address
                      	
  06CA                	FOROK:
  06CA  2A5DFA        		ld	hl,(LINENUM)
  06CD  E5            		push	hl		;line number
  06CE  CD2E39        		call	PUSHF2		;TO value
  06D1  CD1F39        		call	PUSHF1		;STEP value
  06D4  C5            		push	bc		;variable address
  06D5  3E81          		ld	a,FOR_		;identifier
  06D7  F5            		push	af
  06D8  33            		inc	sp
  06D9  180C          		jr	INTPEND
                      	
                      	
                      	;
                      	;
                      	;
                      	;
  06DB                	_COMMAND:ds	CMDEND-14-_COMMAND
  06DC                		org	CMDEND-14
                      	
                      	;execute command
  06DC                	COMMAND:
  06DC  FEC2          		cp	CLAST66+1	;c2h
  06DE  D2C203        		jp	nc,SNERR
  06E1  1161FA        		ld	de,CMDTBL
  06E4  CD503F        		call	JPTBL
                      	
                      	;intepretation end
  06E7                	INTPEND:
  06E7  2A4EFF        		ld	hl,(PROGAD)
                      	
                      	;command end
  06EA                	_CMDEND:ds	CMDEND-_CMDEND
  06EA                		org	CMDEND
                      	
  06EA  2B            		dec	hl
  06EB  D7            		rst	ANADAT
                      	
                      	;	call	CHKCLN
                      	
  06EC  281C          		jr	z,INTPRT
  06EE  C3C203        		jp	SNERR
                      	
                      	
                      	;continued from C_RUN
  06F1                	RUNFIRST:
  06F1  2A5FFA        		ld	hl,(STARTAD)
                      	;	jr	RUNLP
                      	
  06F4                	RUNLP:
  06F4  7E            		ld	a,(hl)
  06F5  23            		inc	hl
  06F6  B6            		or	(hl)
  06F7  CA4204        		jp	z,EDIT
  06FA  23            		inc	hl
  06FB  5E            		ld	e,(hl)
  06FC  23            		inc	hl
  06FD  56            		ld	d,(hl)
  06FE  ED535DFA      		ld	(LINENUM),de
                      	
                      	
                      	;0709h: used by PORTOPIA
  0702                	_INTPRT2:ds	INTPRT2-_INTPRT2
  0709                		org	INTPRT2
                      	
  0709  23            		inc	hl
                      	
  070A                	INTPRT:
  070A  CD5B27        		call	CHKSTOP
  070D  CA3735        		jp	z,STOP1
  0710  7E            		ld	a,(hl)
  0711  23            		inc	hl
  0712  224EFF        		ld	(PROGAD),hl
  0715  B7            		or	a
  0716  FADC06        		jp	m,COMMAND
  0719  28D9          		jr	z,RUNLP
  071B  FE3A          		cp	':'
  071D  28EB          		jr	z,INTPRT
  071F  FE20          		cp	' '
  0721  28E7          		jr	z,INTPRT
  0723  2B            		dec	hl
  0724  C3FC07        		jp	VAR
                      	
                      	
                      	;continued from C_RUN
                      	;RUN with parmeter
  0727                	RUNPAR:
  0727  3807          		jr	c,RUNLN		;with line number
  0729  3A3BFB        		ld	a,(DRIVES)
  072C  B7            		or	a
  072D  C23957        		jp	nz,RUNDSK
                      	
                      	;RUN with line number
  0730                	RUNLN:
  0730  CDF934        		call	RESSTK
  0733  2A4EFF        		ld	hl,(PROGAD)
  0736  CDA307        		call	C_GOTO
  0739  60            		ld	h,b
  073A  69            		ld	l,c
  073B  23            		inc	hl
  073C  18B6          		jr	RUNLP
                      	
                      	
                      	;convert float to 2-byte integer for USR() [-32768,32767]
                      	;input: FAC1
                      	;output: de
                      	;destroy: af,bc,hl
  073E                	_FTOI2:	ds	FTOI2-_FTOI2
  0741                		org	FTOI2
                      	
  0741  CDBD0C        		call	FTOI
  0744  3A69FF        		ld	a,(FAC1+3)
  0747  AA            		xor	d
  0748  F0            		ret	p
  0749  C3CB03        		jp	FCERR
                      	
                      	
                      	;get a 1-byte integer for function
                      	;input: hl=program address
                      	;output: FAC1,e, hl=next address, a(0=ok)
                      	;destroy: FAC2,f,bc
  074C                	FNCI1:
  074C  CD530B        		call	FNCNUM
                      	;	jp	FTOI1
                      	
                      	
                      	;convert float to 1-byte integer
                      	;input: FAC1
                      	;output: e, a(0=ok)
                      	;destroy: f,bc,de,hl
  074F                	FTOI1:
  074F  CD4107        		call	FTOI2
  0752  7A            		ld	a,d
  0753  B7            		or	a
  0754  C8            		ret	z
  0755  C3CB03        		jp	FCERR
                      	
                      	
                      	;convert FAC1 and FAC2 to 2-byte integer
                      	;input: FAC1, FAC2
                      	;output: hl, de
                      	;destroy: af,bc,FAC1,FAC2
  0758                	F12TOI2:
  0758  3A25FF        		ld	a,(ARGTYP)
  075B  B7            		or	a
  075C  C2E303        		jp	nz,TMERR
  075F  CD4107        		call	FTOI2
  0762  D5            		push	de		;
  0763  CD6E39        		call	EXFAC
  0766  CD4107        		call	FTOI2
  0769  E1            		pop	hl		;
  076A  C9            		ret
                      	
                      	
                      	;get line number from string (0-65529)
                      	;input: hl=program address
                      	;output: de=line number, hl=next address
                      	;destroy: af,bc
  076B                	GETLN:
  076B  CDD427        		call	ATOI2
  076E  E5            		push	hl
  076F  21F9FF        		ld	hl,65529
  0772  E7            		rst	CPHLDE
  0773  E1            		pop	hl
  0774  D0            		ret	nc
  0775  119919        		ld	de,6553
  0778                	GETLNLP:
  0778  2B            		dec	hl
  0779  7E            		ld	a,(hl)
  077A  FE20          		cp	' '
  077C  C0            		ret	nz
  077D  18F9          		jr	GETLNLP
                      	
                      	
                      	;run command
  077F                	_C_RUN:	ds	C_RUN-_C_RUN
  0781                		org	C_RUN
                      	
  0781  2B            		dec	hl
  0782  D7            		rst	ANADAT
  0783  20A2          		jr	nz,RUNPAR	;with parameter
  0785  CDF934        		call	RESSTK
  0788  C3F106        		jp	RUNFIRST
                      	
                      	
                      	;GOSUB command
  078B                	C_GSUB:
  078B  CDA307        		call	C_GOTO
  078E  2B            		dec	hl
  078F                	GSUBLP:
  078F  CD663F        		call	CHKCLNINC
  0792  20FB          		jr	nz,GSUBLP
                      	
  0794  44            		ld	b,h
  0795  4D            		ld	c,l
                      	
  0796  CDE934        		call	CHKFRE
  0799  2A5DFA        		ld	hl,(LINENUM)
  079C  E3            		ex	(sp),hl
  079D  C5            		push	bc		;program address
  079E  3E8C          		ld	a,GOSUB_
  07A0  F5            		push	af		;gosub identifier
  07A1  33            		inc	sp
  07A2                	JPHL:
  07A2  E9            		jp	(hl)
                      	
                      	
                      	;GOTO command
                      	;output: bc=new address, hl=old address (after line number)
  07A3                	C_GOTO:
  07A3  CD6B07        		call	GETLN
  07A6  E5            		push	hl
  07A7  CDFA04        		call	SRCHLN
  07AA  E1            		pop	hl
  07AB  D2D403        		jp	nc,ULERR
  07AE  ED434EFF      		ld	(PROGAD),bc
  07B2  C9            		ret
                      	
                      	
                      	;RETURN command
  07B3                	C_RET:
  07B3  C1            		pop	bc		;return address
  07B4                	RETLP:
  07B4  CDCE07        		call	SRCHSTK
  07B7  D2C503        		jp	nc,RGERR	;not found
  07BA  2807          		jr	z,RETOK		;gosub identifier found
  07BC  211300        		ld	hl,0013h
  07BF  39            		add	hl,sp
  07C0  F9            		ld	sp,hl
  07C1  18F1          		jr	RETLP
                      	
  07C3                	RETOK:
  07C3  33            		inc	sp
  07C4  E1            		pop	hl
  07C5  224EFF        		ld	(PROGAD),hl
  07C8  E1            		pop	hl
  07C9  225DFA        		ld	(LINENUM),hl
  07CC  C5            		push	bc		;return address
  07CD  C9            		ret
                      	
                      	
                      	;search stack for for/gosub identifier
                      	;output: c-flag(1=found), z-flag(0=for/1=gosub if found)
                      	;destroy: af,de,hl
  07CE                	SRCHSTK:
  07CE  210200        		ld	hl,0002h
  07D1  39            		add	hl,sp
                      	
                      	;search (hl)
                      	;destroy: af,de
  07D2                	SRCHSTK2:
  07D2  ED5B5BFA      		ld	de,(STACK)
  07D6  E7            		rst	CPHLDE
  07D7  D0            		ret	nc		;(z-flag=1)
  07D8  7E            		ld	a,(hl)
  07D9  FE8C          		cp	GOSUB_
  07DB  37            		scf
  07DC  C9            		ret
                      	
                      	
                      	;DATA command
  07DD                	_C_DATA:ds	C_DATA-_C_DATA
  07E0                		org	C_DATA
                      	
  07E0  013A          		db	01h, ':'	;ld bc,0e3ah/nop
                      	
                      	
                      	;REM command
  07E2                	_C_REM:	ds	C_REM-_C_REM
  07E2                		org	C_REM
                      	
  07E2  0E00          		ld	c,00h
                      	
                      	;input: c
  07E4                	DATREM:
  07E4  0600          		ld	b,00h
  07E6                	DATALP:
  07E6  7E            		ld	a,(hl)
  07E7  B7            		or	a
  07E8  CA980B        		jp	z,SETPRGAD
                      	
  07EB  CB40          		bit	0,b
  07ED  2004          		jr	nz,DATANZ
  07EF  B9            		cp	c
  07F0  CA980B        		jp	z,SETPRGAD
  07F3                	DATANZ:
  07F3  23            		inc	hl
  07F4  FE22          		cp	22h		;double quotation mark
  07F6  20EE          		jr	nz,DATALP
  07F8  04            		inc	b
  07F9  18EB          		jr	DATALP
                      	
                      	
                      	;LET command
  07FB                	C_LET:
  07FB  F1            		pop	af		;cancel return address
  07FC                	VAR:
  07FC  CD7A33        		call	CHKVAR
  07FF  CD9432        		call	GETVAR
  0802  2A4EFF        		ld	hl,(PROGAD)
  0805  CD9B34        		call	VARIN
  0808  C3E706        		jp	INTPEND
                      	
                      	
                      	;ON command
  080B                	C_ON:
  080B  CDE40D        		call	INT1ARG
  080E  7E            		ld	a,(hl)
  080F  57            		ld	d,a		;
  0810  F604          		or	04h
  0812  FE8C          		cp	GOSUB_		;88h(GOTO) or 8ch(GOSUB)
  0814  C2C203        		jp	nz,SNERR
                      	
  0817                	ONLP:
  0817  23            		inc	hl
  0818  1D            		dec	e
  0819  280E          		jr	z,ONZ
  081B  D5            		push	de
  081C  CD6B07        		call	GETLN
  081F  224EFF        		ld	(PROGAD),hl
  0822  D1            		pop	de
  0823  7E            		ld	a,(hl)
  0824  FE2C          		cp	','
  0826  28EF          		jr	z,ONLP
  0828  C9            		ret
                      	
  0829                	ONZ:
  0829  7A            		ld	a,d		;
  082A  FE88          		cp	GOTO_
  082C  CAA307        		jp	z,C_GOTO
  082F  C38B07        		jp	C_GSUB
                      	
                      	
                      	;IF command
  0832                	C_IF:
  0832  CD5F0B        		call	NARGMO
  0835  7E            		ld	a,(hl)
  0836  FEC7          		cp	THEN_
  0838  2805          		jr	z,IFOK
  083A  FE88          		cp	GOTO_
  083C  C2C203        		jp	nz,SNERR
  083F                	IFOK:
  083F  3A6AFF        		ld	a,(FAC1+4)
  0842  B7            		or	a
  0843  289D          		jr	z,C_REM
                      	;	call	SKIPSPINC
                      	;	sub	'0'
                      	;	cp	'9'-'0'+1
                      	
  0845  D7            		rst	ANADAT
                      	
  0846  DAA307        		jp	c,C_GOTO
  0849                	IFEND:
  0849  224EFF        		ld	(PROGAD),hl
  084C  F1            		pop	af		;cancel return address
  084D  C30A07        		jp	INTPRT		;skip colon check
                      	
                      	
                      	;LPRINT command
  0850                	_C_LPRT:ds	C_LPRT-_C_LPRT
  087A                		org	C_LPRT
                      	
  087A  3E01          		ld	a,01h
  087C  1806          		jr	PRTDEV
                      	
                      	
                      	;PRINT command
  087E                	_C_PRT:	ds	C_PRT-_C_PRT
  087E                		org	C_PRT
                      	
  087E  CDAEFF        		call	HOOKPRT
  0881  CD7327        		call	DEVNUM
  0884                	PRTDEV:
  0884  3258FA        		ld	(DEVICE),a
  0887  07            		rlca
  0888  DCA825        		call	c,PRTOPN
                      	
  088B                	PRTLP1:
  088B  CD673F        		call	CHKCLN		;a=(hl)
  088E  284B          		jr	z,PRTEOL
  0890                	PRTLP2:
  0890  FE3B          		cp	';'
  0892  284F          		jr	z,PRTNEXT
  0894  FE2C          		cp	','
  0896  2848          		jr	z,PRTCMM
  0898  FEC5          		cp	SPC_
  089A  CA2909        		jp	z,PRTSPC
  089D  FEC2          		cp	TAB_
  089F  CA3909        		jp	z,PRTTAB
                      	
  08A2  CD6017        		call	ARG
  08A5  3A25FF        		ld	a,(ARGTYP)
  08A8  B7            		or	a
  08A9  2813          		jr	z,PRTNUM
                      	
                      	;string
  08AB  CD9326        		call	STRARG2
  08AE  2A4EFF        		ld	hl,(PROGAD)
  08B1  B7            		or	a
  08B2  28D7          		jr	z,PRTLP1
  08B4  47            		ld	b,a
  08B5                	PRTSLP:
  08B5  1A            		ld	a,(de)
  08B6  13            		inc	de
  08B7  CDC726        		call	PUTDEV
  08BA  10F9          		djnz	PRTSLP
  08BC  18CD          		jr	PRTLP1
                      	
  08BE                	PRTNUM:
  08BE  E5            		push	hl
  08BF  CDAC3A        		call	FTOA
                      	
  08C2  3AACFD        		ld	a,(WIDTH)
  08C5  C603          		add	a,03h
  08C7  4F            		ld	c,a
  08C8  AF            		xor	a
  08C9  EDB1          		cpir
  08CB  3AA9FD        		ld	a,(CSRX)
  08CE  B9            		cp	c
  08CF  D43927        		call	nc,PUTNL
  08D2  2172FF        		ld	hl,FAC3
  08D5  CDCF30        		call	PUTS
  08D8  E1            		pop	hl
  08D9  18B0          		jr	PRTLP1
                      	
  08DB                	PRTEOL:
                      	;	xor	a
                      	;	ld	(GRPFLG),a
  08DB  CD3927        		call	PUTNL
  08DE  1809          		jr	PRTEND
                      	
  08E0                	PRTCMM:
  08E0  CDFA08        		call	CMMMAIN
  08E3                	PRTNEXT:
  08E3  23            		inc	hl
  08E4                	PRTNEXT2:
  08E4  CD673F        		call	CHKCLN
  08E7  20A7          		jr	nz,PRTLP2
  08E9                	PRTEND:
  08E9  224EFF        		ld	(PROGAD),hl
  08EC  CD8DFF        		call	HOOKERR
  08EF  2158FA        		ld	hl,DEVICE
  08F2  7E            		ld	a,(hl)
  08F3  3600          		ld	(hl),00h
  08F5  07            		rlca
  08F6  D0            		ret	nc
  08F7  C3061B        		jp	WCLOSE
                      	
  08FA                	CMMMAIN:
  08FA  3A58FA        		ld	a,(DEVICE)
  08FD  B7            		or	a
  08FE  2808          		jr	z,CMM0	;CRT
  0900  3D            		dec	a
  0901  2818          		jr	z,CMM1	;printer
                      	
                      	;RS-232C,CMT
                      	;for PC-6001
                      	;	ld	b,0eh
                      	;	jr	PUTSPLP
                      	;for PC-6001mkII/6601/SR
  0903  3E2C          		ld	a,','
  0905  C3C726        		jp	PUTDEV
                      	
                      	;CRT
  0908                	CMM0:
  0908  3AA9FD        		ld	a,(CSRX)
  090B  D60F          		sub	0fh
  090D  D23927        		jp	nc,PUTNL
  0910                	CMMSP:
  0910  ED44          		neg
                      	;	call	PUTSP
                      	;	ret
                      	
                      	;a>0
  0912                	PUTSP:
  0912  47            		ld	b,a
  0913                	PUTSPLP:
  0913  3E20          		ld	a,' '
  0915  CDC726        		call	PUTDEV
  0918  10F9          		djnz	PUTSPLP
  091A  C9            		ret
                      	
                      	;printer
  091B                	CMM1:
  091B  3A57FA        		ld	a,(PRTPOS)
  091E  0608          		ld	b,08h
  0920                	CMM1LP:
  0920  D60E          		sub	0eh
  0922  38EC          		jr	c,CMMSP
  0924  10FA          		djnz	CMM1LP
  0926  C33927        		jp	PUTNL
                      	
  0929                	PRTSPC:
  0929  23            		inc	hl
  092A  CD560B        		call	FNCNUMR
  092D  E5            		push	hl
  092E  CD4F07        		call	FTOI1
  0931  E1            		pop	hl
  0932                	PRTSPC2:
  0932  7B            		ld	a,e
  0933                	PRTSPC3:
  0933  B7            		or	a
  0934  C41209        		call	nz,PUTSP
  0937  18AB          		jr	PRTNEXT2
                      	
  0939                	PRTTAB:
  0939  23            		inc	hl
  093A  CD560B        		call	FNCNUMR
  093D  E5            		push	hl
  093E  CD4F07        		call	FTOI1
  0941  E1            		pop	hl
                      	
  0942  3A58FA        		ld	a,(DEVICE)
  0945  B7            		or	a
  0946  2808          		jr	z,PRTTAB0	;0=CRT
  0948  3D            		dec	a
  0949  20E7          		jr	nz,PRTSPC2	;2,80-ff=RS-232C,CMT
                      	
                      	;printer
  094B                	PRTTAB1:
  094B  3A57FA        		ld	a,(PRTPOS)
  094E  1804          		jr	TABCOMMON
                      	
                      	;CRT
  0950                	PRTTAB0:
  0950  3AA9FD        		ld	a,(CSRX)
  0953  3D            		dec	a
  0954                	TABCOMMON:
  0954  93            		sub	e
  0955  308D          		jr	nc,PRTNEXT2
  0957  ED44          		neg
  0959  18D8          		jr	PRTSPC3
                      	
                      	
                      	;print new line in CRT (graphic and text screen)
  095B                	PRTNLXALL:
  095B  CD6109        		call	PRTNLX
                      	
                      	;change to text screen and print new line in CRT
                      	;if (CSRX)>1 then print new line
  095E                	PRTNLXTXT:
  095E  CD6D13        		call	CHGTXT
  0961                	PRTNLX:
  0961  AF            		xor	a
  0962  3258FA        		ld	(DEVICE),a
  0965  3AA9FD        		ld	a,(CSRX)
  0968  3D            		dec	a
  0969  C8            		ret	z
  096A  C33927        		jp	PUTNL
                      	
                      	
                      	;INPUT command
  096D                	C_INPT:
  096D  7C            		ld	a,h
  096E  FEFA          		cp	0fah
  0970  D2E003        		jp	nc,IDERR
  0973  2B            		dec	hl
  0974  2254FF        		ld	(STOPAD),hl
  0977  23            		inc	hl
                      	
  0978  CDBAFF        		call	HOOKINP
  097B  CD7327        		call	DEVNUM
  097E  321AFA        		ld	(INPDEV),a
  0981  47            		ld	b,a		;
  0982  B7            		or	a
  0983  CC6D13        		call	z,CHGTXT
  0986  E5            		push	hl		;program address
  0987  7E            		ld	a,(hl)
  0988  FE22          		cp	22h		;double quotation mark
  098A  2022          		jr	nz,INPTMAIN
                      	
  098C  78            		ld	a,b		;
  098D  B7            		or	a
  098E  C2C203        		jp	nz,SNERR
  0991  F1            		pop	af		;cancel program address
  0992                	PROMPT:
  0992  23            		inc	hl
  0993  7E            		ld	a,(hl)
  0994  B7            		or	a
  0995  CAC203        		jp	z,SNERR
  0998  FE22          		cp	22h		;double quotation mark
  099A  2805          		jr	z,PROMPTEND
  099C  CD7510        		call	PRTC
  099F  18F1          		jr	PROMPT
  09A1                	PROMPTEND:
  09A1  CD5F3F        		call	SKIPSPINC
  09A4  FE3B          		cp	';'
  09A6  C2C203        		jp	nz,SNERR
  09A9  23            		inc	hl
  09AA  224EFF        		ld	(PROGAD),hl
  09AD  E5            		push	hl		;program address
                      	
  09AE                	INPTMAIN:
  09AE  3A1AFA        		ld	a,(INPDEV)
  09B1  B7            		or	a
  09B2  C2FC23        		jp	nz,INPTEXT
                      	
  09B5  CD0529        		call	INPT1
                      	
  09B8  D1            		pop	de		;program address
  09B9  C1            		pop	bc		;return address
  09BA  DA3F35        		jp	c,STOP3
  09BD  C5            		push	bc		;return address
  09BE  D5            		push	de		;program address
                      	
  09BF  3EFF          		ld	a,0ffh
  09C1  3255FF        		ld	(STOPAD+1),a
                      	
                      	;analyze input buffer
  09C4                	INPTANA:
  09C4  11DAFE        		ld	de,INPBUF
  09C7                	INPTLP:
  09C7  2A4EFF        		ld	hl,(PROGAD)
  09CA  CD7A33        		call	CHKVAR
  09CD  224EFF        		ld	(PROGAD),hl
  09D0  3ADAFE        		ld	a,(INPBUF)
  09D3  B7            		or	a
  09D4  2834          		jr	z,INPTNEXT
                      	
  09D6  D5            		push	de		;input buffer
  09D7  CD9432        		call	GETVAR
  09DA  E1            		pop	hl		;input buffer
  09DB  CB79          		bit	7,c
  09DD  2060          		jr	nz,INPTSTR
                      	
  09DF                	INPTNUM:
  09DF  D5            		push	de		;variable address
  09E0  3EFF          		ld	a,0ffh
  09E2  CD9B39        		call	ATOF
  09E5  D1            		pop	de		;variable address
  09E6  E5            		push	hl		;input buffer
  09E7  2166FF        		ld	hl,FAC1
  09EA  CD300C        		call	SETF
  09ED  E1            		pop	hl		;input buffer
  09EE  7E            		ld	a,(hl)
  09EF  B7            		or	a
  09F0  2818          		jr	z,INPTNEXT
  09F2  FE2C          		cp	','
  09F4  2814          		jr	z,INPTNEXT
  09F6  3A1AFA        		ld	a,(INPDEV)
  09F9  B7            		or	a
  09FA  C2FB03        		jp	nz,FDERR
  09FD  214724        		ld	hl,REDO
  0A00  CDCF30        		call	PUTS
  0A03  E1            		pop	hl		;program address
  0A04  224EFF        		ld	(PROGAD),hl
  0A07  E5            		push	hl		;program address
  0A08  18A4          		jr	INPTMAIN
                      	
  0A0A                	INPTNEXT:
  0A0A  EB            		ex	de,hl
  0A0B  2A4EFF        		ld	hl,(PROGAD)
  0A0E  2B            		dec	hl
  0A0F  D7            		rst	ANADAT
  0A10  FE2C          		cp	','
  0A12  201F          		jr	nz,INPTEND
  0A14  23            		inc	hl
  0A15  224EFF        		ld	(PROGAD),hl
                      	
  0A18  3ADAFE        		ld	a,(INPBUF)
  0A1B  B7            		or	a
  0A1C  28A9          		jr	z,INPTLP
  0A1E  1A            		ld	a,(de)
  0A1F  13            		inc	de
  0A20  FE2C          		cp	','
  0A22  28A3          		jr	z,INPTLP
  0A24  3A1AFA        		ld	a,(INPDEV)
  0A27  B7            		or	a
  0A28  C2C803        		jp	nz,ODERR
  0A2B  3E3F          		ld	a,'?'
  0A2D  CD7510        		call	PRTC
  0A30  C3AE09        		jp	INPTMAIN
                      	
  0A33                	INPTEND:
  0A33  F1            		pop	af		;cancel program address
  0A34  1A            		ld	a,(de)
  0A35  FE2C          		cp	','
  0A37  C0            		ret	nz
  0A38  213624        		ld	hl,EXTRA
  0A3B  C3CF30        		jp	PUTS
                      	
                      	
  0A3E                	INPTSLP1:
  0A3E  23            		inc	hl
  0A3F                	INPTSTR:
  0A3F  7E            		ld	a,(hl)
  0A40  FE20          		cp	' '
  0A42  28FA          		jr	z,INPTSLP1
  0A44  0E00          		ld	c,00h		;double quotation mark count
  0A46  FE22          		cp	22h		;double quotation mark
  0A48  2002          		jr	nz,INPTSNZ
  0A4A  23            		inc	hl
  0A4B  0C            		inc	c
  0A4C                	INPTSNZ:
  0A4C  E5            		push	hl
  0A4D  0600          		ld	b,00h
                      	
  0A4F                	INPTSLP2:
  0A4F  79            		ld	a,c
  0A50  B7            		or	a
  0A51  7E            		ld	a,(hl)
  0A52  200B          		jr	nz,INPTCHKDQ
  0A54  FE2C          		cp	','
  0A56  280F          		jr	z,INPTSZ
  0A58                	INPTCHKZ:
  0A58  B7            		or	a
  0A59  280C          		jr	z,INPTSZ
  0A5B  23            		inc	hl
  0A5C  04            		inc	b
  0A5D  18F0          		jr	INPTSLP2
                      	
  0A5F                	INPTCHKDQ:
  0A5F  FE22          		cp	22h		;double quotation mark
  0A61  20F5          		jr	nz,INPTCHKZ
  0A63  0D            		dec	c
  0A64  23            		inc	hl
  0A65  18E8          		jr	INPTSLP2
                      	
  0A67                	INPTSZ:
  0A67  E3            		ex	(sp),hl		;push input buffer
  0A68  78            		ld	a,b
  0A69  D5            		push	de		;variable address
  0A6A  CD2326        		call	MAKESTR
  0A6D  D1            		pop	de		;variable address
  0A6E  212DFF        		ld	hl,STRDSC1
  0A71  010400        		ld	bc,0004h
  0A74  EDB0          		ldir
  0A76  E1            		pop	hl		;input buffer
  0A77  1891          		jr	INPTNEXT
                      	
                      	
                      	;READ command
  0A79                	C_READ:
  0A79  CD7A33        		call	CHKVAR
  0A7C  CD9432        		call	GETVAR
  0A7F  C5            		push	bc		;variable name
  0A80  D5            		push	de		;variable address
                      	
  0A81  2A5CFF        		ld	hl,(DATAAD)
  0A84  ED5B45FF      		ld	de,(DATALN)
  0A88  7E            		ld	a,(hl)
  0A89  FE2C          		cp	','
  0A8B  2847          		jr	z,READDATA
  0A8D  FE3A          		cp	':'
  0A8F  2810          		jr	z,READLP3
  0A91  B7            		or	a
  0A92  C2C803        		jp	nz,ODERR
                      	
  0A95                	READLP1:
  0A95  23            		inc	hl
  0A96                	READLP2:
  0A96  4F            		ld	c,a		;always a=0, double quation mark counter
  0A97  7E            		ld	a,(hl)
  0A98  23            		inc	hl
  0A99  B6            		or	(hl)
  0A9A  CAC803        		jp	z,ODERR
  0A9D  23            		inc	hl
  0A9E  5E            		ld	e,(hl)
  0A9F  23            		inc	hl
  0AA0  56            		ld	d,(hl)
                      	
  0AA1                	READLP3:
  0AA1  23            		inc	hl
  0AA2  7E            		ld	a,(hl)
  0AA3  B7            		or	a
  0AA4  28EF          		jr	z,READLP1
  0AA6  FE83          		cp	DATA_
  0AA8  282A          		jr	z,READDATA
  0AAA  FE22          		cp	22h		;double quotation mark
  0AAC  281D          		jr	z,READDQ
  0AAE  FE3A          		cp	':'
  0AB0  28EF          		jr	z,READLP3
  0AB2  FE20          		cp	' '
  0AB4  28EB          		jr	z,READLP3
  0AB6  D68E          		sub	REM_
  0AB8  2814          		jr	z,READREM
                      	
  0ABA                	READLP4:
  0ABA  23            		inc	hl
  0ABB  7E            		ld	a,(hl)
  0ABC  B7            		or	a
  0ABD  28D6          		jr	z,READLP1
  0ABF  CB41          		bit	0,c
  0AC1  2004          		jr	nz,SKIPCLN
  0AC3  FE3A          		cp	':'
  0AC5  28DA          		jr	z,READLP3
  0AC7                	SKIPCLN:
  0AC7  FE22          		cp	22h		;double quotation mark
  0AC9  20EF          		jr	nz,READLP4
  0ACB                	READDQ:
  0ACB  0C            		inc	c
  0ACC  18EC          		jr	READLP4
                      	
                      	;a=0
  0ACE                	READREM:
                      	;	xor	a
  0ACE  47            		ld	b,a
  0ACF  4F            		ld	c,a
  0AD0  EDB1          		cpir
  0AD2  18C2          		jr	READLP2
                      	
  0AD4                	READDATA:
  0AD4  ED5345FF      		ld	(DATALN),de
  0AD8  CD5F3F        		call	SKIPSPINC
                      	
  0ADB  D1            		pop	de		;variable address
  0ADC  C1            		pop	bc		;variable name
  0ADD  CB79          		bit	7,c
  0ADF  2022          		jr	nz,READSTR
                      	
  0AE1  B7            		or	a
  0AE2  280E          		jr	z,READNUM
  0AE4  FE26          		cp	'&'
  0AE6  280A          		jr	z,READNUM
  0AE8  FE2F          		cp	'/'
  0AEA  283F          		jr	z,READERR
  0AEC  D62B          		sub	'+'
  0AEE  FE0F          		cp	'9'-'+'+1	;+,-.0123456789
  0AF0  3039          		jr	nc,READERR
  0AF2                	READNUM:
  0AF2  D5            		push	de		;variable address
  0AF3  3EFF          		ld	a,0ffh
  0AF5  CD9B39        		call	ATOF
  0AF8  E3            		ex	(sp),hl		;push data address, pop variable address
  0AF9  EB            		ex	de,hl
  0AFA  2166FF        		ld	hl,FAC1
  0AFD  CD300C        		call	SETF
  0B00  E1            		pop	hl		;data address
  0B01  1842          		jr	READEND
                      	
  0B03                	READSTR:
  0B03  010000        		ld	bc,0000h	;b=double quotation mark?, c=length
  0B06  FE22          		cp	22h		;double quotation mark
  0B08  2002          		jr	nz,RDSNDQ
  0B0A  04            		inc	b
  0B0B  23            		inc	hl
  0B0C                	RDSNDQ:
  0B0C  13            		inc	de
  0B0D  13            		inc	de
  0B0E  7D            		ld	a,l
  0B0F  12            		ld	(de),a
  0B10  13            		inc	de
  0B11  7C            		ld	a,h
  0B12  12            		ld	(de),a
  0B13  1B            		dec	de
  0B14  1B            		dec	de
  0B15  1B            		dec	de
                      	
  0B16                	RDSLP2:
  0B16  7E            		ld	a,(hl)
  0B17  B7            		or	a
  0B18  2829          		jr	z,RDSEND
  0B1A  CB40          		bit	0,b
  0B1C  2816          		jr	z,RDSCHK
  0B1E  FE22          		cp	22h		;double quotation mark
  0B20  201A          		jr	nz,RDSNEXT
  0B22  CD663F        		call	CHKCLNINC
  0B25  281C          		jr	z,RDSEND
  0B27  FE2C          		cp	','
  0B29  2818          		jr	z,RDSEND
                      	
  0B2B                	READERR:
  0B2B  2A45FF        		ld	hl,(DATALN)
  0B2E  225DFA        		ld	(LINENUM),hl
  0B31  C3C203        		jp	SNERR
                      	
  0B34                	RDSCHK:
  0B34  FE2C          		cp	','
  0B36  280B          		jr	z,RDSEND
  0B38  FE3A          		cp	':'
  0B3A  2807          		jr	z,RDSEND
                      	
  0B3C                	RDSNEXT:
  0B3C  23            		inc	hl
  0B3D  0C            		inc	c
  0B3E  20D6          		jr	nz,RDSLP2
  0B40  C3E903        		jp	LSERR
                      	
  0B43                	RDSEND:
  0B43  79            		ld	a,c
  0B44  12            		ld	(de),a
                      	
  0B45                	READEND:
  0B45  225CFF        		ld	(DATAAD),hl
  0B48  2A4EFF        		ld	hl,(PROGAD)
  0B4B  7E            		ld	a,(hl)
  0B4C  FE2C          		cp	','
  0B4E  C0            		ret	nz
  0B4F  23            		inc	hl
  0B50  C3790A        		jp	C_READ
                      	
                      	
                      	;get a numerical argument for function
                      	;input: hl=program address
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  0B53                	FNCNUM:
  0B53  CD820B        		call	CHKLPAR
  0B56                	FNCNUMR:
  0B56  CD6017        		call	ARG
  0B59  CD910B        		call	CHKRPAR
  0B5C  180A          		jr	CHKNUM
                      	
                      	
                      	;get a numerical argument and check result (?MO Error)
                      	;input: hl=program address-1
                      	;output: FAC1, hl=next address
                      	;destroy: af,bc,de,FAC2
  0B5E                	NARGMOINC:
  0B5E  23            		inc	hl
                      	
                      	;get a numerical argument and check result (?MO Error)
                      	;input: hl=program address
                      	;output: FAC1, hl=next address
                      	;destroy: af,bc,de,FAC2
  0B5F                	NARGMO:
  0B5F  CD673F        		call	CHKCLN
  0B62  CAF803        		jp	z,MOERR
                      	;	call	NUMARG
                      	;	ret
                      	
                      	
                      	;get a numerical argument and check result
                      	;input: hl=program address
                      	;output: FAC1, hl=next address
                      	;destroy: af,bc,de,FAC2
  0B65                	NUMARG:
  0B65  CD6017        		call	ARG
                      	;	call	CHKNUM
                      	;	ret
                      	
                      	
                      	;check numeric or not
                      	;output: z-flag (1=ok)
                      	;destroy: af
  0B68                	CHKNUM:
  0B68  3A25FF        		ld	a,(ARGTYP)
  0B6B  B7            		or	a
  0B6C  C8            		ret	z
  0B6D  3D            		dec	a
  0B6E                	CHKNERR:
  0B6E  CAE303        		jp	z,TMERR
  0B71  C3C203        		jp	SNERR
                      	
                      	
                      	;check string argument or not
                      	;output: a=length, hl=string descriptor address, z-flag(1=ok)
                      	;destroy: f
  0B74                	CHKSTR:
  0B74  3A25FF        		ld	a,(ARGTYP)
  0B77  3D            		dec	a
  0B78  2005          		jr	nz,CHKSERR
  0B7A  2A67FF        		ld	hl,(FAC1+1)
  0B7D  7E            		ld	a,(hl)
  0B7E  C9            		ret
                      	
  0B7F                	CHKSERR:
  0B7F  3C            		inc	a
  0B80  18EC          		jr	CHKNERR
                      	
                      	
                      	;check (
                      	;input: hl=program address
                      	;output: hl=next address
                      	;destroy: af
  0B82                	CHKLPAR:
  0B82  CD603F        		call	SKIPSP
  0B85  FE28          		cp	'('
  0B87  C2C203        		jp	nz,SNERR
  0B8A  CD663F        		call	CHKCLNINC
  0B8D  C0            		ret	nz
  0B8E  C3F803        		jp	MOERR
                      	
                      	
                      	;check )
                      	;input: hl=program address
                      	;output: hl=next address
                      	;destroy: af
  0B91                	CHKRPAR:
  0B91  7E            		ld	a,(hl)
  0B92  FE29          		cp	')'
  0B94  C2C203        		jp	nz,SNERR
  0B97  23            		inc	hl
  0B98                	SETPRGAD:
  0B98  224EFF        		ld	(PROGAD),hl
  0B9B  C9            		ret
                      	
                      	
                      	;alphabet, numeral, or katakana? (case ignored)
  0B9C                	ALPNUM2:
  0B9C  FEE0          		cp	0e0h
  0B9E  3F            		ccf
  0B9F  D8            		ret	c
  0BA0  FEA1          		cp	0a1h
  0BA2  D0            		ret	nc
  0BA3  CDEF0B        		call	TOUPPER
                      	;	call	ALPNUM
                      	;	ret
                      	
                      	
                      	;alphabet (capital) or numeral?
                      	;input: a
                      	;output: c-flag(1=yes,0=no)
                      	;destroy: f
  0BA6                	ALPNUM:
  0BA6  FE5B          		cp	'Z'+1
  0BA8  D0            		ret	nc
  0BA9  FE41          		cp	'A'
  0BAB  3F            		ccf
  0BAC  D8            		ret	c
                      	;	jp	CHKFIG
                      	
                      	
                      	;analyze for 0010h
                      	;input: a
                      	;output: z-flag(1=00h or 3ah), c-flag(1=30h-39h)
                      	;destroy: f
  0BAD                	CHKFIG:
  0BAD  B7            		or	a
  0BAE  C8            		ret	z
  0BAF  FE30          		cp	'0'
  0BB1  3F            		ccf
  0BB2  D0            		ret	nc
  0BB3  FE3A          		cp	':'
                      	;	ret	z
                      	;	cp	'9'+1
  0BB5  C9            		ret
                      	
                      	
                      	;OR operator
  0BB6                	O_OR:
  0BB6  CD5807        		call	F12TOI2
  0BB9  7C            		ld	a,h
  0BBA  B2            		or	d
  0BBB  67            		ld	h,a
  0BBC  7D            		ld	a,l
  0BBD  B3            		or	e
  0BBE  6F            		ld	l,a
  0BBF  C3180D        		jp	S2TOF
                      	
                      	
                      	;AND operator
  0BC2                	O_AND:
  0BC2  CD5807        		call	F12TOI2
  0BC5  7C            		ld	a,h
  0BC6  A2            		and	d
  0BC7  67            		ld	h,a
  0BC8  7D            		ld	a,l
  0BC9  A3            		and	e
  0BCA  6F            		ld	l,a
  0BCB  C3180D        		jp	S2TOF
                      	
                      	
                      	;convert lowercase letter to uppercase letter
                      	;input: hl=data address
                      	;output: a
                      	;destroy: f
  0BCE                	_TOUPHL:ds	TOUPHL-_TOUPHL
  0BEE  7E            		ld	a,(hl)
                      	
                      	;input: a=data
  0BEF                	TOUPPER:
  0BEF  FE7B          		cp	'z'+1
  0BF1  D0            		ret	nc
  0BF2                	TOUPPER2:
  0BF2  FE61          		cp	'a'
  0BF4  D8            		ret	c
  0BF5  D620          		sub	'a'-'A'
  0BF7  C9            		ret
                      	
                      	
                      	;NOT operator
  0BF8                	O_NOT:
  0BF8  CD680B        		call	CHKNUM
  0BFB  CD6E39        		call	EXFAC
  0BFE  CD4107        		call	FTOI2
  0C01  7A            		ld	a,d
  0C02  2F            		cpl
  0C03  67            		ld	h,a
  0C04  7B            		ld	a,e
  0C05  2F            		cpl
  0C06  6F            		ld	l,a
  0C07  C3180D        		jp	S2TOF
                      	
                      	
                      	;>,=,< operator
                      	;bit0: >
                      	;bit1: =
                      	;bit2: <
  0C0A                	O_GTEQLT:
  0C0A  3A25FF        		ld	a,(ARGTYP)
  0C0D  B7            		or	a
  0C0E  280D          		jr	z,GTEQLTZ
  0C10  D603          		sub	03h		;string and string
  0C12  C2E303        		jp	nz,TMERR
  0C15  3225FF        		ld	(ARGTYP),a	;a=0
  0C18  CD400C        		call	CMPSTR
  0C1B  1803          		jr	GTEQLTEND
  0C1D                	GTEQLTZ:
  0C1D  CD223F        		call	CMPF
  0C20                	GTEQLTEND:
  0C20  79            		ld	a,c		;operator
  0C21  2803          		jr	z,CASE_EQ
  0C23  3002          		jr	nc,CASE_GT
  0C25                	CASE_LT:
  0C25  0F            		rrca
  0C26                	CASE_EQ:
  0C26  0F            		rrca
  0C27                	CASE_GT:
  0C27  0F            		rrca
  0C28  3811          		jr	c,SETTRUE
                      	;	jr	SETFALSE
                      	
  0C2A                	SETFALSE:
  0C2A                	SETZERO:
  0C2A  21AB0E        		ld	hl,ZERO
  0C2D                	SETF1:
  0C2D  1166FF        		ld	de,FAC1
  0C30                	SETF:
                      	;	ldi
                      	;	ldi
                      	;	ldi
                      	;	ldi
                      	;	ldi
  0C30  010500        		ld	bc,0005h
  0C33  EDB0          		ldir
  0C35  C9            		ret
                      	
  0C36                	SETF2:
  0C36  116DFF        		ld	de,FAC2
  0C39  18F5          		jr	SETF
                      	
  0C3B                	SETTRUE:
  0C3B                	SETMNS1:
  0C3B  21A60E        		ld	hl,MNSONE
  0C3E  18ED          		jr	SETF1
                      	
                      	
  0C40                	CMPSTR:
  0C40  2139FF        		ld	hl,STRDSC4
  0C43  46            		ld	b,(hl)
  0C44  3600          		ld	(hl),00h
  0C46  3A2DFF        		ld	a,(STRDSC1)
  0C49  B8            		cp	b
  0C4A  F5            		push	af		;flag
  0C4B  3801          		jr	c,CMPSNC
  0C4D  78            		ld	a,b
  0C4E                	CMPSNC:
  0C4E  B7            		or	a
  0C4F  2810          		jr	z,CMPSZ
                      	
  0C51  ED5B2FFF      		ld	de,(STRDSC1+2)
  0C55  2A3BFF        		ld	hl,(STRDSC4+2)
  0C58  47            		ld	b,a
  0C59                	CMPSLP:
  0C59  1A            		ld	a,(de)
  0C5A  BE            		cp	(hl)
  0C5B  2006          		jr	nz,CMPSNZ
  0C5D  13            		inc	de
  0C5E  23            		inc	hl
  0C5F  10F8          		djnz	CMPSLP
  0C61                	CMPSZ:
  0C61  F1            		pop	af		;flag
  0C62  C9            		ret
                      	
  0C63                	CMPSNZ:
  0C63  E1            		pop	hl		;cancel stack
  0C64  C9            		ret
                      	
                      	
                      	;input: a=integer (unsigned)
  0C65                	I1TOFA:
  0C65  6F            		ld	l,a
                      	
                      	;convert 1- or 2-byte integer to float
                      	;input: hl=integer (unsigned)
                      	;output: FAC1
                      	;destroy: af,b,hl
  0C66                	I1TOF:
  0C66  2600          		ld	h,00h
  0C68                	I2TOF:
  0C68  D5            		push	de
  0C69  110000        		ld	de,0000h
  0C6C  7C            		ld	a,h
  0C6D  B5            		or	l
  0C6E  280F          		jr	z,I2TOFZERO
  0C70  0610          		ld	b,10h
  0C72                	I2TOFLP:
  0C72  29            		add	hl,hl
  0C73  3802          		jr	c,I2TOFEND
  0C75  10FB          		djnz	I2TOFLP
                      	
  0C77                	I2TOFEND:
  0C77  CB3C          		srl	h
  0C79  CB1D          		rr	l
  0C7B  EB            		ex	de,hl
  0C7C                	I2TOFEND2:
  0C7C  78            		ld	a,b
  0C7D  C680          		add	a,80h
  0C7F                	I2TOFZERO:
                      	;	ld	(FAC1),hl
                      	;	ld	(FAC1+2),de
  0C7F  326AFF        		ld	(FAC1+4),a
  0C82  CD8837        		call	SETI4
  0C85  D1            		pop	de
  0C86  C9            		ret
                      	
                      	
                      	;convert float to 4-byte integer (>=0)
                      	;(round toward zero)
                      	;input: FAC1
                      	;output: FAC1 (integer)
                      	;destroy: af,b,de,hl
  0C87                	FTOI4:
  0C87  3EA0          		ld	a,81h+1fh
  0C89  216AFF        		ld	hl,FAC1+4
  0C8C  96            		sub	(hl)		;
  0C8D  47            		ld	b,a
  0C8E  2A66FF        		ld	hl,(FAC1)
  0C91  ED5B68FF      		ld	de,(FAC1+2)
  0C95  CBFA          		set	7,d
  0C97  280A          		jr	z,FTOI4END	;
  0C99                	FTOI4LP:
  0C99  CB3A          		srl	d
  0C9B  CB1B          		rr	e
  0C9D  CB1C          		rr	h
  0C9F  CB1D          		rr	l
  0CA1  10F6          		djnz	FTOI4LP
  0CA3                	FTOI4END:
                      	;	ld	(FAC1),hl
                      	;	ld	(FAC1+2),de
                      	;	ret
  0CA3  C38837        		jp	SETI4
                      	
                      	
                      	;convert 4-byte integer to float (unsigned)
                      	;input: de-hl
                      	;output: FAC1
                      	;destroy: af,b,hl
  0CA6                	I4TOF:
  0CA6  D5            		push	de
  0CA7  7A            		ld	a,d
  0CA8  B3            		or	e
  0CA9  B4            		or	h
  0CAA  B5            		or	l
  0CAB  28D2          		jr	z,I2TOFZERO
                      	
  0CAD  7A            		ld	a,d
  0CAE  0620          		ld	b,20h
  0CB0                	I4TOFLP:
  0CB0  C680          		add	a,80h
  0CB2  3806          		jr	c,I4TOFEND
  0CB4  29            		add	hl,hl
  0CB5  CB13          		rl	e
  0CB7  17            		rla
  0CB8  10F6          		djnz	I4TOFLP
                      	
  0CBA                	I4TOFEND:
  0CBA  57            		ld	d,a
  0CBB  18BF          		jr	I2TOFEND2
                      	
                      	
                      	;convert float to 2-byte integer [-65535,65535]
                      	;(round toward minus infinity)
                      	;input: FAC1
                      	;output: de
                      	;destroy: af,bc,hl
  0CBD                	FTOI:
  0CBD  110000        		ld	de,0000h
  0CC0  3A6AFF        		ld	a,(FAC1+4)
  0CC3  B7            		or	a
  0CC4  C8            		ret	z
  0CC5  D691          		sub	91h
  0CC7  D2CB03        		jp	nc,FCERR
  0CCA  ED44          		neg
  0CCC  47            		ld	b,a
                      	
  0CCD  2A66FF        		ld	hl,(FAC1)
  0CD0  7C            		ld	a,h
  0CD1  B5            		or	l		;fraction
                      	
  0CD2  2A68FF        		ld	hl,(FAC1+2)
  0CD5  4C            		ld	c,h		;sign
  0CD6  CBFC          		set	7,h
  0CD8  05            		dec	b
  0CD9  2809          		jr	z,FTOIZ
  0CDB                	FTOILP:
  0CDB  CB3C          		srl	h
  0CDD  CB1D          		rr	l
  0CDF  3001          		jr	nc,FTOINC
  0CE1  07            		rlca			;a>0
  0CE2                	FTOINC:
  0CE2  10F7          		djnz	FTOILP
                      	
  0CE4                	FTOIZ:
  0CE4  EB            		ex	de,hl
  0CE5  CB79          		bit	7,c		;sign
  0CE7  C8            		ret	z
                      	
  0CE8  ED44          		neg			;set c-flag if a>0
  0CEA  ED52          		sbc	hl,de
  0CEC  EB            		ex	de,hl
  0CED  C9            		ret
                      	
                      	
                      	;get integer part from float
                      	;(round toward zero)
                      	;input: FAC1
                      	;output: FAC1
                      	;destroy: af,b,hl
  0CEE                	GETINT:
  0CEE  3A6AFF        		ld	a,(FAC1+4)
  0CF1  FE81          		cp	81h
  0CF3  DA2A0C        		jp	c,SETZERO
  0CF6  D6A0          		sub	0a0h
  0CF8  D0            		ret	nc
  0CF9  2166FF        		ld	hl,FAC1
  0CFC                	GETILP1:
  0CFC  C608          		add	a,08h		;
  0CFE  3805          		jr	c,GETIC
  0D00  3600          		ld	(hl),00h
  0D02  23            		inc	hl
  0D03  18F7          		jr	GETILP1
  0D05                	GETIC:
  0D05  47            		ld	b,a
  0D06  04            		inc	b
  0D07  AF            		xor	a
  0D08                	GETILP2:
  0D08  1F            		rra
  0D09  37            		scf
  0D0A  10FC          		djnz	GETILP2
  0D0C  A6            		and	(hl)
  0D0D  77            		ld	(hl),a
  0D0E  C9            		ret
                      	
                      	
                      	;convert 1-byte signed integer to float
                      	;input: b=integer (signed)
                      	;output: FAC1
                      	;destroy: af,bc,hl
  0D0F                	_S1TOF:	ds	ABTOF-5-_S1TOF
  0D11                		org	ABTOF-5
  0D11                	S1TOF:
  0D11  78            		ld	a,b
  0D12  07            		rlca
  0D13  9F            		sbc	a,a		;a=0(b<80h) or ffh(b>=80h)
  0D14  1800          		jr	ABTOF
                      	
                      	
                      	;convert 2-byte integer to float for USR()
                      	;input: ab
                      	;output: FAC1
                      	;destroy: af,bc,hl
  0D16                	_ABTOF:	ds	ABTOF-_ABTOF
  0D16                		org	ABTOF
                      	
  0D16  67            		ld	h,a
  0D17  68            		ld	l,b
                      	;	jr	S2TOF
                      	
                      	
                      	;convert 2-byte signed integer to float
                      	;input: hl=integer (signed)
                      	;output: FAC1
                      	;destroy: af,b,hl
  0D18                	S2TOF:
  0D18  CB7C          		bit	7,h
  0D1A  CA680C        		jp	z,I2TOF
  0D1D  AF            		xor	a
  0D1E  95            		sub	l
  0D1F  6F            		ld	l,a
  0D20  9C            		sbc	a,h
  0D21  95            		sub	l
  0D22  67            		ld	h,a
  0D23  CD680C        		call	I2TOF
  0D26  1805          		jr	NEGABSNZ
                      	
                      	
                      	;FAC1=-abs(FAC1)
                      	;destroy: af,hl
  0D28                	NEGABS:
  0D28  3A6AFF        		ld	a,(FAC1+4)
  0D2B  B7            		or	a
  0D2C  C8            		ret	z
                      	
                      	;FAC1=-abs(FAC1) without checking zero
                      	;destroy: f,hl
  0D2D                	NEGABSNZ:
  0D2D  2169FF        		ld	hl,FAC1+3
  0D30  CBFE          		set	7,(hl)
  0D32  C9            		ret
                      	
                      	
                      	;LPOS() function
  0D33                	F_LPOS:
  0D33  3A25FF        		ld	a,(ARGTYP)
  0D36  FE02          		cp	02h
  0D38  D2C203        		jp	nc,SNERR
  0D3B  2A57FA        		ld	hl,(PRTPOS)
  0D3E  C3A431        		jp	SETI1
                      	
                      	
                      	;POS() function
  0D41                	F_POS:
  0D41  3A25FF        		ld	a,(ARGTYP)
  0D44  FE02          		cp	02h
  0D46  D2C203        		jp	nc,SNERR
  0D49  2AA9FD        		ld	hl,(CSRX)
  0D4C  2D            		dec	l
  0D4D  C3A431        		jp	SETI1
                      	
                      	
                      	;CSRLINE function
  0D50                	F_CSRL:
  0D50  2AA8FD        		ld	hl,(CSRY)
  0D53  2D            		dec	l
  0D54  C3660C        		jp	I1TOF
                      	
                      	
                      	;DEF command
  0D57                	C_DEF:
  0D57  ED5B5DFA      		ld	de,(LINENUM)
  0D5B  7A            		ld	a,d
  0D5C  A3            		and	e
  0D5D  3C            		inc	a
  0D5E  CAE003        		jp	z,IDERR
  0D61  CD603F        		call	SKIPSP
  0D64  FEC4          		cp	FN_
  0D66  C2C203        		jp	nz,SNERR
  0D69  23            		inc	hl
  0D6A  CD7A33        		call	CHKVAR
  0D6D  CB79          		bit	7,c
  0D6F  C2E303        		jp	nz,TMERR
  0D72  CBF8          		set	7,b
  0D74  E5            		push	hl		;program address
  0D75  CDAC33        		call	SRCHVAR
  0D78  DCD633        		call	c,MAKEVAR
  0D7B  E1            		pop	hl		;program address
  0D7C  CD820B        		call	CHKLPAR
  0D7F  CD7A33        		call	CHKVAR
  0D82  CB79          		bit	7,c
  0D84  C2E303        		jp	nz,TMERR
  0D87  CD910B        		call	CHKRPAR
  0D8A  CD603F        		call	SKIPSP
  0D8D  FED2          		cp	EQ_
  0D8F  C2C203        		jp	nz,SNERR
  0D92  CD5F3F        		call	SKIPSPINC
                      	
  0D95  EB            		ex	de,hl
  0D96  73            		ld	(hl),e
  0D97  23            		inc	hl
  0D98  72            		ld	(hl),d
  0D99  23            		inc	hl
  0D9A  70            		ld	(hl),b
  0D9B  23            		inc	hl
  0D9C  71            		ld	(hl),c
                      	;	inc	hl
                      	;	ld	(hl),00h
  0D9D  EB            		ex	de,hl
                      	
  0D9E  2B            		dec	hl
  0D9F                	DEFLP:
  0D9F  CD663F        		call	CHKCLNINC
  0DA2  20FB          		jr	nz,DEFLP
                      	
  0DA4  224EFF        		ld	(PROGAD),hl
  0DA7  C9            		ret
                      	
                      	
                      	;INP() function
  0DA8                	F_INP:
  0DA8  CD680B        		call	CHKNUM
  0DAB  CD4F07        		call	FTOI1
  0DAE  42            		ld	b,d		;d=0
  0DAF  4B            		ld	c,e
  0DB0  ED68          		in	l,(c)
  0DB2  62            		ld	h,d		;d=0
  0DB3  C3680C        		jp	I2TOF
                      	
                      	
                      	;OUT command
  0DB6                	C_OUT:
  0DB6  CD320E        		call	INT1ARG2
  0DB9  ED59          		out	(c),e
  0DBB  C9            		ret
                      	
                      	
  0DBC                	MODESTR:
  0DBC  0D0A4D4F444520		db	0dh, 0ah, "MODE ",00h
  0DC4                	PAGESTR:
  0DC4  2050414745530D		db	" PAGES", 0dh, 0ah, 00h
  0DCD                	FILESTR:
  0DCD  2046494C45530D		db	" FILES", 0dh, 0ah, 00h
                      	
                      	
                      	;increment hl and get a 1-byte integer argument [0,255]
  0DD6                	_INT1INC:ds	INT1INC-_INT1INC
  0DE3                		org	INT1INC
                      	
  0DE3  23            		inc	hl
                      	
                      	;get a 1-byte integer argument [0,255]
                      	;input: hl=program address
                      	;output: FAC1,a,de=integer, hl=next address
                      	;destroy: FAC2,f,bc
  0DE4                	_INT1ARG:ds	INT1ARG-_INT1ARG
  0DE4                		org	INT1ARG
                      	
  0DE4  CD190E        		call	INT2ARG
  0DE7  7A            		ld	a,d
  0DE8  B7            		or	a
  0DE9  7B            		ld	a,e
  0DEA  C8            		ret	z
  0DEB  C3CB03        		jp	FCERR
                      	
                      	
                      	;PEEK() function
  0DEE                	F_PEEK:
  0DEE  CD680B        		call	CHKNUM
  0DF1  CDBD0C        		call	FTOI
  0DF4  1A            		ld	a,(de)
  0DF5  C3650C        		jp	I1TOFA
                      	
                      	
                      	;POKE command
  0DF8                	C_POKE:
  0DF8  CD5F0B        		call	NARGMO
  0DFB  7E            		ld	a,(hl)
  0DFC  FE2C          		cp	','
  0DFE  C2C203        		jp	nz,SNERR
  0E01  E5            		push	hl
  0E02  CDBD0C        		call	FTOI
  0E05  E1            		pop	hl
  0E06  D5            		push	de		;
  0E07  CD5E0B        		call	NARGMOINC
  0E0A  CD4F07        		call	FTOI1
  0E0D  E1            		pop	hl		;
  0E0E  73            		ld	(hl),e
  0E0F  C9            		ret
                      	
                      	
                      	;get a 2-byte integer argument [-65535,65535]
                      	;input: hl=program address
                      	;output: FAC1,de=integer, hl=next address
                      	;destroy: FAC2,af,bc
  0E10                	INTARG:
  0E10  CD5F0B        		call	NARGMO
  0E13  E5            		push	hl
  0E14  CDBD0C        		call	FTOI
  0E17  E1            		pop	hl
  0E18  C9            		ret
                      	
                      	
                      	;get a 2-byte integer argument [-32768,32767]
                      	;input: hl=program address
                      	;output: FAC1,de=integer, hl=next address
                      	;destroy: FAC2,af,bc
  0E19                	INT2ARG:
  0E19  CD5F0B        		call	NARGMO
  0E1C  E5            		push	hl
  0E1D  CD4107        		call	FTOI2
  0E20  E1            		pop	hl
  0E21  C9            		ret
                      	
                      	
                      	;get two 2-byte integer arguments [-65535,65535]
                      	;input: hl=program address
                      	;output: FAC1, bc=1st, de=2nd, hl=next address
                      	;destroy: af
  0E22                	INTARG2:
  0E22  CD100E        		call	INTARG
  0E25  7E            		ld	a,(hl)
  0E26  FE2C          		cp	','
  0E28  C2C203        		jp	nz,SNERR
  0E2B  23            		inc	hl
  0E2C  D5            		push	de		;
  0E2D  CD100E        		call	INTARG
  0E30  C1            		pop	bc		;
  0E31  C9            		ret
                      	
                      	
                      	;get two 1-byte integer arguments [0,255]
                      	;input: hl=program address
                      	;output: FAC1, bc=1st, de=2nd, hl=next address
                      	;destroy: af
  0E32                	INT1ARG2:
  0E32  CDE40D        		call	INT1ARG
  0E35  7E            		ld	a,(hl)
  0E36  FE2C          		cp	','
  0E38  C2C203        		jp	nz,SNERR
  0E3B  D5            		push	de
  0E3C  CDE30D        		call	INT1INC
  0E3F  C1            		pop	bc
  0E40  C9            		ret
                      	
                      	
                      	;convert character VRAM address to attribute address
                      	;input: hl
                      	;output: hl
                      	;destroy: f (no change in c-flag)
  0E41                	CHR2ATT:
  0E41  CB54          		bit	2,h
  0E43  2802          		jr	z,CHR2ATTZ
  0E45  25            		dec	h
  0E46  25            		dec	h
  0E47                	CHR2ATTZ:
  0E47  25            		dec	h
  0E48  25            		dec	h
  0E49  C9            		ret
                      	
                      	
                      	;call SCRLU60 or SCRLU66
                      	;destroy: af
  0E4A                	SCRLUP:
  0E4A  CD9539        		call	CHKMOD
  0E4D  C26012        		jp	nz,SCRLU60
  0E50  C3E263        		jp	SCRLU66
                      	
                      	
                      	;call SCRLD60 or SCRLD66
                      	;destroy: af
  0E53                	SCRLDW:
  0E53  CD9539        		call	CHKMOD
  0E56  C2A912        		jp	nz,SCRLD60
  0E59  C32F64        		jp	SCRLD66
                      	
                      	
                      	;get data from port 90h
                      	;output: a
                      	;destroy: f
  0E5C                	_IN90H:	ds	IN90H-_IN90H
  0E78                		org	IN90H
                      	
  0E78  3E0C          		ld	a,0ch
  0E7A  D393          		out	(93h),a		;disable 8255 INT for writing
  0E7C                	IN90HLP:
  0E7C  DB92          		in	a,(92h)
  0E7E  2F            		cpl
  0E7F  E628          		and	28h
  0E81  20F9          		jr	nz,IN90HLP	;wait for ibf=1,intr=1
  0E83  3E0D          		ld	a,0dh
  0E85  D393          		out	(93h),a		;enable 8255 INT for writing
  0E87  DB90          		in	a,(90h)
  0E89  C9            		ret
                      	
                      	
                      	;output to port 90h
                      	;input: a=data
                      	;destroy: none
  0E8A                	_OUT90H:ds	OUT90H-_OUT90H
  0E8F                		org	OUT90H
                      	
  0E8F  F5            		push	af
  0E90  3E08          		ld	a,08h
  0E92  D393          		out	(93h),a		;disable 8255 INT for reading
  0E94                	OUT90HLP:
  0E94  DB92          		in	a,(92h)
  0E96  07            		rlca
  0E97  30FB          		jr	nc,OUT90HLP	;wait for nobf=1
  0E99  3E09          		ld	a,09h
  0E9B  D393          		out	(93h),a		;enable 8255 INT for reading
  0E9D  F1            		pop	af
  0E9E  D390          		out	(90h),a
  0EA0  C9            		ret
                      	
                      	
  0EA1                	PLSONE:
  0EA1  0000000081    		db	00h, 00h, 00h, 00h, 81h
                      	
  0EA6                	MNSONE:
  0EA6  0000008081    		db	00h, 00h, 00h, 80h, 81h
                      	
  0EAB                	ZERO:
  0EAB  0000000000    		db	00h, 00h, 00h, 00h, 00h
                      	
                      	
                      	;interrupt for graphic key
  0EB0                	_INTGRP:ds	INTGRP-_INTGRP
  0EB0                		org	INTGRP
                      	
  0EB0  C5            		push	bc
  0EB1  0601          		ld	b,01h
  0EB3  1803          		jr	KEYCOMMON
                      	
                      	
                      	;interrupt for normal key
  0EB5                	_INTKEY:ds	INTKEY-_INTKEY
  0EB5                		org	INTKEY
                      	
  0EB5  C5            		push	bc
  0EB6  0600          		ld	b,00h
                      	
  0EB8                	KEYCOMMON:
  0EB8  F5            		push	af
  0EB9  CD780E        		call	IN90H
                      	
                      	;0ebch: used by SPACE HARRIER
  0EBC  D5            		push	de
  0EBD  E5            		push	hl
  0EBE  B7            		or	a
  0EBF  286A          		jr	z,IKPOP
  0EC1  CD9315        		call	CLICK
                      	;	dec	b
                      	;	jr	nz,NORMAL
  0EC4  1015          		djnz	NORMAL
                      	
  0EC6                	GRAPH:
  0EC6  47            		ld	b,a		;;
  0EC7  D6FA          		sub	0fah
  0EC9  2842          		jr	z,STOPKEY
  0ECB  304A          		jr	nc,SPECIAL
  0ECD  3E14          		ld	a,14h
  0ECF  1825          		jr	IKBF
                      	
                      	
                      	;interrupt for reply to key query
  0ED1                	INTGAM:
  0ED1  F5            		push	af
  0ED2  CD780E        		call	IN90H
  0ED5  32CAFE        		ld	(GMKYBUF),a
  0ED8  F1            		pop	af
  0ED9  FB            		ei
  0EDA  C9            		ret
                      	
                      	
                      	;normal key
  0EDB                	NORMAL:
  0EDB  FE03          		cp	03h		;Ctrl-C
  0EDD  2833          		jr	z,STOPKEY2
  0EDF  FE1B          		cp	1bh
  0EE1  282F          		jr	z,STOPKEY2
  0EE3  06EF          		ld	b,0efh		;;Ctrl-T->14h+0efh
  0EE5  FE7F          		cp	7fh
  0EE7  2002          		jr	nz,NOTDELKEY
  0EE9  3E08          		ld	a,08h		;DEL->ctrl-H, not necessary for emulator?
                      	
  0EEB                	NOTDELKEY:
  0EEB  215AFA        		ld	hl,KEYFLG
  0EEE  CB46          		bit	0,(hl)
  0EF0  C4EF0B        		call	nz,TOUPPER
  0EF3  1801          		jr	IKBF
                      	
                      	
                      	;0ef6h: used by PORTOPIA
  0EF5                	_IKBF:ds	IKBF-_IKBF
  0EF6                		org	IKBF
                      	
  0EF6  218FFB        		ld	hl,KYBFIN
  0EF9  4E            		ld	c,(hl)		;
  0EFA  CD360F        		call	PUTKBF
                      	;	jr	c,RESSTOP
  0EFD  FE14          		cp	14h
  0EFF  2025          		jr	nz,RESSTOP
                      	
  0F01  78            		ld	a,b		;;
  0F02  CD360F        		call	PUTKBF
  0F05  301F          		jr	nc,RESSTOP
                      	
  0F07  218FFB        		ld	hl,KYBFIN
  0F0A  71            		ld	(hl),c		;
  0F0B  1819          		jr	RESSTOP
                      	
                      	
  0F0D                	STOPKEY:
  0F0D  CDD8FF        		call	HOOKSTP
  0F10  3E03          		ld	a,03h
  0F12                	STOPKEY2:
  0F12  CD360F        		call	PUTKBF
  0F15  1810          		jr	SETSTOP
                      	
                      	
                      	;fb	CAPS		bit0
                      	;fc	SHIFT+PAGE	bit1
                      	;fd	MODE		bit3
                      	;fe	KANA		bit2
  0F17                	SPECIAL:
  0F17  FE03          		cp	03h		;MODE key
  0F19  2002          		jr	nz,NOTMODE
  0F1B  3E08          		ld	a,08h
  0F1D                	NOTMODE:
  0F1D  215AFA        		ld	hl,KEYFLG
  0F20  AE            		xor	(hl)
  0F21  77            		ld	(hl),a
                      	
  0F22  AF            		xor	a
  0F23  32A7FD        		ld	(FKEYSFT),a
                      	
  0F26                	RESSTOP:
  0F26  AF            		xor	a
  0F27                	SETSTOP:
  0F27  3218FA        		ld	(STOPFLG),a
                      	;	jr	IKPOP
                      	
                      	
                      	;pop register for key interrupt
  0F2A                	_IKPOP:	ds	IKPOP-_IKPOP
  0F2B                		org	IKPOP
                      	
  0F2B  E1            		pop	hl
  0F2C  D1            		pop	de
                      	
                      	;0f2dh: used by SPACE HARRIER
  0F2D  F1            		pop	af
  0F2E  C1            		pop	bc
  0F2F  FB            		ei
  0F30  C9            		ret
                      	
                      	
                      	;put into PLAY command buffer
                      	;input: a=data
                      	;destroy: f,hl
  0F31                	PUTPLBF:
  0F31  CD871C        		call	GETPLAD
  0F34  1803          		jr	PUTBF
                      	
                      	
                      	;put into key buffer
                      	;input: a
                      	;output: c-flag (1=buffer full)
                      	;destroy: f,hl
  0F36                	PUTKBF:
  0F36  218FFB        		ld	hl,KYBFIN
                      	;	call	PUTBF
                      	;	ret
                      	
                      	
                      	;put characer into buffer
                      	;input: a=character, hl=buffer control address
                      	;output: c-flag (1=buffer full)
                      	;destroy: f,hl
  0F39                	PUTBF:
  0F39  F5            		push	af
  0F3A  7E            		ld	a,(hl)		;in
  0F3B  3C            		inc	a
  0F3C  2C            		inc	l		;inc hl
  0F3D  2C            		inc	l		;inc hl
  0F3E  2C            		inc	l		;inc hl
  0F3F  A6            		and	(hl)		;size
  0F40  2D            		dec	l		;dec hl
  0F41  2D            		dec	l		;dec hl
  0F42  BE            		cp	(hl)		;out
  0F43  2811          		jr	z,BFFULL
                      	
  0F45  2D            		dec	l		;dec hl
  0F46  77            		ld	(hl),a		;in
  0F47  2C            		inc	l		;inc hl
  0F48  2C            		inc	l		;inc hl
  0F49  2C            		inc	l		;inc hl
  0F4A  2C            		inc	l		;inc hl
  0F4B  86            		add	a,(hl)		;address
  0F4C  2C            		inc	l		;inc hl
  0F4D  66            		ld	h,(hl)
  0F4E  6F            		ld	l,a
  0F4F  3001          		jr	nc,PTBNC
  0F51  24            		inc	h
  0F52                	PTBNC:
  0F52  F1            		pop	af
  0F53  77            		ld	(hl),a
  0F54  B7            		or	a		;reset c-flag
  0F55  C9            		ret
                      	
  0F56                	BFFULL:
  0F56  F1            		pop	af
  0F57  37            		scf
  0F58  C9            		ret
                      	
                      	
                      	;interrupt for RS-232C
  0F59                	INT232:
  0F59  F5            		push	af
  0F5A  E5            		push	hl
  0F5B  3E17          		ld	a,17h		;RTS=0
  0F5D  D381          		out	(81h),a
  0F5F                	INT232LP:
  0F5F  DB81          		in	a,(81h)
  0F61  E602          		and	02h
  0F63  28FA          		jr	z,INT232LP	;wait for RxRDY=1
  0F65  DB80          		in	a,(80h)
                      	
  0F67  2195FB        		ld	hl,RSBFIN
  0F6A  CD390F        		call	PUTBF
                      	
  0F6D  3E37          		ld	a,37h		;RTS=1
  0F6F  D381          		out	(81h),a
  0F71  E1            		pop	hl
  0F72  1832          		jr	POPAF
                      	
                      	
                      	;interrupt for timer
  0F74                	_INTTIM:ds	INTTIM-_INTTIM
  0F74                		org	INTTIM
                      	
  0F74  C5            		push	bc
  0F75  F5            		push	af
  0F76  D5            		push	de
  0F77  E5            		push	hl
                      	
  0F78  CDEC1B        		call	PLAYINT
                      	
  0F7B  2128FA        		ld	hl,TMCNT
  0F7E  34            		inc	(hl)
  0F7F  34            		inc	(hl)
  0F80  20A9          		jr	nz,IKPOP
  0F82  2C            		inc	l		;inc hl
  0F83  34            		inc	(hl)
  0F84  2006          		jr	nz,TIMCSR
  0F86  2C            		inc	l
  0F87  34            		inc	(hl)
  0F88  2002          		jr	nz,TIMCSR
  0F8A  2C            		inc	l
  0F8B  34            		inc	(hl)
                      	
  0F8C                	TIMCSR:
                      	;cursor blink
  0F8C  3A92FD        		ld	a,(SCREEN1)
  0F8F  212EFA        		ld	hl,CSRBLNK
  0F92  2F            		cpl
  0F93  0F            		rrca
  0F94  A6            		and	(hl)
  0F95  C48F11        		call	nz,CSRREV	;(SCREEN1)=0or1, (CSRBLNK)=1
  0F98  1891          		jr	IKPOP
                      	
                      	
                      	;interrupt for CMT load
  0F9A                	INTCMT:
  0F9A  F5            		push	af
  0F9B  CD780E        		call	IN90H
  0F9E  321DFA        		ld	(CMTBUF),a
  0FA1  3E02          		ld	a,02h
  0FA3                	SETCMTST:
  0FA3  3219FA        		ld	(CMTSTAT),a
  0FA6                	POPAF:
  0FA6  F1            		pop	af
  0FA7                	EIRET:
  0FA7  FB            		ei
  0FA8  C9            		ret
                      	
                      	
                      	;interrupt for CMT write stop
  0FA9                	INTWSTP:
                      	;interrupt for CMT read stop
  0FA9                	INTRSTP:
  0FA9  F5            		push	af
  0FAA  3E03          		ld	a,03h
  0FAC  3218FA        		ld	(STOPFLG),a
  0FAF  18F5          		jr	POPAF
                      	
                      	
                      	;interrupt for CMT error
  0FB1                	INTERR:
  0FB1  F5            		push	af
  0FB2  3E10          		ld	a,10h
  0FB4  18ED          		jr	SETCMTST
                      	
                      	
                      	;get input character
                      	;output: a, z-flag(1=no input)
                      	;destroy: f
  0FB6                	_GETCH:	ds	GETCH-_GETCH
  0FBC                		org	GETCH
                      	
  0FBC  E5            		push	hl
  0FBD  CDF40F        		call	GETCH2
  0FC0  E1            		pop	hl
  0FC1  C9            		ret
                      	
                      	
                      	;wait for input and get a character
                      	;output: a
                      	;destroy: f
  0FC2                	_GETC:	ds	GETC-_GETC
  0FC4                		org	GETC
                      	
  0FC4  E5            		push	hl
  0FC5                	GETCLP1:
  0FC5  CD7911        		call	CSRON
  0FC8  2600          		ld	h,00h
  0FCA                	GETCLP2:
  0FCA  CD7A30        		call	MODEKEY
  0FCD  24            		inc	h
  0FCE  CCB212        		call	z,PRTFKEY2
  0FD1  CDBC0F        		call	GETCH
  0FD4  28F4          		jr	z,GETCLP2
                      	
  0FD6  CD8111        		call	CSROFF
  0FD9  FEFE          		cp	0feh		;page switching key
  0FDB  2807          		jr	z,GETCPAGE
  0FDD  67            		ld	h,a
  0FDE  CD6D13        		call	CHGTXT
  0FE1  7C            		ld	a,h
  0FE2  E1            		pop	hl
  0FE3  C9            		ret
                      	
  0FE4                	GETCPAGE:
  0FE4  3A8FFD        		ld	a,(SCREEN2)
  0FE7  3C            		inc	a
  0FE8  218CFD        		ld	hl,PAGES
  0FEB  BE            		cp	(hl)
  0FEC  3801          		jr	c,GETCC
  0FEE  AF            		xor	a
  0FEF                	GETCC:
  0FEF  CD7A13        		call	CHGSCR
  0FF2  18D1          		jr	GETCLP1
                      	
                      	
  0FF4                	GETCH2:
  0FF4  3A32FA        		ld	a,(FKEYCNT)
  0FF7  B7            		or	a
  0FF8  202E          		jr	nz,GETFKEY
  0FFA  2130FA        		ld	hl,GRPWRK
  0FFD  B6            		or	(hl)		;a=0
  0FFE  2808          		jr	z,GETCHZ	;(hl)=0?
  1000  3600          		ld	(hl),00h
  1002  FEEF          		cp	0efh		;Ctrl-T=14h+0efh
  1004  C8            		ret	z
  1005  C630          		add	a,30h
  1007  C9            		ret			;z-flag=0
                      	
  1008                	GETCHZ:
                      	;(GRPWRK)=0
  1008  CD3A10        		call	GETKBF
  100B  C8            		ret	z
  100C  FE14          		cp	14h
  100E  C0            		ret	nz
                      	
                      	;14h+**
  100F  CD3A10        		call	GETKBF
  1012  FEF0          		cp	0f0h
  1014  3006          		jr	nc,CNVFKEY
  1016  3230FA        		ld	(GRPWRK),a
  1019  3E14          		ld	a,14h
  101B  C9            		ret			;z-flag=0
                      	
                      	;a=f0-f9
  101C                	CNVFKEY:
  101C  21BDFB        		ld	hl,FKEYTBL+80h
                      	;	and	0fh
  101F  87            		add	a,a
  1020  87            		add	a,a
  1021  87            		add	a,a
  1022  85            		add	a,l		;no carry
  1023  6F            		ld	l,a
                      	;	jr	nc,CNVFKNC
                      	;	inc	h
                      	;CNVFKNC:
  1024  3E07          		ld	a,07h
  1026  1804          		jr	GETFKEY2
                      	
                      	;function key
  1028                	GETFKEY:
  1028  2A8DFB        		ld	hl,(FKEYAD)
  102B  3D            		dec	a
  102C                	GETFKEY2:
  102C  3232FA        		ld	(FKEYCNT),a
  102F  7E            		ld	a,(hl)
  1030  23            		inc	hl
  1031  228DFB        		ld	(FKEYAD),hl
  1034  B7            		or	a
  1035  C0            		ret	nz
  1036  3232FA        		ld	(FKEYCNT),a	;=0
  1039  C9            		ret			;z-flag=1: no input
                      	
                      	
                      	;get a character from key buffer
                      	;output: a,z-flag(1=no input)
                      	;destroy: f,hl
  103A                	_GETKBF:ds	GETKBF-_GETKBF
  103A                		org	GETKBF
                      	
  103A  218FFB        		ld	hl,KYBFIN
  103D                	CALLGETBF:
  103D  F3            		di
  103E  CD0B26        		call	GETBF
  1041  FB            		ei
  1042  C9            		ret
                      	
                      	
                      	;get a character from RS-232C buffer
                      	;output: a,z-flag(1=no input)
                      	;destroy: f,hl
  1043                	GETRSBF:
  1043  2195FB        		ld	hl,RSBFIN
  1046  18F5          		jr	CALLGETBF
                      	
                      	
                      	;get from PLAY command buffer
                      	;input: b=channel+1 (1,2,3)
                      	;output: a,z-flag(1=no input)
                      	;destroy: f,hl
  1048                	GETPLBF:
  1048  219BFB        		ld	hl,BUFAIN-6
  104B  78            		ld	a,b
  104C  87            		add	a,a		;*2
  104D  80            		add	a,b		;*3
  104E  87            		add	a,a		;*6
  104F  85            		add	a,l		;no carry
  1050  6F            		ld	l,a
  1051  C30B26        		jp	GETBF
                      	
                      	
                      	;clear key buffer pointer
                      	;destroy: hl,(af,bc,de)
  1054                	_CLRKBF:ds	CLRKBF-_CLRKBF
  1058                		org	CLRKBF
                      	
  1058  210000        		ld	hl,0000h
  105B  228FFB        		ld	(KYBFIN),hl	;(KYBFIN),(KYBFOUT)=0
  105E  C9            		ret
                      	
                      	
                      	;send key-query to sub CPU and get reply
                      	;output: a (space-0-left-right-down-up-stop-shift)
                      	;destroy: f (no change in c-flag)
  105F                	_STICK:	ds	STICK-_STICK
  1061                		org	STICK
                      	
  1061  3EFF          		ld	a,0ffh
  1063  32CAFE        		ld	(GMKYBUF),a
  1066  3E06          		ld	a,06h
  1068  F3            		di
  1069  CD8F0E        		call	OUT90H
  106C  FB            		ei
  106D                	STICKLP:
  106D  3ACAFE        		ld	a,(GMKYBUF)
  1070  3C            		inc	a
  1071  28FA          		jr	z,STICKLP	;wait for bit6=0
  1073  3D            		dec	a
  1074  C9            		ret
                      	
                      	
                      	;print a character in CRT
                      	;input: a=character code
                      	;destroy: none
  1075                	_PRTC:	ds	PRTC-_PRTC
  1075                		org	PRTC
                      	
  1075  F5            		push	af
  1076  E5            		push	hl
                      	
  1077  2A31FA        		ld	hl,(GRPFLG)
  107A  2C            		inc	l
  107B  2D            		dec	l
  107C  200D          		jr	nz,PRTGRP
  107E  FE20          		cp	20h
  1080  3010          		jr	nc,PRTCNC
  1082  D5            		push	de
  1083  C5            		push	bc
  1084  CDFA10        		call	PRTCTL
  1087  C1            		pop	bc
  1088  D1            		pop	de
  1089  180A          		jr	PRTCEND
                      	
  108B                	PRTGRP:
  108B  D630          		sub	30h
  108D  2131FA        		ld	hl,GRPFLG
  1090  3600          		ld	(hl),00h
  1092                	PRTCNC:
  1092  CDAA10        		call	PRTCH
                      	
  1095                	PRTCEND:
  1095  E1            		pop	hl
  1096  F1            		pop	af
  1097  C9            		ret
                      	
                      	
                      	;print a character in graphic mode (screen mode 3,4)
                      	;input: a=character
                      	;destroy: af,hl
  1098                	PRT34:
  1098  2AA8FD        		ld	hl,(CSRY)
  109B  CDD614        		call	PRT34XY
  109E                	CTLRGT:
  109E  2AAAFD        		ld	hl,(CSRAD)
  10A1  23            		inc	hl
  10A2  1813          		jr	CHKNL
                      	
                      	;print a character in CRT (no control code)
                      	;input: a=character code
                      	;destroy: af,hl
  10A4                	_PRTCH:ds	PRTCH-_PRTCH
  10AA                		org	PRTCH
                      	
  10AA  2A92FD        		ld	hl,(SCREEN1)
  10AD  CB4D          		bit	1,l
  10AF  20E7          		jr	nz,PRT34	;screen mode 3,4
                      	
  10B1  2AAAFD        		ld	hl,(CSRAD)
  10B4  CDCA14        		call	PRT12
                      	
                      	;next line?
  10B7                	CHKNL:
  10B7  22AAFD        		ld	(CSRAD),hl
  10BA  21A9FD        		ld	hl,CSRX
  10BD  34            		inc	(hl)
  10BE  3AACFD        		ld	a,(WIDTH)
  10C1  BE            		cp	(hl)
  10C2  D0            		ret	nc
  10C3                	CHKNL2:
  10C3  3601          		ld	(hl),1
                      	
  10C5  3AA5FD        		ld	a,(LASTLIN)
  10C8  2AA2FD        		ld	hl,(CONSOL1)	;l=(CONSOL1)
  10CB  95            		sub	l
  10CC  2802          		jr	z,CTLLF
  10CE  3EFF          		ld	a,0ffh
                      	
  10D0                	CTLLF:
  10D0  3C            		inc	a		;0 or 1
  10D1  2AA8FD        		ld	hl,(CSRY)	;l=y+1,h=x+1
                      	
  10D4  E5            		push	hl
  10D5  D5            		push	de
  10D6  CD8215        		call	SETLINE
  10D9  D1            		pop	de
  10DA  E1            		pop	hl
                      	
  10DB  2C            		inc	l
  10DC  3AA5FD        		ld	a,(LASTLIN)
  10DF  BD            		cp	l
  10E0  D26D11        		jp	nc,SETCSR
                      	
                      	;scroll
  10E3  D5            		push	de
  10E4  54            		ld	d,h		;x+1
  10E5  2AA1FD        		ld	hl,(CONSOL1-1)	;h=(CONSOL1)
  10E8  1801          		jr	SKPPATCH1
                      	
                      	
                      	;10eah: to be patched by iP6/iP6win
  10EA                	_PATCH1:ds	PATCH1-_PATCH1
  10EA                		org	PATCH1
  10EA  00            		db	00h
                      	
  10EB                	SKPPATCH1:
  10EB  6F            		ld	l,a
  10EC  9C            		sbc	a,h		;c-flag=1, (LASTLIN)-(CONSOL1)-1
  10ED  D44A0E        		call	nc,SCRLUP
                      	
  10F0  62            		ld	h,d		;x+1
  10F1  CDB811        		call	Y2AD
  10F4  CDDA11        		call	DELLIN
  10F7  D1            		pop	de
  10F8  1873          		jr	SETCSR
                      	
                      	
  10FA                	PRTCTL:
  10FA  FE14          		cp	14h
  10FC  2847          		jr	z,CTLGRP
  10FE  FE07          		cp	07h
  1100  CACD1B        		jp	z,BELL
  1103  D60A          		sub	0ah
  1105  28C9          		jr	z,CTLLF
  1107  3D            		dec	a
  1108  285B          		jr	z,CTLHOM	;0bh
  110A  3D            		dec	a
  110B  CAFB1D        		jp	z,CLS		;0ch
  110E  2AA8FD        		ld	hl,(CSRY)	;l=y+1,h=x+1
  1111  3D            		dec	a
  1112  2854          		jr	z,CTLCR		;0dh
  1114  D60F          		sub	1ch-0dh
  1116  2886          		jr	z,CTLRGT	;1ch
  1118  3D            		dec	a
  1119  2808          		jr	z,CTLLFT	;1dh
  111B  3D            		dec	a
  111C  2814          		jr	z,CTLUP		;1eh
  111E  3D            		dec	a
  111F  C0            		ret	nz
                      	;	jr	z,CTLDWN	;1fh
                      	
  1120                	CTLDWN:
  1120  2C            		inc	l
  1121  1819          		jr	CTLUPNZ
                      	
  1123                	CTLLFT:
  1123  25            		dec	h
  1124  2047          		jr	nz,SETCSR
  1126  3AA2FD        		ld	a,(CONSOL1)
  1129  BD            		cp	l
  112A  D0            		ret	nc
  112B  2D            		dec	l
  112C  3AACFD        		ld	a,(WIDTH)
  112F  67            		ld	h,a
  1130  183B          		jr	SETCSR
                      	
  1132                	CTLUP:
  1132  3AA2FD        		ld	a,(CONSOL1)
  1135  BD            		cp	l
  1136  C8            		ret	z
  1137  2D            		dec	l
  1138  2002          		jr	nz,CTLUPNZ
  113A  2E01          		ld	l,01h
  113C                	CTLUPNZ:
  113C  3AA5FD        		ld	a,(LASTLIN)
  113F  BD            		cp	l
  1140  302B          		jr	nc,SETCSR
  1142  6F            		ld	l,a
  1143  1828          		jr	SETCSR
                      	
  1145                	CTLGRP:
  1145  3231FA        		ld	(GRPFLG),a	;a=14h
  1148  C9            		ret
                      	
                      	
                      	;convert VRAM address to text screen (x,y)
                      	;input: hl=address
                      	;output: h=x+1, l=y+1(0=error)
                      	;destroy: af
  1149                	AD2XY:
  1149  D5            		push	de
  114A  112000        		ld	de,COLUMNS
                      	
  114D  CB54          		bit	2,h
  114F  2804          		jr	z,AD2XYZ
                      	
  1151  1E28          		ld	e,CLMN66
  1153  25            		dec	h
  1154  25            		dec	h
  1155                	AD2XYZ:
  1155  25            		dec	h
  1156  25            		dec	h
                      	
  1157  AF            		xor	a
  1158                	AD2XYLP:
  1158  3C            		inc	a
  1159  ED52          		sbc	hl,de
  115B  CB5C          		bit	3,h
  115D  28F9          		jr	z,AD2XYLP
  115F  19            		add	hl,de
  1160  2C            		inc	l
  1161  65            		ld	h,l
  1162  6F            		ld	l,a
  1163  D1            		pop	de
  1164  C9            		ret
                      	
  1165                	CTLHOM:
  1165  2AA2FD        		ld	hl,(CONSOL1)	;l=(CONSOL1)
                      	
  1168                	CTLCR:
  1168  2601          		ld	h,1
  116A  1801          		jr	SETCSR
                      	
                      	
                      	;set cursor position
                      	;input: h=x+1, l=y+1
                      	;output: (fda8h)=y+1,(fda9h)=x+1,(fdaa-fdab)=VRAM address
                      	;destroy: none
  116C                	_SETCSR:ds	SETCSR-_SETCSR
  116D                		org	SETCSR
  116D  E5            		push	hl
  116E  22A8FD        		ld	(CSRY),hl
  1171  CDCD11        		call	XY2AD
  1174  22AAFD        		ld	(CSRAD),hl
  1177  E1            		pop	hl
  1178  C9            		ret
                      	
                      	
                      	;cursor blink on
                      	;destroy: none
  1179                	_CSRON:
  1179                		ds	CSRON-_CSRON
  1179                		org	CSRON
                      	
  1179  F5            		push	af
  117A  3E01          		ld	a,01h
  117C  322EFA        		ld	(CSRBLNK),a
  117F  F1            		pop	af
  1180  C9            		ret
                      	
                      	
                      	;cursor blink off
                      	;destroy: hl
  1181                	_CSROFF:
  1181                		ds	CSROFF-_CSROFF
  1181                		org	CSROFF
                      	
  1181  F5            		push	af
  1182  AF            		xor	a
  1183  322EFA        		ld	(CSRBLNK),a
  1186  3A2FFA        		ld	a,(CSRSTAT)
  1189  B7            		or	a
  118A  C48F11        		call	nz,CSRREV
  118D  F1            		pop	af
  118E  C9            		ret
                      	
                      	
                      	;reverse cursor
                      	;destroy: af,hl
  118F                	CSRREV:
  118F  212FFA        		ld	hl,CSRSTAT
  1192  7E            		ld	a,(hl)
  1193  2F            		cpl
  1194  77            		ld	(hl),a
  1195  2AAAFD        		ld	hl,(CSRAD)
                      	
  1198  CB54          		bit	2,h
  119A  C25766        		jp	nz,CSRREV66
                      	
  119D  25            		dec	h
  119E  25            		dec	h
  119F  7E            		ld	a,(hl)
  11A0  CB77          		bit	6,a		;semi-graphic mode?
  11A2  2004          		jr	nz,CSRSEMI
  11A4  EE01          		xor	01h
  11A6  77            		ld	(hl),a
  11A7  C9            		ret
                      	
  11A8                	CSRSEMI:
  11A8  24            		inc	h
  11A9  24            		inc	h
  11AA  7E            		ld	a,(hl)
  11AB  2F            		cpl
  11AC  77            		ld	(hl),a
  11AD  C9            		ret
                      	
                      	
  11AE                	Y2AD2:
  11AE  CE02          		adc	a,02h
  11B0  57            		ld	d,a
  11B1  F1            		pop	af
  11B2  C9            		ret
                      	
                      	
                      	;get left edge address
                      	;input: l=y+1
                      	;output: de=VRAM address
                      	;destroy: none
  11B3                	_Y2AD:ds	Y2AD-_Y2AD
  11B8                		org	Y2AD
                      	
  11B8  F5            		push	af
  11B9  CD9539        		call	CHKMOD
  11BC  CA0066        		jp	z,Y2AD66
                      	
  11BF  7D            		ld	a,l
  11C0  3D            		dec	a
  11C1  87            		add	a,a		;*2
  11C2  87            		add	a,a		;*4
  11C3  87            		add	a,a		;*8
  11C4  87            		add	a,a		;*16
  11C5  87            		add	a,a		;*32
  11C6  5F            		ld	e,a
  11C7  3A91FD        		ld	a,(VRAM)
  11CA  18E2          		jr	Y2AD2
                      	
                      	
                      	;get VRAM character address (screen mode 1,2)
                      	;input: h=x+1, l=y+1
                      	;output: hl=VRAM address
                      	;destroy: none
  11CC                	_XY2AD:	ds	XY2AD-_XY2AD
  11CD                		org	XY2AD
                      	
  11CD  F5            		push	af
  11CE  D5            		push	de
  11CF  CDB811        		call	Y2AD
  11D2  25            		dec	h
  11D3  6C            		ld	l,h
  11D4  2600          		ld	h,00h
  11D6  19            		add	hl,de
  11D7  D1            		pop	de
  11D8  F1            		pop	af
  11D9  C9            		ret
                      	
                      	
                      	;delete line
                      	;input: de=left edge address (for screen mode 1,2)
                      	;destroy: none
  11DA                	_DELLIN:ds	DELLIN-_DELLIN
  11DA                		org	DELLIN
                      	
  11DA  F5            		push	af
  11DB  E5            		push	hl
  11DC  D5            		push	de
  11DD  C5            		push	bc
                      	
  11DE  EB            		ex	de,hl
                      	
  11DF  3A92FD        		ld	a,(SCREEN1)
  11E2  FE02          		cp	02h		;;
  11E4  CB54          		bit	2,h		;;;
  11E6  C26C64        		jp	nz,DELLIN66	;;;
  11E9  3018          		jr	nc,DELG		;;
                      	
  11EB  E5            		push	hl		;
                      	;	ld	bc,COLUMNS
  11EC  010120        		ld	bc,2001h
  11EF  25            		dec	h
  11F0  25            		dec	h
                      	
  11F1                	DELLATT:
  11F1  CD3415        		call	GETSPA
  11F4  C5            		push	bc
  11F5  CD4E12        		call	MEMSET
  11F8  C1            		pop	bc
  11F9  E1            		pop	hl		;
                      	
  11FA                	DELLEND:
  11FA  CD1216        		call	GETSP
  11FD  CD4E12        		call	MEMSET
  1200  C3AB1B        		jp	POPALL
                      	
                      	
                      	;for graphic mode (screen3,4)
  1203                	DELG:
                      	;	ld	bc,COLUMNS*12
  1203  010280        		ld	bc,8002h
  1206  CD7814        		call	AD2GAD
  1209  18EF          		jr	DELLEND
                      	
                      	
                      	;for graphic mode (screen mode 3,4)
  120B                	SCRLG:
                      	;bc=a*32*12=a*(256+128)
  120B  48            		ld	c,b		;b=0
  120C  47            		ld	b,a
  120D  1F            		rra			;c-flag=0
  120E  CB19          		rr	c
  1210  80            		add	a,b
  1211  47            		ld	b,a
                      	
  1212  2601          		ld	h,1
  1214  CD7D14        		call	XY2GAD
  1217  EB            		ex	de,hl
  1218  218001        		ld	hl,COLUMNS*12
  121B  19            		add	hl,de
  121C  F1            		pop	af		;up/down
  121D  2003          		jr	nz,SCRLATT
  121F  EB            		ex	de,hl
  1220  1B            		dec	de
  1221  2B            		dec	hl
                      	
  1222                	SCRLATT:
  1222  CDB23F        		call	LDIDR
                      	
  1225                	SCRLATT2:
  1225  C1            		pop	bc
  1226  E1            		pop	hl
                      	
                      	;scroll INPUT prompt position
                      	;z=0: up,h=first,l=last
                      	;z=1: down,h=last,l=first
  1227  E5            		push	hl
                      	
  1228  1EFF          		ld	e,0-01h
  122A  2005          		jr	nz,SCRLIUP
  122C  1E01          		ld	e,01h
  122E  7C            		ld	a,h
  122F  65            		ld	h,l
  1230  6F            		ld	l,a
  1231                	SCRLIUP:
  1231  3AABFD        		ld	a,(CSRAD+1)
  1234  57            		ld	d,a
  1235  3A5CFE        		ld	a,(INPTPAG)
  1238  AA            		xor	d
  1239  E6F0          		and	0f0h
  123B  200E          		jr	nz,SCRLIEND
                      	
  123D  3A59FE        		ld	a,(INPTXY)
  1240  BC            		cp	h
  1241  3808          		jr	c,SCRLIEND
  1243  2C            		inc	l
  1244  BD            		cp	l
  1245  3004          		jr	nc,SCRLIEND
  1247  83            		add	a,e
  1248  3259FE        		ld	(INPTXY),a
  124B                	SCRLIEND:
  124B  E1            		pop	hl
                      	
  124C  D1            		pop	de
  124D  C9            		ret
                      	
                      	
                      	;set memory
                      	;input: a=data, b=inner loops, c=outer loops, hl=start address
                      	;destroy: af,bc,hl
  124E                	MEMSET:
  124E  77            		ld	(hl),a
  124F  23            		inc	hl
  1250  10FC          		djnz	MEMSET
  1252  0D            		dec	c
  1253  20F9          		jr	nz,MEMSET
  1255  C9            		ret
                      	
                      	
                      	;print a character in CRT (no control code, no move in cursor)
                      	;input: a=character code, h=x+1, l=y+1
                      	;destroy: none
  1256                	_PRTCHXY:ds	PRTCHXY-_PRTCHXY
  1257                		org	PRTCHXY
                      	
  1257  E5            		push	hl
  1258  CDCD11        		call	XY2AD
  125B  CDAF14        		call	PRTCHAD
  125E  E1            		pop	hl
  125F  C9            		ret
                      	
                      	
                      	;scroll up
                      	;input: h=first line+1, l=last line+1
                      	;destroy: af
  1260                	_SCRLU60:ds	SCRLU60-_SCRLU60
  1260                		org	SCRLU60
                      	
  1260  7D            		ld	a,l
  1261  94            		sub	h		;a=(LASTLIN)-(CONSOL1) < 16
                      	;	ret	z
                      	;	ret	c
                      	
                      	;z=0:scroll up, z=1:scroll down
  1262                	SCRLUD60:
  1262  D5            		push	de
  1263  E5            		push	hl
  1264  C5            		push	bc
  1265  F5            		push	af		;up/down
                      	
                      	;line connection status
  1266  47            		ld	b,a
  1267  04            		inc	b
  1268  50            		ld	d,b		;>0
  1269                	SCRLUD60LP:
  1269  CD7615        		call	CHKLINE4
  126C  4F            		ld	c,a
  126D  7A            		ld	a,d
  126E  E5            		push	hl
  126F  CD8215        		call	SETLINE
  1272  E1            		pop	hl
  1273  51            		ld	d,c
  1274  2D            		dec	l
  1275  F1            		pop	af		;up/down
  1276  F5            		push	af
  1277  2002          		jr	nz,SCRLUD60NZ
  1279  2C            		inc	l
  127A  2C            		inc	l
  127B                	SCRLUD60NZ:
  127B  10EC          		djnz	SCRLUD60LP
                      	
  127D  6C            		ld	l,h
  127E  3A92FD        		ld	a,(SCREEN1)
  1281  FE02          		cp	02h
  1283  D1            		pop	de		;d=a
  1284  D5            		push	de
  1285  7A            		ld	a,d
  1286  3083          		jr	nc,SCRLG	;screen mode 3 4
                      	
  1288  CDA73F        		call	MUL32
  128B  CDB811        		call	Y2AD
  128E  212000        		ld	hl,COLUMNS
  1291  19            		add	hl,de
  1292  F1            		pop	af		;up/down
  1293  2003          		jr	nz,SCRLNZ
  1295  EB            		ex	de,hl
  1296  1B            		dec	de
  1297  2B            		dec	hl
                      	
  1298                	SCRLNZ:
  1298  E5            		push	hl
  1299  D5            		push	de
  129A  C5            		push	bc
  129B  CDB23F        		call	LDIDR
  129E  C1            		pop	bc
  129F  D1            		pop	de
  12A0  E1            		pop	hl
                      	
                      	;attribute
  12A1  CB8C          		res	1,h
  12A3  CB8A          		res	1,d
  12A5  C32212        		jp	SCRLATT
                      	
                      	
                      	;scroll down
                      	;input: h=last line+1, l=first line+1
                      	;destroy: af
  12A8                	_SCRLD60:ds	SCRLD60-_SCRLD60
  12A9                		org	SCRLD60
                      	
  12A9  7C            		ld	a,h
  12AA  95            		sub	l
                      	;	ret	z
                      	;	ret	c
  12AB  BF            		cp	a		;set z-flag
  12AC  18B4          		jr	SCRLUD60
                      	
                      	
                      	;print function key
                      	;input: none
                      	;output: none
                      	;destroy: af
  12AE                	PRTFKEY:
  12AE  AF            		xor	a
  12AF  32A7FD        		ld	(FKEYSFT),a
                      	
  12B2                	PRTFKEY2:
  12B2  3A92FD        		ld	a,(SCREEN1)
  12B5  FE02          		cp	02h
  12B7  D0            		ret	nc		;screen mode 3 or 4
                      	
  12B8  E5            		push	hl
  12B9  D5            		push	de
  12BA  C5            		push	bc
                      	
  12BB  21A7FD        		ld	hl,FKEYSFT
  12BE  3AA6FD        		ld	a,(CONSOL3)
  12C1  B7            		or	a
  12C2  286B          		jr	z,DELFK
                      	
  12C4  113DFB        		ld	de,FKEYTBL
  12C7  CD6110        		call	STICK
  12CA  E601          		and	01h
  12CC  2802          		jr	z,FKEYZ
  12CE  1E65          		ld	e,FKEYTBL+8*5-(FKEYTBL+8*5)/256*256	;de=FKEYTBL+8*5
  12D0                	FKEYZ:
  12D0  87            		add	a,a
  12D1  3C            		inc	a
  12D2  BE            		cp	(hl)
  12D3  2856          		jr	z,PFKEND
  12D5  77            		ld	(hl),a
                      	
  12D6  D5            		push	de
  12D7  2A20FA        		ld	hl,(HEIGHT)
  12DA  CDB811        		call	Y2AD
  12DD  EB            		ex	de,hl
  12DE  D1            		pop	de
                      	
                      	
  12DF  CD3E13        		call	CHRREV
  12E2  3A8FFD        		ld	a,(SCREEN2)
  12E5  C631          		add	a,'1'
  12E7  CDCA14        		call	PRT12
                      	
  12EA  CD3E13        		call	CHRREV
  12ED  3E20          		ld	a,' '
  12EF  CDCA14        		call	PRT12
                      	
  12F2  0E05          		ld	c,05h
  12F4                	FKEYLP1:
  12F4  CD3E13        		call	CHRREV
  12F7  3AC7FE        		ld	a,(FKEYLEN)
  12FA  47            		ld	b,a
  12FB                	FKEYLP2:
  12FB  1A            		ld	a,(de)
  12FC  B7            		or	a
  12FD  280C          		jr	z,FKEYNEXT
  12FF  FE20          		cp	20h
  1301  3002          		jr	nc,FKEYNC
  1303  3E20          		ld	a,' '
  1305                	FKEYNC:
  1305  CDCA14        		call	PRT12
  1308  1C            		inc	e		;inc de
  1309  10F0          		djnz	FKEYLP2
                      	
  130B                	FKEYNEXT:
  130B  04            		inc	b
  130C                	FKEYLP3:
  130C  78            		ld	a,b
  130D  3D            		dec	a
  130E  CC3E13        		call	z,CHRREV
  1311  3E20          		ld	a,' '
  1313  CDCA14        		call	PRT12
  1316  1C            		inc	e		;inc de
  1317  10F3          		djnz	FKEYLP3
                      	
                      	;	inc	e		;inc de
                      	;	inc	e		;inc de
                      	
  1319  7B            		ld	a,e
  131A  E6F8          		and	0f8h
  131C  F605          		or	FKEYTBL-FKEYTBL/8*8
  131E  5F            		ld	e,a
                      	
  131F  0D            		dec	c
  1320  20D2          		jr	nz,FKEYLP1
                      	
  1322  CD9539        		call	CHKMOD
  1325  CC9864        		call	z,PFK66
                      	
  1328                	PFKEND2:
  1328  CD6F1D        		call	SETCNSL2
  132B                	PFKEND:
  132B  C1            		pop	bc
  132C  D1            		pop	de
  132D  E1            		pop	hl
  132E  C9            		ret
                      	
  132F                	DELFK:
  132F  BE            		cp	(hl)		;hl=FKEYSFT
  1330  28F9          		jr	z,PFKEND
  1332  77            		ld	(hl),a
  1333  2A20FA        		ld	hl,(HEIGHT)
  1336  CDB811        		call	Y2AD
  1339  CDDA11        		call	DELLIN
  133C  18EA          		jr	PFKEND2
                      	
                      	
                      	;reverse character attribute
                      	;destroy: af
  133E                	CHRREV:
  133E  CD9539        		call	CHKMOD
  1341  CA4B66        		jp	z,CHRREV66
  1344  3A92FD        		ld	a,(SCREEN1)
  1347  EE03          		xor	03h
  1349  2819          		jr	z,REVEND	;screen mode 4
  134B  0F            		rrca
  134C  3A93FD        		ld	a,(COLOR1)
  134F  380D          		jr	c,REV13
                      	
  1351                	REV2:
  1351  B7            		or	a
  1352  CAC015        		jp	z,SETATT
  1355  FE08          		cp	08h
  1357  3802          		jr	c,REV2C
  1359  3E08          		ld	a,08h
  135B                	REV2C:
  135B  3D            		dec	a
  135C  1806          		jr	REVEND
                      	
  135E                	REV13:
  135E  B7            		or	a
  135F  2803          		jr	z,REVEND
  1361  3D            		dec	a
  1362  E603          		and	03h
  1364                	REVEND:
  1364  EE01          		xor	01h
  1366  3C            		inc	a
  1367  3293FD        		ld	(COLOR1),a
  136A  C3C015        		jp	SETATT
                      	
                      	
                      	;change to text screen
                      	;input: none
                      	;output: none
                      	;destroy: af
  136D                	CHGTXT:
  136D  3A90FD        		ld	a,(SCREEN3)
  1370  CD0C14        		call	CHGACT
  1373  3A92FD        		ld	a,(SCREEN1)
  1376  FE02          		cp	02h
  1378  D8            		ret	c
  1379  AF            		xor	a
  137A                	CHGSCR:
  137A  CD0C14        		call	CHGACT
  137D  C3ED13        		jp	CHGDSP
                      	
                      	
                      	;change screen mode
                      	;input: a=mode-1
                      	;destroy: af,de
  1380                	_CHGMOD:ds	CHGMOD-_CHGMOD
  1390                		org	CHGMOD
                      	
  1390  FE04          		cp	04h
  1392  D2CB03        		jp	nc,FCERR
  1395  E5            		push	hl
  1396  2192FD        		ld	hl,SCREEN1
  1399  5E            		ld	e,(hl)		;
  139A  BB            		cp	e
  139B  284D          		jr	z,CMODEND
  139D  77            		ld	(hl),a
                      	
  139E  C5            		push	bc
  139F  F5            		push	af		;;
                      	
  13A0  FE02          		cp	02h
  13A2  3E20          		ld	a,COLUMNS	;screen mode 1,2,4:width=32
  13A4  2001          		jr	nz,SETWID
  13A6  1F            		rra			;screen mode 3:width=16
  13A7                	SETWID:
  13A7  32ACFD        		ld	(WIDTH),a
                      	
  13AA  2196FD        		ld	hl,M1COLOR
  13AD  010300        		ld	bc,0003h
  13B0  50            		ld	d,b		;b=0
  13B1  19            		add	hl,de		;
  13B2  19            		add	hl,de
  13B3  19            		add	hl,de
  13B4  EB            		ex	de,hl
  13B5  2193FD        		ld	hl,COLOR1
  13B8  EDB0          		ldir
                      	
  13BA  F1            		pop	af		;;
  13BB  2196FD        		ld	hl,M1COLOR
  13BE  50            		ld	d,b		;b=0
  13BF  5F            		ld	e,a
  13C0  19            		add	hl,de
  13C1  19            		add	hl,de
  13C2  19            		add	hl,de
  13C3  1193FD        		ld	de,COLOR1
  13C6  0E03          		ld	c,03h		;b=0
  13C8  EDB0          		ldir
                      	
  13CA  CD3415        		call	GETSPA
  13CD  2A90FD        		ld	hl,(VRAM-1)	;h=(VRAM)
  13D0  68            		ld	l,b		;b=0
  13D1  77            		ld	(hl),a
  13D2  04            		inc	b
  13D3  54            		ld	d,h
  13D4  58            		ld	e,b		;de=hl+1
  13D5  0D            		dec	c		;bc=1ffh
                      	
  13D6  CD9539        		call	CHKMOD
  13D9  CC4561        		call	z,CHGMOD66
                      	
  13DC  EDB0          		ldir
                      	
  13DE  CD6F1D        		call	SETCNSL2
  13E1  2E01          		ld	l,01h
  13E3  3A20FA        		ld	a,(HEIGHT)
  13E6  CD4416        		call	CLSMAIN
                      	
  13E9  C1            		pop	bc
  13EA                	CMODEND:
  13EA  E1            		pop	hl
  13EB  C9            		ret
                      	
                      	
                      	;change display page
                      	;page1=8000h or c000h	out (0b0h),4 or 0
                      	;page2=e000h		out (0b0h),2
                      	;page3=c000h		out (0b0h),0
                      	;page4=a000h		out (0b0h),6
                      	;input: a=page-1
                      	;destroy: af
  13EC                	_CHGDSP:ds	CHGDSP-_CHGDSP
  13ED                		org	CHGDSP
                      	
  13ED  3290FD        		ld	(SCREEN3),a
                      	
  13F0  E5            		push	hl
  13F1  C5            		push	bc
                      	
  13F2  CD3314        		call	GETPGAD
  13F5  CD9539        		call	CHKMOD		;
  13F8  7E            		ld	a,(hl)
  13F9  CC1F61        		call	z,CHGDSP66
  13FC  07            		rlca
  13FD  07            		rlca
  13FE  07            		rlca
  13FF  07            		rlca
  1400  EE04          		xor	04h
                      	
  1402  0606          		ld	b,00000110b
  1404  CD541B        		call	OUTB0H
                      	
  1407  C1            		pop	bc
  1408  E1            		pop	hl
                      	
  1409  C3B212        		jp	PRTFKEY2
                      	
                      	
                      	;change active page
                      	;input: a=page-1
                      	;destroy: none
  140C                	_CHGACT:ds	CHGACT-_CHGACT
  140C                		org	CHGACT
                      	
  140C  F5            		push	af
  140D  E5            		push	hl
                      	
  140E  218FFD        		ld	hl,SCREEN2
  1411  BE            		cp	(hl)
  1412  281C          		jr	z,ACTEND
                      	
  1414  D5            		push	de
  1415  C5            		push	bc
                      	
  1416  57            		ld	d,a		;
  1417  7E            		ld	a,(hl)
  1418  72            		ld	(hl),d		;
  1419  CD3314        		call	GETPGAD
  141C  7A            		ld	a,d		;
  141D  EB            		ex	de,hl
  141E  2191FD        		ld	hl,VRAM		;top of active page data
  1421  EDB0          		ldir
                      	
  1423  CD3314        		call	GETPGAD
  1426  1191FD        		ld	de,VRAM
  1429  EDB0          		ldir
                      	
  142B  CDAE12        		call	PRTFKEY
                      	
  142E  C1            		pop	bc
  142F  D1            		pop	de
                      	
  1430                	ACTEND:
  1430  E1            		pop	hl
  1431  F1            		pop	af
  1432  C9            		ret
                      	
                      	
                      	;get page data address
                      	;input: a=page-1
                      	;output: hl=address, bc=size
                      	;destroy: af
  1433                	GETPGAD:
  1433  21B9FD        		ld	hl,PAGE1
  1436  012800        		ld	bc,PAGE2-PAGE1
  1439  B7            		or	a
  143A                	PGADLP:
  143A  C8            		ret	z
  143B  09            		add	hl,bc
  143C  3D            		dec	a
  143D  18FB          		jr	PGADLP
                      	
                      	
                      	;get VRAM dot pattern address (screen mode 3,4)
                      	;hl=(VRAM+0200h)+(X/8)+Y*32
                      	;input: bc=graphic X, de=graphic Y
                      	;output: hl=VRAM address, d=bit
                      	;destroy: af,bc,e
  143F                	GXY2GAD:
  143F  CD9539        		call	CHKMOD
  1442  CA1566        		jp	z,GXY2GAD66
  1445                	GXY2GAD60:
  1445  CDEC2B        		call	CHKGXY
  1448  EB            		ex	de,hl
  1449  29            		add	hl,hl		;*2
  144A  29            		add	hl,hl		;*4
  144B  29            		add	hl,hl		;*8
  144C  29            		add	hl,hl		;*16
  144D  29            		add	hl,hl		;*32
  144E  3A91FD        		ld	a,(VRAM)
  1451  C602          		add	a,02h
  1453  47            		ld	b,a
  1454  79            		ld	a,c
  1455  CB39          		srl	c
  1457                	GXY2GADEND:
  1457  CB39          		srl	c
  1459  CB39          		srl	c
  145B  09            		add	hl,bc
                      	
  145C  E607          		and	07h
  145E  3C            		inc	a
  145F  47            		ld	b,a
                      	
  1460  3A92FD        		ld	a,(SCREEN1)
  1463  0F            		rrca
  1464  3E01          		ld	a,01h
  1466  3806          		jr	c,GXY2GADLP	;screen mode 4
                      	
  1468  05            		dec	b
  1469  CB80          		res	0,b
  146B  04            		inc	b
  146C  3E81          		ld	a,81h
                      	
  146E                	GXY2GADLP:
  146E  0F            		rrca
  146F  10FD          		djnz	GXY2GADLP
  1471  57            		ld	d,a
  1472  C9            		ret
                      	
                      	
                      	;convert character VRAM address to graphic VRAM address
                      	;(screen mode 1,2 -> screen mode 3,4)
                      	;input: hl=character VRAM address
                      	;output: hl=graphic VRAM address
                      	;destroy: none
  1473                	_AD2GAD:ds	AD2GAD-_AD2GAD
  1478                		org	AD2GAD
                      	
  1478  F5            		push	af
  1479  CD4911        		call	AD2XY
  147C  F1            		pop	af
                      	;	jr	XY2GAD
                      	
                      	
                      	;get VRAM address (screen mode 3,4)
                      	;input: h=x+1, l=y+1
                      	;output: hl=graphic VRAM address =(VRAM+200h)+y*0180h+x
                      	;destroy: none
  147D                	XY2GAD:
  147D  F5            		push	af
  147E  25            		dec	h
  147F  2D            		dec	l
  1480  3A92FD        		ld	a,(SCREEN1)
  1483  FE02          		cp	02h
  1485  2002          		jr	nz,XY2GADC
  1487  CB24          		sla	h		;screen mode 3
  1489                	XY2GADC:
  1489  CB24          		sla	h
  148B  3A91FD        		ld	a,(VRAM)
  148E  C602          		add	a,02h
  1490  85            		add	a,l
  1491  CB3D          		srl	l
  1493  CB1C          		rr	h
  1495  85            		add	a,l
  1496  6C            		ld	l,h
  1497  67            		ld	h,a
  1498  F1            		pop	af
  1499  C9            		ret
                      	
                      	
                      	;get CGROM address (DE=6000h+A*10h)
                      	;input: a=character code
                      	;output: de=address
                      	;destroy: none
  149A                	_CGROM:	ds	CGROM-_CGROM
  14A0                		org	CGROM
                      	
  14A0  F5            		push	af
  14A1  07            		rlca
  14A2  07            		rlca
  14A3  07            		rlca
  14A4  07            		rlca
  14A5  57            		ld	d,a
  14A6  E6F0          		and	0f0h
  14A8  5F            		ld	e,a
  14A9  AA            		xor	d
  14AA  C660          		add	a,60h
  14AC  57            		ld	d,a
  14AD  F1            		pop	af
  14AE  C9            		ret
                      	
                      	;	push	af		;push flag
                      	;	ex	de,hl
                      	;	ld	h,06h
                      	;	ld	l,a
                      	;	add	hl,hl
                      	;	add	hl,hl
                      	;	add	hl,hl
                      	;	add	hl,hl
                      	;	ex	de,hl
                      	;	pop	af		;pop flag
                      	;	ret
                      	
                      	
                      	;print a character in CRT (no control code, no move in cursor)
                      	;input: a=character code, hl=VRAM address
                      	;destroy: none
  14AF                	_PRTCHAD:ds	PRTCHAD-_PRTCHAD
  14AF                		org	PRTCHAD
                      	
  14AF  E5            		push	hl
  14B0  F5            		push	af
  14B1  3A92FD        		ld	a,(SCREEN1)
  14B4  FE02          		cp	02h
  14B6  380A          		jr	c,PRTCHXY12
                      	
                      	;screen mode 3,4
  14B8  CD4911        		call	AD2XY
  14BB  F1            		pop	af
  14BC  F5            		push	af
  14BD  CDD614        		call	PRT34XY
  14C0  1805          		jr	PRTCHADEND
                      	
  14C2                	PRTCHXY12:
  14C2  F1            		pop	af
  14C3  F5            		push	af
  14C4  CDCA14        		call	PRT12
                      	
  14C7                	PRTCHADEND:
  14C7  F1            		pop	af
  14C8  E1            		pop	hl
  14C9  C9            		ret
                      	
                      	
                      	;print a character in text mode (screen mode 1,2)
                      	;input: a=character code, hl=VRAM address
                      	;output: hl=hl+1
                      	;destroy: af
  14CA                	PRT12:
  14CA  E5            		push	hl
  14CB  77            		ld	(hl),a
  14CC  CD410E        		call	CHR2ATT
  14CF  CDF815        		call	CNVATT1
  14D2  77            		ld	(hl),a
  14D3  E1            		pop	hl
  14D4  23            		inc	hl
  14D5  C9            		ret
                      	
                      	
                      	;print a character in graphic mode (screen mode 3,4)
                      	;input: a=character code, h=x+1, l=y+1
                      	;destroy af,hl
  14D6                	PRT34XY:
  14D6  D5            		push	de
  14D7  C5            		push	bc
                      	
  14D8  CDA014        		call	CGROM
  14DB  3A93FD        		ld	a,(COLOR1)
  14DE  CDC015        		call	SETATT
                      	
  14E1  CD9539        		call	CHKMOD
  14E4  CA7066        		jp	z,PRT34XY66
  14E7  CD7D14        		call	XY2GAD
                      	
  14EA  3E04          		ld	a,04h
  14EC  D393          		out	(93h),a		;CGROM ON
                      	
  14EE  060C          		ld	b,0ch
  14F0                	PRT34XYLP:
  14F0  D5            		push	de
  14F1  3A92FD        		ld	a,(SCREEN1)
  14F4  0F            		rrca			;
  14F5  1A            		ld	a,(de)
  14F6  3005          		jr	nc,CALL3	;
  14F8  CD2015        		call	PRT4
  14FB  1804          		jr	CALL34END
  14FD                	CALL3:
  14FD  CD1015        		call	PRT3
  1500  2B            		dec	hl
                      	
  1501                	CALL34END:
  1501  112000        		ld	de,COLUMNS
  1504  19            		add	hl,de
  1505  D1            		pop	de
  1506  1C            		inc	e		;inc de
  1507  10E7          		djnz	PRT34XYLP
                      	
  1509  3E05          		ld	a,05h
  150B  D393          		out	(93h),a		;CGROM OFF
                      	
  150D  C1            		pop	bc
  150E  D1            		pop	de
  150F  C9            		ret
                      	
  1510                	PRT3:
  1510  5F            		ld	e,a
  1511  CD1515        		call	PRT3HALF
  1514  23            		inc	hl
  1515                	PRT3HALF:
  1515  1604          		ld	d,04h
  1517                	PRT3LP:
  1517  CB03          		rlc	e
  1519  17            		rla
  151A  0F            		rrca
  151B  07            		rlca
  151C  17            		rla
  151D  15            		dec	d
  151E  20F7          		jr	nz,PRT3LP
                      	
  1520                	PRT4:
  1520  4F            		ld	c,a
  1521  3AACFE        		ld	a,(ATTDAT)
  1524  AE            		xor	(hl)
  1525  A1            		and	c
  1526  AE            		xor	(hl)
  1527  77            		ld	(hl),a
  1528  C9            		ret
                      	
                      	
                      	;read data from CGROM
                      	;input: de
                      	;output: d
                      	;destroy: a
  1529                	READCGROM:
  1529  3E04          		ld	a,04h
  152B  D393          		out	(93h),a		;CGROM ON
  152D  1A            		ld	a,(de)
  152E  57            		ld	d,a
  152F  3E05          		ld	a,05h
  1531  D393          		out	(93h),a		;CGROM OFF
  1533  C9            		ret
                      	
                      	
                      	;get space attribute data for scroll
                      	;output: a
                      	;destroy: f
  1534                	GETSPA:
  1534  CD9539        		call	CHKMOD
  1537  3A92FD        		ld	a,(SCREEN1)
  153A  CAF564        		jp	z,GETSPA66
  153D  3D            		dec	a
  153E  FAF815        		jp	m,CNVATT1
  1541  280B          		jr	z,GETSPA2
                      	
  1543                	GETSPAG:
  1543  3D            		dec	a
  1544  3A95FD        		ld	a,(COLOR3)
  1547  2802          		jr	z,GETSPA3
  1549  C650          		add	a,50h
  154B                	GETSPA3:
  154B  C68C          		add	a,8ch		;screen mode 3=8ch, screen mode 4=dch
  154D  C9            		ret
                      	
  154E                	GETSPA2:
  154E  3A94FD        		ld	a,(COLOR2)
  1551  B7            		or	a
  1552  2003          		jr	nz,GETSPA2NZ
  1554  3A93FD        		ld	a,(COLOR1)
                      	
  1557                	GETSPA2NZ:
  1557  FE05          		cp	05h
  1559  3A95FD        		ld	a,(COLOR3)
  155C  3802          		jr	c,GETSPAC
  155E  EE02          		xor	02h
  1560                	GETSPAC:
  1560  C660          		add	a,60h
  1562  C9            		ret
                      	
                      	
                      	;check connection to previous character
                      	;input: hl=VRAM address
                      	;output: z-flag(1:connect)
                      	;destroy: af
  1563                	CHKLINE:
  1563  E5            		push	hl
  1564  CD4911        		call	AD2XY
  1567  CD6C15        		call	CHKLINE2
  156A  E1            		pop	hl
  156B  C9            		ret
                      	
                      	
                      	;check connection to previous character
                      	;input: h=x+1, l=y+1
                      	;output: z-flag(1:connect), a(0 or not)
                      	;destroy: f
  156C                	CHKLINE2:
  156C  7C            		ld	a,h
  156D  3D            		dec	a
  156E  2802          		jr	z,CHKLINE3
  1570  AF            		xor	a
  1571  C9            		ret
                      	
                      	
                      	;check connection to previous line
                      	;input: l=y+1
                      	;output: z-flag(1:connect), a(0 or not)
                      	;destroy: f
  1572                	CHKLINE3:
  1572  E5            		push	hl
  1573  2D            		dec	l
  1574  1801          		jr	CHKLMAIN
                      	
                      	;check connection to next line
                      	;input: l=y+1
                      	;output: z-flag(1:connect), a(0 or not)
                      	;destroy: f
  1576                	CHKLINE4:
  1576  E5            		push	hl
  1577                	CHKLMAIN:
  1577  CDCC3F        		call	CALCLINE
  157A  A6            		and	(hl)
  157B  E1            		pop	hl
  157C  C9            		ret
                      	
                      	
                      	;cut connection before cursor line
                      	;output: hl=line status address
                      	;destroy: af,de
  157D                	CUTLINE:
  157D  3AA8FD        		ld	a,(CSRY)	;a>0
                      	
                      	;input: a=y+1
                      	;output: hl=line status address
                      	;destroy: f,de
  1580                	CUTLINE2:
  1580  6F            		ld	l,a
  1581  2D            		dec	l
                      	;	jp	SETLINE
                      	
                      	;set line connection status (connection to next line)
                      	;input: l=y+1, a=data (0=connect or not)
                      	;output: hl=line status address
                      	;destroy: f,de
  1582                	SETLINE:
  1582  57            		ld	d,a
  1583  CDCC3F        		call	CALCLINE
  1586  14            		inc	d
  1587  15            		dec	d
  1588  2804          		jr	z,SETLINEZ
  158A  B6            		or	(hl)
  158B  77            		ld	(hl),a
  158C  7A            		ld	a,d
  158D  C9            		ret
                      	
  158E                	SETLINEZ:
  158E  2F            		cpl
  158F  A6            		and	(hl)
  1590  77            		ld	(hl),a
  1591  7A            		ld	a,d
  1592  C9            		ret
                      	
                      	
                      	;click sound
                      	;destroy: de
  1593                	CLICK:
  1593  F5            		push	af
  1594  3A2DFA        		ld	a,(CONSOL4)
  1597  B7            		or	a
  1598  2823          		jr	z,SKPCLK
                      	
  159A  C5            		push	bc
                      	
  159B  3E08          		ld	a,08h		;register8=ch.A volume
  159D  1E0F          		ld	e,0fh
  159F  CDBE1B        		call	SETPSG2
  15A2  D5            		push	de		;
                      	
  15A3  3E01          		ld	a,01h		;register1=ch.A coarse tune
  15A5  1E00          		ld	e,00h
  15A7  43            		ld	b,e
  15A8  4F            		ld	c,a
  15A9  CDBE1B        		call	SETPSG2		;;
                      	
  15AC  CDE825        		call	WAITLP		;bc=0001h
  15AF  3E01          		ld	a,01h		;register1=ch.A coarse tune
  15B1  5A            		ld	e,d		;;
  15B2  CDC51B        		call	SETPSG
                      	
  15B5  3E08          		ld	a,08h		;register8=ch.A volume
  15B7  D1            		pop	de		;
  15B8  5A            		ld	e,d
  15B9  CDC51B        		call	SETPSG
                      	
  15BC  C1            		pop	bc
                      	
  15BD                	SKPCLK:
  15BD  F1            		pop	af
  15BE  C9            		ret
                      	
                      	
                      	;set attribute data
                      	;input: a=color code
                      	;output: a,(ATTDAT)=attribute
                      	;destroy: f
  15BF                	_SETATT:ds	SETATT-_SETATT
  15C0                		org	SETATT
                      	
  15C0  F5            		push	af
  15C1  CD9539        		call	CHKMOD
  15C4  CA0765        		jp	z,SETATT66
  15C7  F1            		pop	af
  15C8  CDCF15        		call	CNVATT
  15CB  32ACFE        		ld	(ATTDAT),a
  15CE  C9            		ret
                      	
                      	
                      	;convert to attribute data (screen mode 1)
                      	; or color code (screen moode 2)
                      	; or bit pattern (screen mode 3,4)
                      	;input: a=color code
                      	;output: a=attribute
                      	;destroy: f
  15CF                	CNVATT:
  15CF  F5            		push	af		;color
  15D0  3A92FD        		ld	a,(SCREEN1)
  15D3  CB3F          		srl	a
  15D5  2818          		jr	z,ATT12		;screen mode 1 or 2
  15D7  3006          		jr	nc,ATT3		;screen mode 3
                      	
  15D9                	ATT4:
  15D9  F1            		pop	af
  15DA  B7            		or	a
  15DB  C8            		ret	z
  15DC  3EFF          		ld	a,0ffh
  15DE  C9            		ret
                      	
  15DF                	ATT3:
  15DF  F1            		pop	af
  15E0  B7            		or	a
  15E1  C8            		ret	z
                      	
  15E2  C5            		push	bc
                      	;	ld	b,04h
                      	;	cp	b
                      	;	jr	c,ATT3C
                      	;	ld	a,b
                      	;ATT3C:
                      	;	dec	a
                      	;	ld	c,a
                      	;	dec	b		;=3
  15E3  0603          		ld	b,03h
  15E5  3D            		dec	a
  15E6  A0            		and	b
  15E7  4F            		ld	c,a
  15E8                	ATT3LP:
  15E8  0F            		rrca
  15E9  0F            		rrca
  15EA  B1            		or	c
  15EB  10FB          		djnz	ATT3LP
  15ED  C1            		pop	bc
  15EE  C9            		ret
                      	
  15EF                	ATT12:
  15EF  300B          		jr	nc,ATT1
                      	
  15F1                	ATT2:
  15F1  F1            		pop	af
  15F2  FE09          		cp	09h
  15F4  D8            		ret	c
  15F5  3E08          		ld	a,08h
  15F7  C9            		ret
                      	
                      	
                      	;get attribue data for screen mode 1
                      	;output: a=attirbute value
                      	;destroy: f
  15F8                	CNVATT1:
  15F8  3A93FD        		ld	a,(COLOR1)
  15FB  F5            		push	af
  15FC                	ATT1:
  15FC  CD9539        		call	CHKMOD
  15FF  CA3A65        		jp	z,ATT661
  1602  F1            		pop	af
  1603  B7            		or	a
  1604  2803          		jr	z,ATT1OK
  1606  3D            		dec	a
                      	;	cp	04h
                      	;	jr	c,ATT1OK
                      	;	ld	a,03h
  1607  E603          		and	03h
  1609                	ATT1OK:
  1609  C620          		add	a,20h
  160B  E5            		push	hl
  160C  2195FD        		ld	hl,COLOR3
  160F  AE            		xor	(hl)
  1610  E1            		pop	hl
  1611  C9            		ret
                      	
                      	
                      	;get space character data for scroll
                      	;output: a
                      	;destroy: f
  1612                	GETSP:
  1612  CD9539        		call	CHKMOD
  1615  3A92FD        		ld	a,(SCREEN1)
  1618  CAD364        		jp	z,GETSP66
  161B  3D            		dec	a
  161C  3E20          		ld	a,' '
  161E  F8            		ret	m		;screen mode 1
  161F  3A94FD        		ld	a,(COLOR2)
  1622  20AB          		jr	nz,CNVATT	;screen mode 3,4
                      	
                      	;screen mode 2
  1624                	GETSP2:
  1624  B7            		or	a
  1625  2806          		jr	z,GETSP2Z	;color,0
  1627  3D            		dec	a
  1628  0F            		rrca
  1629  0F            		rrca
  162A  F63F          		or	3fh
  162C  C9            		ret
                      	
  162D                	GETSP2Z:
  162D  3A93FD        		ld	a,(COLOR1)
  1630  B7            		or	a
  1631  C8            		ret	z
  1632  3D            		dec	a
  1633  FE04          		cp	04h
  1635  3802          		jr	c,GETSP2ZC
  1637  D604          		sub	04h
  1639                	GETSP2ZC:
  1639  0F            		rrca
  163A  0F            		rrca
  163B  C9            		ret
                      	
                      	
                      	;clear screen using console parameter
                      	;destroy: af,bc,de,hl
  163C                	CLSMAIN2:
  163C  2AA2FD        		ld	hl,(CONSOL1)	;l=(CONSOL1)
  163F  3AA5FD        		ld	a,(LASTLIN)
  1642  95            		sub	l
  1643  3C            		inc	a
                      	
                      	;clear from first line to last line
                      	;input: l=first line+1, a=last line-first line+1
                      	;destroy: af,bc,de,hl
  1644                	CLSMAIN:
  1644  47            		ld	b,a
  1645  4D            		ld	c,l
  1646  CDB811        		call	Y2AD
  1649                	CLSLP:
  1649  CDDA11        		call	DELLIN
  164C  212000        		ld	hl,COLUMNS
  164F  CB52          		bit	2,d
  1651  2802          		jr	z,CLS60
  1653  2E28          		ld	l,CLMN66	;h=0
  1655                	CLS60:
  1655  19            		add	hl,de
  1656  E5            		push	hl		;
  1657  69            		ld	l,c
  1658  79            		ld	a,c		;>0
  1659  CD8215        		call	SETLINE
  165C  0C            		inc	c
  165D  D1            		pop	de		;
  165E  10E9          		djnz	CLSLP
                      	
  1660  CD6511        		call	CTLHOM		;h<-1
  1663  25            		dec	h
  1664  6C            		ld	l,h		;hl=0000h
  1665  22AEFD        		ld	(GRPX1),hl
  1668  22B0FD        		ld	(GRPY1),hl
                      	
  166B  C3AE12        		jp	PRTFKEY
                      	
                      	
                      	;cold start (initialize hardware)
  166E                	COLD:
                      	
                      	;8255 (port 93h)
  166E  019306        		ld	bc,0693h
  1671  78            		ld	a,b
  1672  21DA00        		ld	hl,IOTBL93
  1675  EDB3          		otir
                      	
                      	;port c1h
                      	;	ld	a,06h
  1677  D3C1          		out	(0c1h),a	;32x16 text mode
                      	
                      	;8251 (port 81h)
  1679  018105        		ld	bc,0581h
                      	;	ld	hl,IOTBL81
  167C  EDB3          		otir
                      	
                      	;port f0h-f8h
  167E  01EF09        		ld	bc,09efh
                      	;	ld	hl,IOTBLF0
  1681                	F0LP:
  1681  0C            		inc	c
  1682  EDA3          		outi
  1684  20FB          		jr	nz,F0LP
                      	
                      	;interrupt
                      	;	ld	hl,INTTBL
  1686  1102FA        		ld	de,0fa02h
  1689  0E21          		ld	c,HEIGHT-0fa00h+1	;b=0
                      	
  168B  EDB0          		ldir
  168D  7A            		ld	a,d
  168E  ED47          		ld	i,a
  1690  ED5E          		im	2
                      	
                      	;clear work area
                      	
  1692                	COLDLP1:
  1692  AF            		xor	a
  1693  12            		ld	(de),a
  1694  13            		inc	de
  1695  7A            		ld	a,d
  1696  B3            		or	e
  1697  20F9          		jr	nz,COLDLP1
                      	
                      	;stack pointer
  1699  2100E7        		ld	hl,0e700h
  169C  F9            		ld	sp,hl		;temporary
                      	
                      	;relay,VRAM,timer
  169D  3C            		inc	a		;a=1
  169E  322DFA        		ld	(CONSOL4),a
                      	
                      	;hook
  16A1  218AFF        		ld	hl,HOOK
  16A4  061E          		ld	b,1eh
  16A6  1E03          		ld	e,03h		;d=0
  16A8                	COLDLP2:
  16A8  36C9          		ld	(hl),0c9h
  16AA  19            		add	hl,de
  16AB  10FB          		djnz	COLDLP2
                      	
                      	;buffer
  16AD  21B9FB        		ld	hl,KEYBUF
  16B0  1E40          		ld	e,40h		;d=0
  16B2  2293FB        		ld	(KYBFAD),hl
  16B5  19            		add	hl,de		;hl=RSBUF
  16B6  2299FB        		ld	(RSBFAD),hl
  16B9  19            		add	hl,de		;hl=BUFA
  16BA  22A5FB        		ld	(BUFAAD),hl
  16BD  19            		add	hl,de		;hl=BUFB
  16BE  22ABFB        		ld	(BUFAAD+6),hl
  16C1  19            		add	hl,de		;hl=BUFC
  16C2  22B1FB        		ld	(BUFAAD+12),hl
                      	
  16C5  2192FB        		ld	hl,KYBFSZ
  16C8  1E06          		ld	e,06h		;d=0
  16CA  43            		ld	b,e		;e=6
  16CB                	COLDLP3:
  16CB  363F          		ld	(hl),3fh	;KYBFSZ,RSBFSZ,,BUFASZ,BUFBSZ,BUFCSZ
  16CD  19            		add	hl,de
  16CE  10FB          		djnz	COLDLP3
                      	
                      	;command/function jump table
  16D0  2161FA        		ld	hl,CMDTBL
  16D3  0668          		ld	b,0+(FILES-CMDTBL)/2
  16D5                	COLDLP4:
  16D5  36C2          		ld	(hl),SNERR-SNERR/100h*100h
  16D7  23            		inc	hl
  16D8  3603          		ld	(hl),SNERR/100h
  16DA  23            		inc	hl
  16DB  10F8          		djnz	COLDLP4
                      	
                      	;command jump table
  16DD  219A01        		ld	hl,CMDLST
  16E0  1161FA        		ld	de,CMDTBL
  16E3  0E56          		ld	c,2*(CMDLAST-80h+1)	;b=0
  16E5  EDB0          		ldir
                      	
                      	;function jump table
                      	;	ld	hl,FNCLST
  16E7  11E5FA        		ld	de,FNCTBL
  16EA  0E3C          		ld	c,2*(FNCLAST-FNC1ST+1)	;b=0
  16EC  EDB0          		ldir
                      	
                      	;screen
  16EE  1191FD        		ld	de,VRAM		;top of active page data
  16F1  3E05          		ld	a,05h
  16F3  32C7FE        		ld	(FKEYLEN),a
  16F6                	COLDLP5:
  16F6  213D01        		ld	hl,PAGEDATA
  16F9  0E28          		ld	c,PAGE1-VRAM	;b=0
  16FB  EDB0          		ldir
  16FD  3D            		dec	a
  16FE  20F6          		jr	nz,COLDLP5
                      	
                      	;	ld	de,PAGE4+(PAGE4-PAGE3)
  1700  EB            		ex	de,hl
  1701  11D8FF        		ld	de,0-(PAGE4-PAGE3)
  1704  3EA0          		ld	a,0a0h
  1706                	COLDLP6:
  1706  19            		add	hl,de
  1707  77            		ld	(hl),a		;(PAGE4)=a0h, (PAGE3)=c0h, (PAGE2)=e0h
  1708  C620          		add	a,20h
  170A  20FA          		jr	nz,COLDLP6
                      	
                      	;display
                      	;	xor	a
  170C  CD0C14        		call	CHGACT
  170F  CDED13        		call	CHGDSP
  1712  CDFB1D        		call	CLS
                      	
                      	;RND()
                      	;	call	SETZERO
  1715  CDB53B        		call	RNDMNS
                      	
                      	;PLAY
  1718  CDB31B        		call	PLSTOP		;ei
                      	
                      	;for mode select
  171B  3EFF          		ld	a,0ffh
  171D  324EFF        		ld	(PROGAD),a	;invalid value, not set yet
                      	
                      	;RAM access subroutine
  1720  212260        		ld	hl,READRAM_SRC
  1723  118DFE        		ld	de,READRAM
  1726  011F00        		ld	bc,RAMEND-READRAM_SRC
  1729  EDB0          		ldir
                      	
                      	;RAM size and stack work
  172B  0608          		ld	b,08h
  172D  CDE825        		call	WAITLP
  1730  CDBC0F        		call	GETCH
  1733  2100C4        		ld	hl,0c400h
  1736  0602          		ld	b,02h
  1738  280E          		jr	z,COLD16K
  173A  3D            		dec	a
                      	;	or	02h
  173B  B0            		or	b
  173C  D633          		sub	'4'-1
  173E  2008          		jr	nz,COLD16K
  1740  3C            		inc	a
  1741  3265FE        		ld	(MODE),a	;a=1 (mode=2)
  1744  2684          		ld	h,84h
  1746  0604          		ld	b,04h
  1748                	COLD16K:
  1748  2229FF        		ld	(BASICAD),hl
  174B  2C            		inc	l
  174C  225FFA        		ld	(STARTAD),hl
  174F  2D            		dec	l
  1750  78            		ld	a,b
  1751  328CFD        		ld	(PAGES),a
  1754  26F9          		ld	h,0f9h
  1756  225BFA        		ld	(STACK),hl
                      	
  1759  3E71          		ld	a,71h		;0000-3fff:BASIC ROM, 4000-7fff:external ROM
  175B  D3F0          		out	(0f0h),a
                      	
  175D  C33B00        		jp	HOT
                      	
                      	
                      	;analyze an argument
                      	;input: hl=program address
                      	;output: hl=next address, FAC1=numerical value or pointer to string descriptor
                      	;	 (ARGTYP)=0(numeric), 1(string), other(cannot analyze)
                      	;destroy: FAC2,af,bc,de,hl
  1760                	ARG:
  1760  E5            		push	hl
  1761  CD2A0C        		call	SETZERO		;for first +-
  1764  E1            		pop	hl
  1765  AF            		xor	a
  1766  5F            		ld	e,a
  1767  D5            		push	de		;e=dummy operator
  1768  3D            		dec	a
  1769  3225FF        		ld	(ARGTYP),a	;ff=unknown
  176C  3265FF        		ld	(OPRTR),a
  176F                	ARGLP:
  176F  E5            		push	hl
  1770  CDE934        		call	CHKFRE
  1773  E1            		pop	hl
  1774                	ARGLP2:
  1774  7E            		ld	a,(hl)
  1775  47            		ld	b,a		;
  1776  23            		inc	hl
  1777  224EFF        		ld	(PROGAD),hl
                      	;command, function, operator
  177A  B7            		or	a
  177B  FA6018        		jp	m,ARGCMD
                      	;space
  177E  FE20          		cp	' '
  1780  28F2          		jr	z,ARGLP2
                      	
                      	;previous argument without operator?
  1782  3A65FF        		ld	a,(OPRTR)
  1785  B7            		or	a
  1786  281F          		jr	z,ARGTAIL
                      	;[A-Z]
  1788  78            		ld	a,b		;
  1789  D641          		sub	'A'
  178B  FE1A          		cp	'Z'-'A'+1
  178D  384C          		jr	c,ARGVAR
                      	;[0-9&.]
  178F  D6EF          		sub	'0'-'A'
  1791  FE0A          		cp	'9'-'0'+1
  1793  78            		ld	a,b		;
  1794  382F          		jr	c,ARGNUM
  1796  FE26          		cp	'&'
  1798  282B          		jr	z,ARGNUM
  179A  FE2E          		cp	'.'
  179C  2827          		jr	z,ARGNUM
                      	;others
  179E  FE22          		cp	22h		;double quotation mark
  17A0  CA2F18        		jp	z,ARGSTR
  17A3  FE28          		cp	'('
  17A5  2808          		jr	z,PARL
  17A7                	ARGTAIL:
  17A7  2B            		dec	hl
  17A8  224EFF        		ld	(PROGAD),hl
  17AB  AF            		xor	a
  17AC  C3E418        		jp	OPR
                      	
  17AF                	PARL:
  17AF  CD673F        		call	CHKCLN
  17B2  CAF803        		jp	z,MOERR
  17B5  CD6017        		call	ARG
  17B8  3A25FF        		ld	a,(ARGTYP)
  17BB  FE02          		cp	02h
  17BD  D2C203        		jp	nc,SNERR
  17C0  CD910B        		call	CHKRPAR
  17C3  18AA          		jr	ARGLP
                      	
  17C5                	ARGNUM:
  17C5  CDD317        		call	ARGNCHK
  17C8  2B            		dec	hl
  17C9  3EFF          		ld	a,0ffh
  17CB  CD9B39        		call	ATOF
  17CE  224EFF        		ld	(PROGAD),hl
  17D1  189C          		jr	ARGLP
                      	
                      	;destroy: af,bc
  17D3                	ARGNCHK:
  17D3  AF            		xor	a
  17D4  3265FF        		ld	(OPRTR),a
  17D7  3225FF        		ld	(ARGTYP),a
  17DA  C9            		ret
                      	
  17DB                	ARGVAR:
  17DB  E5            		push	hl		;program address
  17DC  CD8833        		call	GETNAME
  17DF  3A25FF        		ld	a,(ARGTYP)
  17E2  57            		ld	d,a
  17E3  3A65FF        		ld	a,(OPRTR)
  17E6  5F            		ld	e,a
  17E7  D5            		push	de		;;
  17E8  EB            		ex	de,hl
  17E9  CD1F39        		call	PUSHF1
  17EC  EB            		ex	de,hl
                      	
  17ED  C5            		push	bc		;variable name
  17EE  7E            		ld	a,(hl)
  17EF  FE28          		cp	'('
  17F1  280D          		jr	z,ARGVARR
  17F3  224EFF        		ld	(PROGAD),hl
  17F6  CDAC33        		call	SRCHVAR
  17F9  3008          		jr	nc,ARGVNC
  17FB  11AB0E        		ld	de,ZERO
  17FE  1803          		jr	ARGVNC
  1800                	ARGVARR:
  1800  CDAA32        		call	GETARR
  1803                	ARGVNC:
  1803  C1            		pop	bc		;variable name
  1804  CD3D39        		call	POPF1
  1807  E1            		pop	hl		;;
  1808  7C            		ld	a,h
  1809  3225FF        		ld	(ARGTYP),a
  180C  7D            		ld	a,l
  180D  3265FF        		ld	(OPRTR),a
  1810  E1            		pop	hl		;program address
  1811  CB79          		bit	7,c
  1813  2011          		jr	nz,ARGVSTR
  1815                	ARGVNUM:
  1815  CDD317        		call	ARGNCHK
  1818  EB            		ex	de,hl
  1819  1166FF        		ld	de,FAC1
  181C  EDA0          		ldi
  181E                	ARGVLDIR:
  181E  010400        		ld	bc,0004h
  1821  EDB0          		ldir
  1823  C33219        		jp	ARGNEXT2
                      	
                      	
                      	;string variable
  1826                	ARGVSTR:
  1826  CD5018        		call	ARGSCHK
  1829  EB            		ex	de,hl
  182A  112DFF        		ld	de,STRDSC1
  182D  18EF          		jr	ARGVLDIR
                      	
  182F                	ARGSTR:
  182F  CD5018        		call	ARGSCHK
  1832  222FFF        		ld	(STRDSC1+2),hl
  1835  1E00          		ld	e,00h
  1837                	ARGSLP:
  1837  7E            		ld	a,(hl)
  1838  B7            		or	a
  1839  280B          		jr	z,ARGSOK
  183B  23            		inc	hl
  183C  FE22          		cp	22h		;double quotation mark
  183E  2806          		jr	z,ARGSOK
  1840  1C            		inc	e
  1841  CAE903        		jp	z,LSERR
  1844  18F1          		jr	ARGSLP
  1846                	ARGSOK:
  1846  ED532DFF      		ld	(STRDSC1),de
  184A  224EFF        		ld	(PROGAD),hl
  184D  C36F17        		jp	ARGLP
                      	
                      	;destroy: af,bc
  1850                	ARGSCHK:
  1850  AF            		xor	a
  1851  3265FF        		ld	(OPRTR),a	;a=0
  1854  3C            		inc	a
  1855  3225FF        		ld	(ARGTYP),a	;a=1
  1858  012DFF        		ld	bc,STRDSC1
  185B  ED4367FF      		ld	(FAC1+1),bc
  185F  C9            		ret
                      	
  1860                	ARGCMD:
                      	;	call	CHKMOD
                      	;	ld	a,b		;
                      	;	jr	z,ARGCMD66
                      	
  1860  3A65FE        		ld	a,(MODE)
  1863  FE02          		cp	02h
  1865  78            		ld	a,b		;
  1866  3005          		jr	nc,ARGCMD66
                      	
  1868  FEF2          		cp	FNCLAST+1	;0f2h
  186A  D2C203        		jp	nc,SNERR
  186D                	ARGCMD66:
  186D  FEFA          		cp	FLAST66+1	;0fah
  186F  D2C203        		jp	nc,SNERR
  1872  D6CA          		sub	PLUS_		;0cah
  1874  FE0A          		cp	FNC1ST-PLUS_
  1876  78            		ld	a,b		;
  1877  386B          		jr	c,OPR		;0cah-0d3h
                      	
  1879  3A65FF        		ld	a,(OPRTR)
  187C  B7            		or	a
  187D  CAA717        		jp	z,ARGTAIL
                      	
  1880  78            		ld	a,b		;
  1881  FEC8          		cp	NOT_		;0c8h
  1883  285F          		jr	z,OPR
  1885  FE9F          		cp	SCREEN_		;9fh
  1887  280D          		jr	z,FNC
  1889  FEC4          		cp	FN_		;0c4h
  188B  2809          		jr	z,FNC
  188D  FEC6          		cp	INKEY_		;0c6h
  188F  2805          		jr	z,FNC
  1891  FECA          		cp	PLUS_		;0cah
  1893  DAA717        		jp	c,ARGTAIL
                      	
                      	;	jr	FNC
                      	
                      	;function
  1896                	FNC:
  1896  AF            		xor	a
  1897  3225FF        		ld	(ARGTYP),a
  189A  78            		ld	a,b		;
  189B  FEC6          		cp	INKEY_
  189D  CA9E27        		jp	z,F_INKY
  18A0  FEC4          		cp	FN_
  18A2  CACE3E        		jp	z,F_FN
  18A5  FE9F          		cp	SCREEN_
  18A7  CAB13E        		jp	z,F_SCRN
                      	
  18AA  CDC018        		call	CALLFNC
  18AD                	FNCRTN:
  18AD  2A4EFF        		ld	hl,(PROGAD)
  18B0                	CLRSTRD:
  18B0  3A25FF        		ld	a,(ARGTYP)
  18B3  B7            		or	a
  18B4  2003          		jr	nz,CLRSTRDNZ
  18B6  322DFF        		ld	(STRDSC1),a	;=0
  18B9                	CLRSTRDNZ:
  18B9  AF            		xor	a
  18BA  3265FF        		ld	(OPRTR),a
  18BD  C36F17        		jp	ARGLP
                      	
  18C0                	CALLFNC:
  18C0  FEEA          		cp	LEFT_
  18C2  300B          		jr	nc,SKIPARG
                      	
                      	;SGN()...CHR$()
  18C4  F5            		push	af
  18C5  CD820B        		call	CHKLPAR
  18C8  CD6017        		call	ARG
  18CB  CD910B        		call	CHKRPAR
  18CE  F1            		pop	af
                      	
  18CF                	SKIPARG:
  18CF  113DFA        		ld	de,FNCTBL-(FNC1ST-80h)*2
  18D2  FED7          		cp	USR_
  18D4  C2503F        		jp	nz,JPTBL
                      	
                      	;USR() function
  18D7  E5            		push	hl		;program address
  18D8  CD503F        		call	JPTBL
  18DB  CD680B        		call	CHKNUM
  18DE  AF            		xor	a
  18DF  322DFF        		ld	(STRDSC1),a
  18E2  F1            		pop	af		;cancel program address
  18E3  C9            		ret
                      	
                      	
                      	;operator
  18E4                	OPR:
  18E4  FED3          		cp	LT_		;0d3h
  18E6  2001          		jr	nz,OPRNZ
  18E8  3C            		inc	a		;0d3h -> 0d4h
  18E9                	OPRNZ:
  18E9  57            		ld	d,a		;operator
  18EA  3A65FF        		ld	a,(OPRTR)
  18ED  3C            		inc	a
  18EE  FE02          		cp	02h
  18F0  D28C19        		jp	nc,OPROPR	;not 00 nor ff
  18F3  3A25FF        		ld	a,(ARGTYP)
  18F6  3C            		inc	a
  18F7  7A            		ld	a,d		;operator
  18F8  2010          		jr	nz,NOTHEAD
                      	;first +, for numeric and string
  18FA  FECA          		cp	PLUS_
  18FC  2834          		jr	z,ARGNEXT2
  18FE  FECB          		cp	MINUS_
  1900  2808          		jr	z,NOTHEAD
  1902  FEC8          		cp	NOT_
  1904  2804          		jr	z,NOTHEAD
  1906  B7            		or	a
  1907  C2C203        		jp	nz,SNERR
  190A                	NOTHEAD:
  190A  CDC419        		call	GETPRIO
  190D  5F            		ld	e,a
  190E  C1            		pop	bc		;c=previous operator
  190F  C5            		push	bc
  1910  79            		ld	a,c
  1911  B7            		or	a
  1912  2870          		jr	z,ARGHEAD
                      	
  1914  CDC419        		call	GETPRIO
  1917  BB            		cp	e
  1918  301E          		jr	nc,CALLOP
  191A  7A            		ld	a,d		;operator
  191B                	ARGNEXT:
  191B  3265FF        		ld	(OPRTR),a
  191E  3A25FF        		ld	a,(ARGTYP)
  1921  3D            		dec	a
  1922  2805          		jr	z,ARGNEXTS
  1924  CD1F39        		call	PUSHF1
  1927  1809          		jr	ARGNEXT2
  1929                	ARGNEXTS:
  1929  CDE019        		call	COPYSTR
  192C  2A65FF        		ld	hl,(FAC1-1)	;h=length, l=operator
  192F  CBB5          		res	6,l
  1931  E5            		push	hl
  1932                	ARGNEXT2:
  1932  2A4EFF        		ld	hl,(PROGAD)
  1935  C36F17        		jp	ARGLP
                      	
                      	
  1938                	CALLOP:
  1938  D5            		push	de		;;d=following operator
  1939  C5            		push	bc		;c=previous operator
  193A  3A25FF        		ld	a,(ARGTYP)
  193D  3D            		dec	a
  193E  2829          		jr	z,CALLOPS
                      	
                      	;numeric
  1940  CD5B39        		call	CPYFAC
  1943  C1            		pop	bc		;
  1944  D1            		pop	de		;;
  1945  CD3D39        		call	POPF1
                      	
  1948                	CALLOPEND:
  1948  CB71          		bit	6,c
  194A  2007          		jr	nz,TYPNUM
  194C  CBF1          		set	6,c
  194E  2125FF        		ld	hl,ARGTYP
  1951  CBCE          		set	1,(hl)
  1953                	TYPNUM:
  1953  D5            		push	de		;;
  1954  79            		ld	a,c
  1955  FED2          		cp	GT_+1
  1957  3802          		jr	c,CALLOPOK
                      	;>,=,<
  1959  3ED1          		ld	a,GT_
                      	
  195B                	CALLOPOK:
  195B  11F600        		ld	de,OPRTBL-(0c8h-80h)*2
  195E  CD503F        		call	JPTBL
  1961  AF            		xor	a
  1962  3265FF        		ld	(OPRTR),a
  1965  F1            		pop	af		;;
  1966  C3E418        		jp	OPR
                      	
                      	;string
  1969                	CALLOPS:
  1969  ED4B2DFF      		ld	bc,(STRDSC1)
  196D  ED5B2FFF      		ld	de,(STRDSC1+2)
  1971  CDF419        		call	BACKSTR
  1974  ED4339FF      		ld	(STRDSC4),bc
  1978  ED533BFF      		ld	(STRDSC4+2),de
  197C  C1            		pop	bc
  197D  D1            		pop	de
  197E  E1            		pop	hl
  197F  2265FF        		ld	(FAC1-1),hl
  1982  18C4          		jr	CALLOPEND
                      	
  1984                	ARGHEAD:
  1984  82            		add	a,d		;d=0?
  1985  2094          		jr	nz,ARGNEXT
  1987  E1            		pop	hl		;cancel dummy operator
  1988  2A4EFF        		ld	hl,(PROGAD)
  198B  C9            		ret
                      	
                      	;operator and operator
  198C                	OPROPR:
  198C  7A            		ld	a,d		;operator
  198D  FEC8          		cp	NOT_		;0c8h
  198F  288A          		jr	z,ARGNEXT
  1991  FECA          		cp	PLUS_		;0cah
  1993  2824          		jr	z,OPRPLS
  1995  21A60E        		ld	hl,MNSONE
  1998  FECB          		cp	MINUS_		;0cbh
  199A  2820          		jr	z,OPRMNS
  199C  FED1          		cp	GT_		;0d1h
  199E  DAC203        		jp	c,SNERR
                      	
                      	;>,=,<
                      	;bit0: >
                      	;bit1: =
                      	;bit2: <
  19A1  2165FF        		ld	hl,OPRTR
  19A4  7E            		ld	a,(hl)
  19A5  FED1          		cp	GT_
  19A7  DAC203        		jp	c,SNERR
  19AA  B2            		or	d
  19AB  BE            		cp	(hl)
  19AC  CAC203        		jp	z,SNERR
  19AF  77            		ld	(hl),a
                      	
                      	;copy numeric/string bit
  19B0  E607          		and	07h		;<=> bits
  19B2  C1            		pop	bc		;c=previous operator
  19B3  B1            		or	c
  19B4  4F            		ld	c,a
  19B5  C5            		push	bc
  19B6  C33219        		jp	ARGNEXT2
                      	
                      	;+
  19B9                	OPRPLS:
  19B9  21A10E        		ld	hl,PLSONE
                      	;-
  19BC                	OPRMNS:
  19BC  CD2D0C        		call	SETF1
  19BF  3ECC          		ld	a,ASTRSK_	;0cch
  19C1  C31B19        		jp	ARGNEXT
                      	
                      	
                      	;input: a=operator
                      	;output: a=priority
                      	;destroy: f,hl
  19C4                	GETPRIO:
  19C4  B7            		or	a
  19C5  C8            		ret	z
  19C6  21DF19        		ld	hl,PRIO+GT_-NOT_
  19C9  F640          		or	40h		;numeric/string bit
  19CB  D6D1          		sub	GT_		;0d1h
  19CD  3005          		jr	nc,PRIONC	;>,=,<
  19CF  85            		add	a,l
  19D0  6F            		ld	l,a
  19D1  3801          		jr	c,PRIONC
  19D3  25            		dec	h
  19D4                	PRIONC:
  19D4  7E            		ld	a,(hl)
  19D5  C9            		ret
                      	
  19D6                	PRIO:
                      	;operator priority table
                      	;		not   +  -  *  /  ^ and or >=<
  19D6  03000505060607		db	3, 0, 5, 5, 6, 6, 7, 2, 1, 4
                      	
                      	
                      	;check string descriptor and copy
                      	;destroy: af,bc,de,hl
  19E0                	COPYSTR:
  19E0  2139FF        		ld	hl,STRDSC4
  19E3  7E            		ld	a,(hl)
  19E4  B7            		or	a
  19E5  C2EC03        		jp	nz,STERR
  19E8  2B            		dec	hl		;STRDSC3+3
  19E9  113CFF        		ld	de,STRDSC4+3
  19EC  010C00        		ld	bc,000ch
  19EF  EDB8          		lddr			;STRDSC3->STRDSC4, STRDSC2->STRDSC3, STRDSC1->STRDSC2
                      	;	xor	a
  19F1  23            		inc	hl
  19F2  77            		ld	(hl),a		;(STRDSC1)=0
  19F3  C9            		ret
                      	
                      	
                      	;copy back string descriptor
                      	;destroy: af,hl
  19F4                	BACKSTR:
  19F4  D5            		push	de
  19F5  C5            		push	bc
  19F6  2131FF        		ld	hl,STRDSC2
  19F9  112DFF        		ld	de,STRDSC1
  19FC  010C00        		ld	bc,000ch
  19FF  EDB0          		ldir			;STRDSC2->STRDSC1, STRDSC3->STRDSC2, STRDSC4->STRDSC3
  1A01  AF            		xor	a
  1A02  12            		ld	(de),a		;(STRDSC4)=0
  1A03  C1            		pop	bc
  1A04  D1            		pop	de
  1A05  C9            		ret
                      	
                      	
                      	;send graphic data to PC-6021
                      	;input: c
                      	;destroy: af
  1A06                	SENDGRP:
  1A06  3E80          		ld	a,80h
  1A08                	SENDGLP:
  1A08  CB01          		rlc	c
  1A0A  1F            		rra
  1A0B  30FB          		jr	nc,SENDGLP
  1A0D  1828          		jr	PRINTER
                      	
                      	
                      	;put a character to printer
                      	;input: a
                      	;destroy: none
  1A0F                	_PUTPRT:ds	PUTPRT-_PUTPRT
  1A1C                		org	PUTPRT
                      	
  1A1C  F5            		push	af
  1A1D  3A31FA        		ld	a,(GRPFLG)
  1A20  B7            		or	a
  1A21  2806          		jr	z,NOTGRP
  1A23  AF            		xor	a
  1A24                	SETGRP:
  1A24  3231FA        		ld	(GRPFLG),a
  1A27  F1            		pop	af
  1A28  C9            		ret
                      	
  1A29                	NOTGRP:
  1A29  F1            		pop	af
  1A2A  F5            		push	af
  1A2B  FE14          		cp	14h
  1A2D  28F5          		jr	z,SETGRP
  1A2F  CD4F1A        		call	CNVKANA
  1A32  CD371A        		call	PRINTER
  1A35  F1            		pop	af
  1A36  C9            		ret
                      	
                      	
                      	;input: a
                      	;destroy: af
  1A37                	PRINTER:
  1A37  F5            		push	af
  1A38                	PRINTERLP:
  1A38  DBC0          		in	a,(0c0h)
  1A3A  E602          		and	02h
  1A3C  2005          		jr	nz,PRINTERZ	;ready
  1A3E  CD4D27        		call	STOPESC
  1A41  18F5          		jr	PRINTERLP
                      	
  1A43                	PRINTERZ:
  1A43  F1            		pop	af
  1A44  2F            		cpl
  1A45  D391          		out	(91h),a
  1A47  3E01          		ld	a,01h
  1A49  D393          		out	(93h),a		;strobe (>1us)
  1A4B  AF            		xor	a
  1A4C  D393          		out	(93h),a
  1A4E  C9            		ret
                      	
                      	
                      	;convert hiragana -> katakana
                      	;input: a
                      	;output: a
                      	;destroy: f
  1A4F                	_CNVKANA:ds	CNVKANA-_CNVKANA
  1A4F                		org	CNVKANA
                      	
  1A4F  FE86          		cp	86h
  1A51  D8            		ret	c
  1A52  FEA0          		cp	0a0h
  1A54  3803          		jr	c,HIRAGANA
  1A56  FEE0          		cp	0e0h
  1A58  D8            		ret	c
  1A59                	HIRAGANA:
  1A59  EE20          		xor	20h
  1A5B  C9            		ret
                      	
                      	
                      	;CMT open for verify
                      	;destroy: a
  1A5C                	VRFOPN:
  1A5C  3EFF          		ld	a,0ffh
  1A5E  32D8FE        		ld	(VERIFY),a
                      	;	jr	ROPEN
                      	
                      	
                      	;open for tape read
                      	;destroy: none
  1A61                	_ROPEN:ds	ROPEN-_ROPEN
  1A61                		org	ROPEN
                      	
  1A61  F5            		push	af
  1A62  C5            		push	bc
  1A63  061E          		ld	b,1eh
  1A65  CD121B        		call	OPENCMT
  1A68  CD4B1B        		call	RLON
  1A6B  C1            		pop	bc
  1A6C  F1            		pop	af
  1A6D  C9            		ret
                      	
                      	
                      	;get 1 character from CMT
                      	;output: a=data, z(0=error, 1=no error)
                      	;destroy: f
  1A6E                	_GETCMT:ds	GETCMT-_GETCMT
  1A70                		org	GETCMT
                      	
  1A70  3A18FA        		ld	a,(STOPFLG)
  1A73  FE03          		cp	03h
  1A75  2812          		jr	z,CMTSTP
  1A77  3A19FA        		ld	a,(CMTSTAT)
  1A7A  CB67          		bit	4,a
  1A7C  C0            		ret	nz		;read error, z-flag=0
  1A7D  E602          		and	02h
  1A7F  28EF          		jr	z,GETCMT
  1A81  AF            		xor	a		;set z-flag
  1A82  3219FA        		ld	(CMTSTAT),a
  1A85  3A1DFA        		ld	a,(CMTBUF)
  1A88  C9            		ret
                      	
  1A89                	CMTSTP:
  1A89  CD991A        		call	CHKVRF
  1A8C  C35127        		jp	STOPSP
                      	
                      	
                      	;call GETCMT, if z=0 then ?TR Error
  1A8F                	GETCMTTR:
  1A8F  CD701A        		call	GETCMT
  1A92  C8            		ret	z
  1A93  CD991A        		call	CHKVRF
  1A96  C3F503        		jp	TRERR
                      	
                      	
                      	;check verify or not
  1A99                	CHKVRF:
  1A99  CDAA1A        		call	RCLOSE
  1A9C                	CHKVRF2:
  1A9C  3AD8FE        		ld	a,(VERIFY)
  1A9F  B7            		or	a
  1AA0  CCDB34        		call	z,NEW
  1AA3  C9            		ret
                      	
                      	
                      	;close for tape read
                      	;destroy: none
  1AA4                	_RCLOSE:ds	RCLOSE-_RCLOSE
  1AAA                		org	RCLOSE
                      	
  1AAA  F5            		push	af
  1AAB  C5            		push	bc
  1AAC  3E1A          		ld	a,1ah
  1AAE                	CLOSEEND:
  1AAE  CD8F0E        		call	OUT90H
  1AB1  CD491B        		call	RLOFF
  1AB4  C1            		pop	bc
  1AB5  F1            		pop	af
  1AB6  C9            		ret
                      	
                      	
                      	;open for tape write
                      	;destroy: none
  1AB7                	_WOPEN:	ds	WOPEN-_WOPEN
  1AB8                		org	WOPEN
                      	
  1AB8  F5            		push	af
  1AB9  C5            		push	bc
  1ABA  CD4B1B        		call	RLON
  1ABD  CDD91A        		call	BLANK
  1AC0  063E          		ld	b,3eh
  1AC2  CD121B        		call	OPENCMT
  1AC5  CDD91A        		call	BLANK
  1AC8  C1            		pop	bc
  1AC9  F1            		pop	af
  1ACA  C9            		ret
                      	
                      	
                      	;put 1 character to CMT
                      	;input: a=data
                      	;destroy: none
  1ACB                	_PUTCMT:ds	PUTCMT-_PUTCMT
  1ACC                		org	PUTCMT
                      	
  1ACC  F5            		push	af
  1ACD                	PUTCMT2:
  1ACD  CDDC1A        		call	CHKWSTP
  1AD0  3E38          		ld	a,38h
  1AD2  CD8F0E        		call	OUT90H
  1AD5  F1            		pop	af
  1AD6  C38F0E        		jp	OUT90H
                      	
                      	
                      	;wait and check stop for tape write
                      	;destroy: af,bc
  1AD9                	BLANK:
  1AD9  CDE525        		call	WAIT
                      	;	jr	CHKWSTP
                      	
                      	;check stop for tape write
                      	;destroy: af (when not stop)
  1ADC                	CHKWSTP:
  1ADC  3A18FA        		ld	a,(STOPFLG)
  1ADF  FE03          		cp	03h
  1AE1  C0            		ret	nz
  1AE2  CD491B        		call	RLOFF
  1AE5  C35127        		jp	STOPSP
                      	
                      	
                      	;check 8255 status (ready for output to port 90h)
                      	;output: z(0=ready)
                      	;destroy: af,(b)
  1AE8                	_CHK90H:ds	CHK90H-_CHK90H
  1AED                		org	CHK90H
                      	
  1AED  3E08          		ld	a,08h
  1AEF  D393          		out	(93h),a		;disable 8255 INT for reading
  1AF1  DB92          		in	a,(92h)
  1AF3  E688          		and	88h		;nobf=1,intr=1?
  1AF5  EAF91A        		jp	pe,CHK90PE
  1AF8  BF            		cp	a		;set z-flag
  1AF9                	CHK90PE:
  1AF9  3E09          		ld	a,09h
  1AFB  D393          		out	(93h),a		;enable 8255 INT for reading
  1AFD  C9            		ret
                      	
                      	
                      	;close for tape write
                      	;destroy: none
  1AFE                	_WCLOSE:ds	WCLOSE-_WCLOSE
  1B06                		org	WCLOSE
                      	
  1B06  F5            		push	af
  1B07  C5            		push	bc
  1B08  01B003        		ld	bc,03b0h
  1B0B  CDE825        		call	WAITLP
  1B0E  3E3A          		ld	a,3ah
  1B10  189C          		jr	CLOSEEND
                      	
                      	
                      	;open CMT subroutine
                      	;input: b (1eh=read, 3eh=write)
                      	;destroy: af,b
  1B12                	OPENCMT:
  1B12  3A1FFA        		ld	a,(BAUD)	;00=600baud, others=1200baud
  1B15  FE01          		cp	01h
  1B17  9F            		sbc	a,a		;ff=600baud, 00=1200baud
  1B18  80            		add	a,b
  1B19  CD8F0E        		call	OUT90H		;read=1dh(600baud), 1eh(1200baud)
                      					;write=3dh(600baud), 3eh(1200baud)
  1B1C  E6F8          		and	0f8h
  1B1E  3C            		inc	a		;read=19h, write=39h
  1B1F  F3            		di
  1B20  CD8F0E        		call	OUT90H
  1B23  FB            		ei
  1B24  AF            		xor	a
  1B25  3219FA        		ld	(CMTSTAT),a
                      	;	ld	(STOPFLG),a
  1B28  C9            		ret
                      	
                      	
                      	;blink asterisk
                      	;destroy: af
  1B29                	_BLNKAST:ds	BLNKAST-_BLNKAST
  1B2A                		org	BLNKAST
                      	
  1B2A  E5            		push	hl
  1B2B  211EFA        		ld	hl,ASTSTAT
  1B2E  7E            		ld	a,(hl)
  1B2F  EE0A          		xor	'*'-' '
  1B31  77            		ld	(hl),a
                      	
  1B32  CD9539        		call	CHKMOD
  1B35  7E            		ld	a,(hl)
                      	
                      	;	ld	hl,(WIDTH-1)	;h=(WIDTH)
                      	;	dec	h
                      	;	ld	l,01h
                      	
                      	;for compatibility with N6X-BASIC
  1B36  21011F        		ld	hl,01h+(COLUMNS-1)*100h
  1B39  2002          		jr	nz,BLNKASTNZ
  1B3B  2627          		ld	h,CLMN66-1
  1B3D                	BLNKASTNZ:
                      	
  1B3D  CD5712        		call	PRTCHXY
  1B40  E1            		pop	hl
  1B41  C9            		ret
                      	
                      	
                      	;CMT relay on/off
                      	;destroy: af,b
  1B42                	_RLOFF:	ds	RLOFF-_RLOFF
  1B49                		org	RLOFF
                      	
  1B49  1801          		jr	RLOFF2
                      	
  1B4B                	_RLON:	ds	RLON-_RLON
  1B4B                		org	RLON
                      	
  1B4B  3E            		db	3eh		;ld a,
  1B4C                	RLOFF2:
  1B4C  AF            		xor	a		;afh
                      	
  1B4D  0608          		ld	b,00001000b	;bit3=CMT relay
  1B4F  C3541B        		jp	OUTB0H
                      	
                      	
                      	;output to port b0h
                      	;input: a=new data, b=change bit
                      	;destroy: af
  1B52                	_OUTB0H:ds	OUTB0H-_OUTB0H
  1B54                		org	OUTB0H
                      	
  1B54  E5            		push	hl
  1B55  2127FA        		ld	hl,PORTB0H
  1B58  AE            		xor	(hl)
  1B59  A0            		and	b
  1B5A  AE            		xor	(hl)
  1B5B  D3B0          		out	(0b0h),a
  1B5D  77            		ld	(hl),a
  1B5E  E1            		pop	hl
  1B5F  C9            		ret
                      	
                      	
                      	;PLAY stop sub
                      	;destroy: none
  1B60                	_PLSTPS:ds	PLSTPS-_PLSTPS
  1B60                		org	PLSTPS
                      	
  1B60  F5            		push	af
  1B61  E5            		push	hl
  1B62  D5            		push	de
  1B63  C5            		push	bc
                      	
  1B64  3E07          		ld	a,07h		;ch.ABC=tone,portAB=in
  1B66  1E38          		ld	e,38h
  1B68  CDC51B        		call	SETPSG
  1B6B  3C            		inc	a		;register8=ch.A volume
  1B6C  1E00          		ld	e,00h
  1B6E  CDC51B        		call	SETPSG
  1B71  3C            		inc	a		;register9=ch.B volume
  1B72  CDC51B        		call	SETPSG
  1B75  3C            		inc	a		;register10=ch.C volume
  1B76  CDC51B        		call	SETPSG
                      	
  1B79  AF            		xor	a
  1B7A  321BFD        		ld	(PLAYST),a
  1B7D  3214FD        		ld	(CHANNEL),a
                      	
  1B80  67            		ld	h,a
  1B81  6F            		ld	l,a
  1B82  22A1FB        		ld	(BUFAIN),hl	;clear BFIN and BFOUT for ch.A
  1B85  22A7FB        		ld	(BUFBIN),hl	;clear BFIN and BFOUT for ch.B
  1B88  22ADFB        		ld	(BUFCIN),hl	;clear BFIN and BFOUT for ch.C
                      	
  1B8B  211DFD        		ld	hl,PLWKA
  1B8E  77            		ld	(hl),a
  1B8F  54            		ld	d,h
  1B90  5D            		ld	e,l
  1B91  13            		inc	de
  1B92  012400        		ld	bc,PLWKB-PLWKA-1
  1B95  EDB0          		ldir
                      	
  1B97  21B91B        		ld	hl,PLWKTBL
  1B9A  112CFD        		ld	de,PLWKA+OCTAVE
  1B9D  0E05          		ld	c,05h		;b=0
  1B9F  EDB0          		ldir
                      	
  1BA1  211DFD        		ld	hl,PLWKA
  1BA4  1142FD        		ld	de,PLWKB
  1BA7  0E4A          		ld	c,PLWKC-PLWKA	;b=0
  1BA9  EDB0          		ldir
                      	
  1BAB                	POPALL:
  1BAB  C1            		pop	bc
  1BAC  D1            		pop	de
  1BAD  E1            		pop	hl
  1BAE  F1            		pop	af
  1BAF  C9            		ret
                      	
                      	
                      	;stop and initialize for PLAY command
                      	;destroy: none
  1BB0                	_PLSTOP:ds	PLSTOP-_PLSTOP
  1BB3                		org	PLSTOP
  1BB3  F3            		di
  1BB4  CD601B        		call	PLSTPS
  1BB7  FB            		ei
  1BB8  C9            		ret
                      	
                      	
  1BB9                	PLWKTBL:
  1BB9  04            		db	4		;O-value
  1BBA  04            		db	4		;L-value
  1BBB  78            		db	120		;T-value
  1BBC  08            		db	8		;V-value
  1BBD  FF            		db	255		;M-value(low)
                      	
                      	
                      	;get PSG resister value and set new value
                      	;input: a=register, e=value
                      	;output: d=old value
                      	;destroy: none
  1BBE                	_SETPSG2:ds	SETPSG2-_SETPSG2
  1BBE                		org	SETPSG2
                      	
  1BBE  F5            		push	af
  1BBF  D3A0          		out	(0a0h),a
  1BC1  DBA2          		in	a,(0a2h)
  1BC3  57            		ld	d,a
  1BC4  F1            		pop	af
                      	;	jp	SETPSG
                      	
                      	
                      	;set PSG register
                      	;input: a=register, e=value
                      	;destroy: none
  1BC5                	_SETPSG:ds	SETPSG-_SETPSG
  1BC5                		org	SETPSG
                      	
  1BC5  F5            		push	af
  1BC6  D3A0          		out	(0a0h),a
  1BC8  7B            		ld	a,e
  1BC9  D3A1          		out	(0a1h),a
  1BCB  F1            		pop	af
  1BCC  C9            		ret
                      	
                      	
                      	;bell
                      	;destroy: af,bc,e
  1BCD                	_BELL:	ds	BELL-_BELL
  1BCD                		org	BELL
                      	
  1BCD  CDB31B        		call	PLSTOP
                      	;tune
  1BD0  AF            		xor	a		;register0=ch.A 8bit fine tune
  1BD1  1E55          		ld	e,55h
  1BD3  CDC51B        		call	SETPSG
  1BD6  5F            		ld	e,a		;a=0
  1BD7  3C            		inc	a		;register1=ch.A 4bit coarse tune
  1BD8  CDC51B        		call	SETPSG
                      	;volume
  1BDB  1E07          		ld	e,07h
                      	;	ld	a,08h		;register8=ch.A volume
  1BDD  83            		add	a,e		;register8=ch.A volume
  1BDE  CDC51B        		call	SETPSG
  1BE1  010004        		ld	bc,0400h
  1BE4  59            		ld	e,c		;c=0
  1BE5  CDE825        		call	WAITLP
                      	;volume
  1BE8  3E08          		ld	a,08h		;register8=ch.A volume
  1BEA  18D9          		jr	SETPSG
                      	
                      	
                      	;play subroutine called by time interrupt
                      	;destroy: af,bc,de,hl
  1BEC                	PLAYINT:
  1BEC  3A1BFD        		ld	a,(PLAYST)
  1BEF  B7            		or	a
  1BF0  C8            		ret	z
  1BF1                	PLIZ:
  1BF1  0F            		rrca
  1BF2  0F            		rrca
  1BF3  0F            		rrca
  1BF4  4F            		ld	c,a
  1BF5  2167FD        		ld	hl,PLWKC
  1BF8  0603          		ld	b,03h
  1BFA                	PLILP:
  1BFA  E5            		push	hl
  1BFB  CB01          		rlc	c
  1BFD  300D          		jr	nc,PLINC
                      	
  1BFF  56            		ld	d,(hl)
  1C00  2C            		inc	l		;inc	hl
  1C01  5E            		ld	e,(hl)
  1C02  1B            		dec	de
  1C03  73            		ld	(hl),e
  1C04  2D            		dec	l		;dec	hl
  1C05  72            		ld	(hl),d
  1C06  7A            		ld	a,d
  1C07  B3            		or	e
  1C08  205D          		jr	nz,PLINEXT
  1C0A  1806          		jr	PLIGET
                      	
  1C0C                	PLINC:
  1C0C  3A1BFD        		ld	a,(PLAYST)
  1C0F  B7            		or	a
  1C10  2055          		jr	nz,PLINEXT	;if (PLAYST)<>0
                      	
  1C12                	PLIGET:
                      	;length
  1C12  CD4810        		call	GETPLBF
                      	;	jr	z,PLINEXT
  1C15  2864          		jr	z,PLIRES
  1C17  FEFF          		cp	0ffh
  1C19  2860          		jr	z,PLIRES
  1C1B  D1            		pop	de
  1C1C  D5            		push	de
  1C1D  12            		ld	(de),a
  1C1E  CD4810        		call	GETPLBF		;no change in de
  1C21  1C            		inc	e		;inc de
  1C22  12            		ld	(de),a
                      	
                      	;tune
  1C23  CD4810        		call	GETPLBF
  1C26  5F            		ld	e,a
  1C27  78            		ld	a,b
  1C28  87            		add	a,a
  1C29  3D            		dec	a		;register1,3,5=4bit coarse tune
  1C2A  CDC51B        		call	SETPSG
  1C2D  CD4810        		call	GETPLBF
  1C30  5F            		ld	e,a
  1C31  78            		ld	a,b
  1C32  3D            		dec	a
  1C33  87            		add	a,a		;register0,2,4=8bit fine tune
  1C34  CDC51B        		call	SETPSG
                      	
                      	;volume or envelope
  1C37  CD4810        		call	GETPLBF
  1C3A  57            		ld	d,a		;
  1C3B  FE10          		cp	10h
  1C3D  3802          		jr	c,PLIVOL
  1C3F  3E10          		ld	a,10h		;envelope
  1C41                	PLIVOL:
  1C41  5F            		ld	e,a
  1C42  78            		ld	a,b
  1C43  C607          		add	a,07h		;register8,9,10=volume
  1C45  CDC51B        		call	SETPSG
  1C48  7A            		ld	a,d		;
  1C49  D610          		sub	10h
  1C4B  3818          		jr	c,PLISET
                      	
                      	;period
  1C4D  57            		ld	d,a		;
  1C4E  CD4810        		call	GETPLBF
  1C51  5F            		ld	e,a
  1C52  3E0B          		ld	a,0bh
  1C54  CDC51B        		call	SETPSG
  1C57  CD4810        		call	GETPLBF
  1C5A  5F            		ld	e,a
  1C5B  3E0C          		ld	a,0ch
  1C5D  CDC51B        		call	SETPSG
                      	
                      	;envelope pattern
  1C60  5A            		ld	e,d		;
  1C61  3C            		inc	a		;register13=envelope pattern
  1C62  CDC51B        		call	SETPSG
                      	
                      	;status
  1C65                	PLISET:
  1C65  CBC1          		set	0,c
                      	
  1C67                	PLINEXT:
  1C67  E1            		pop	hl
  1C68  7D            		ld	a,l
  1C69  C6DB          		add	a,PLWKA-PLWKB	;no carry
  1C6B  6F            		ld	l,a
  1C6C  108C          		djnz	PLILP
                      	
  1C6E  211BFD        		ld	hl,PLAYST
  1C71  7E            		ld	a,(hl)
  1C72  71            		ld	(hl),c
  1C73  B7            		or	a
  1C74  C8            		ret	z		;old (PLAYST)=0
  1C75  79            		ld	a,c
  1C76  B7            		or	a
  1C77  C0            		ret	nz		;new (PLAYST)<>0
  1C78  C3F11B        		jp	PLIZ		;old<>0 and new=0
                      	
                      	;reset
  1C7B                	PLIRES:
  1C7B  CB81          		res	0,c
  1C7D  78            		ld	a,b
  1C7E  C607          		add	a,07h		;register8,9,10=volume
  1C80  1E00          		ld	e,00h
  1C82  CDC51B        		call	SETPSG
  1C85  18E0          		jr	PLINEXT
                      	
                      	
                      	;get play buffer address
                      	;output: hl
                      	;destroy: f
  1C87                	GETPLAD:
  1C87  67            		ld	h,a
  1C88  3A14FD        		ld	a,(CHANNEL)
  1C8B  6F            		ld	l,a
  1C8C  87            		add	a,a		;a*2
  1C8D  85            		add	a,l		;a*3
  1C8E  87            		add	a,a		;a*6
  1C8F  C6A1          		add	a,BUFAIN-BUFAIN/256*256		;no carry
  1C91  6F            		ld	l,a
  1C92  7C            		ld	a,h
  1C93  26FB          		ld	h,BUFAIN/256	;higher byte
  1C95  C9            		ret
                      	
                      	
                      	;joystick
                      	;input: a=1or2
                      	;output: a (0-0-trigger2-trigger1-right-left-down-up)
                      	;destroy: f
  1C96                	_JOYSTK:ds	JOYSTK-_JOYSTK
  1CA6                		org	JOYSTK
                      	
  1CA6  D5            		push	de
  1CA7  0F            		rrca
  1CA8  37            		scf
  1CA9  1F            		rra
  1CAA  5F            		ld	e,a		;c0h or 80h
                      	
  1CAB  3E07          		ld	a,07h		;register7=portABin-out,noise,tone
  1CAD  F3            		di
  1CAE  D3A0          		out	(0a0h),a
  1CB0  DBA2          		in	a,(0a2h)
  1CB2  1802          		jr	SKPPATCH2
                      	
                      	
                      	;1cb4h-1cb5h: to be patched by PC6001V/VX/VW
  1CB4                	_PATCH2:ds	PATCH2-_PATCH2
  1CB4                		org	PATCH2
  1CB4  0000          		db	00h, 00h
                      	
                      	
  1CB6                	SKPPATCH2:
  1CB6  57            		ld	d,a		;
                      	
  1CB7  E6BF          		and	10111111b	;parallel port A=in
  1CB9  F680          		or	10000000b	;parallel port B=out
  1CBB  D3A1          		out	(0a1h),a
                      	
  1CBD  3E0F          		ld	a,0fh		;register15=parallel port B
  1CBF  CDC51B        		call	SETPSG		;c0h or 80h
                      	
  1CC2  3D            		dec	a		;register14=parallel port A
  1CC3  D3A0          		out	(0a0h),a
  1CC5  DBA2          		in	a,(0a2h)
  1CC7  2F            		cpl
  1CC8  5A            		ld	e,d		;
  1CC9  57            		ld	d,a		;;
                      	
  1CCA  3E07          		ld	a,07h
  1CCC  CD861E        		call	SETPSGEI
                      	
  1CCF  7A            		ld	a,d		;;
  1CD0  D1            		pop	de
  1CD1  C9            		ret
                      	
                      	
                      	;LOCATE command
  1CD2                	_C_LOCA:ds	C_LOCA-_C_LOCA
  1CD2                		org	C_LOCA
                      	
  1CD2  CD320E        		call	INT1ARG2
  1CD5  61            		ld	h,c
  1CD6  3AACFD        		ld	a,(WIDTH)
  1CD9  3D            		dec	a
  1CDA  BC            		cp	h
  1CDB  DACB03        		jp	c,FCERR
  1CDE  6B            		ld	l,e
  1CDF  3A20FA        		ld	a,(HEIGHT)
  1CE2  3D            		dec	a
  1CE3  BD            		cp	l
  1CE4  DACB03        		jp	c,FCERR
  1CE7  24            		inc	h
  1CE8  2C            		inc	l
  1CE9  C36D11        		jp	SETCSR
                      	
                      	
                      	;CONSOLE command
  1CEC                	_C_CNSL:ds	C_CNSL-_C_CNSL
  1CF6                		org	C_CNSL
                      	
  1CF6  ED4BA2FD      		ld	bc,(CONSOL1)	;c=(CONSOL1),b=(CONSOL2)
  1CFA  C5            		push	bc
                      	
  1CFB  CD723F        		call	CHKCMM
  1CFE  2814          		jr	z,CNSLPAR2
                      	
  1D00  CDE40D        		call	INT1ARG
  1D03  3A20FA        		ld	a,(HEIGHT)
  1D06  3D            		dec	a
  1D07  BB            		cp	e
  1D08  3801          		jr	c,CNSLC
  1D0A  7B            		ld	a,e
  1D0B                	CNSLC:
  1D0B  3C            		inc	a
  1D0C  C1            		pop	bc
  1D0D  4F            		ld	c,a
  1D0E  C5            		push	bc
                      	
  1D0F  CD823F        		call	CHKCLCM
  1D12  2838          		jr	z,CNSLEND
                      	
  1D14                	CNSLPAR2:
  1D14  CD723F        		call	CHKCMM
  1D17  2810          		jr	z,CNSLPAR3
                      	
  1D19  CDE40D        		call	INT1ARG
                      	
  1D1C  C1            		pop	bc
  1D1D  81            		add	a,c
  1D1E  DACB03        		jp	c,FCERR
  1D21  3D            		dec	a
  1D22  47            		ld	b,a
  1D23  C5            		push	bc
                      	
  1D24  CD823F        		call	CHKCLCM
  1D27  2823          		jr	z,CNSLEND
                      	
  1D29                	CNSLPAR3:
  1D29  CD723F        		call	CHKCMM
  1D2C  2813          		jr	z,CNSLPAR4
                      	
  1D2E  CDE40D        		call	INT1ARG
  1D31  FE02          		cp	02h
  1D33  D2CB03        		jp	nc,FCERR
  1D36  32A6FD        		ld	(CONSOL3),a
                      	
  1D39  CDB212        		call	PRTFKEY2
  1D3C  CD823F        		call	CHKCLCM
  1D3F  280B          		jr	z,CNSLEND
                      	
  1D41                	CNSLPAR4:
  1D41  CDE40D        		call	INT1ARG
  1D44  FE02          		cp	02h
  1D46  D2CB03        		jp	nc,FCERR
  1D49  322DFA        		ld	(CONSOL4),a
                      	
  1D4C                	CNSLEND:
  1D4C  D1            		pop	de
  1D4D  7A            		ld	a,d
  1D4E  BB            		cp	e
  1D4F  DACB03        		jp	c,FCERR
                      	;	jr	CNSMAIN
                      	
                      	
                      	;CONSOLE command main part
                      	;used by EXAS BASIC compiler
                      	;destroy: af,de,hl
  1D52                	_CNSMAIN:ds	CNSMAIN-_CNSMAIN
  1D52                		org	CNSMAIN
                      	
  1D52  CD731D        		call	SETCNSL
                      	
  1D55  3AA2FD        		ld	a,(CONSOL1)
  1D58  CD8015        		call	CUTLINE2
                      	
  1D5B  3AA8FD        		ld	a,(CSRY)
  1D5E  3D            		dec	a
  1D5F  21A5FD        		ld	hl,LASTLIN
  1D62  BE            		cp	(hl)
  1D63  D8            		ret	c
  1D64  6E            		ld	l,(hl)
  1D65  C36811        		jp	CTLCR
                      	
                      	
                      	;set console parameter
                      	;destroy: af,de,hl
  1D68                	_SETCNSL2:ds	SETCNSL-4-_SETCNSL2
  1D6F                		org	SETCNSL-4
  1D6F                	SETCNSL2:
  1D6F  ED5BA2FD      		ld	de,(CONSOL1)
                      	
                      	;used by MINTMARK
                      	;set console parameter
                      	;input: d=last line+1, e=first line+1
                      	;destroy: af,de,hl
  1D73                	_SETCNSL:ds	SETCNSL-_SETCNSL
  1D73                		org	SETCNSL
                      	;2nd parameter
  1D73  3AA6FD        		ld	a,(CONSOL3)
  1D76  67            		ld	h,a
  1D77  3A20FA        		ld	a,(HEIGHT)
  1D7A  BA            		cp	d
  1D7B  3001          		jr	nc,CNSLNC1
  1D7D  57            		ld	d,a
  1D7E                	CNSLNC1:
                      	
                      	;1st parameter
  1D7E  94            		sub	h
  1D7F  BB            		cp	e
  1D80  3001          		jr	nc,CNSLNC2
  1D82  5F            		ld	e,a
  1D83                	CNSLNC2:
  1D83  6B            		ld	l,e
                      	
                      	;last line
  1D84  67            		ld	h,a		;h=(HEIGHT)-(CONSOL3)
  1D85  BA            		cp	d
  1D86  3F            		ccf
  1D87  3A92FD        		ld	a,(SCREEN1)
  1D8A  1F            		rra
  1D8B  B7            		or	a
  1D8C  2801          		jr	z,CNSLZ
  1D8E  62            		ld	h,d		;if screen mode 3,4 or 2nd<height-3rd
  1D8F                	CNSLZ:
                      	
  1D8F  ED53A2FD      		ld	(CONSOL1),de
  1D93  22A4FD        		ld	(FSTLIN),hl
  1D96  C9            		ret
                      	
                      	
                      	;COLOR command
  1D97                	_C_COLR:ds	C_COLR-_C_COLR
  1D9B                		org	C_COLR
                      	
  1D9B  1193FD        		ld	de,COLOR1
  1D9E  0602          		ld	b,02h
  1DA0                	COLRLP:
  1DA0  CD723F        		call	CHKCMM
  1DA3  2810          		jr	z,COLRZ
  1DA5  C5            		push	bc
  1DA6  D5            		push	de
  1DA7  CDE40D        		call	INT1ARG
  1DAA  D1            		pop	de
  1DAB  C1            		pop	bc
  1DAC  12            		ld	(de),a
  1DAD  CD673F        		call	CHKCLN		;a=(hl)
  1DB0  C8            		ret	z
  1DB1  FE2C          		cp	','
  1DB3  C0            		ret	nz
  1DB4  23            		inc	hl
  1DB5                	COLRZ:
  1DB5  13            		inc	de
  1DB6  10E8          		djnz	COLRLP
                      	
  1DB8                	COLRPAR3:
  1DB8  CDE40D        		call	INT1ARG
                      	;	jp	SETC3
                      	
                      	
                      	;set color 3rd parameter
                      	;input: a=3rd color parameter (1 or 2)
                      	;destroy: af,bc,de
  1DBB                	_SETC3:	ds	SETC3-_SETC3
  1DBB                		org	SETC3
                      	
  1DBB  EB            		ex	de,hl
  1DBC  3D            		dec	a
  1DBD  FE02          		cp	02h
  1DBF  D2CB03        		jp	nc,FCERR
  1DC2  87            		add	a,a		;0 or 2
                      	
  1DC3  2195FD        		ld	hl,COLOR3
  1DC6  BE            		cp	(hl)
  1DC7  C8            		ret	z
  1DC8  77            		ld	(hl),a
                      	
  1DC9  2A90FD        		ld	hl,(VRAM-1)
  1DCC  010200        		ld	bc,0002h	;32*16=256*2
  1DCF  68            		ld	l,b		;b=0
  1DD0                	SETC3LP:
  1DD0  7E            		ld	a,(hl)
  1DD1  EE02          		xor	02h
  1DD3  77            		ld	(hl),a
  1DD4  23            		inc	hl
  1DD5  10F9          		djnz	SETC3LP
  1DD7  0D            		dec	c
  1DD8  20F6          		jr	nz,SETC3LP
  1DDA  EB            		ex	de,hl
  1DDB  C9            		ret
                      	
                      	
                      	;CLS command
                      	;destroy: af,de
  1DDC                	_CLS:	ds	CLS-_CLS
  1DFB                	C_CLS:
  1DFB                		org	CLS
                      	
  1DFB  E5            		push	hl
  1DFC  C5            		push	bc
  1DFD  CD3C16        		call	CLSMAIN2
  1E00  C1            		pop	bc
  1E01  E1            		pop	hl
  1E02  C9            		ret
                      	
                      	
                      	;SCREEN command
  1E03                	_C_SCRN:ds	C_SCRN-_C_SCRN
  1E04                		org	C_SCRN
                      	
  1E04  AF            		xor	a		;1st parmeter=none
  1E05  F5            		push	af
  1E06  ED4B8FFD      		ld	bc,(SCREEN2)
  1E0A  51            		ld	d,c		;2nd parameter-1
  1E0B  58            		ld	e,b		;3rd parameter-1
                      	
  1E0C  CD723F        		call	CHKCMM
  1E0F  280C          		jr	z,SCRPAR2
                      	
  1E11  D5            		push	de
  1E12  CDE40D        		call	INT1ARG
  1E15  D1            		pop	de
  1E16  C1            		pop	bc
  1E17  F5            		push	af		;1st parameter
                      	
  1E18  CD823F        		call	CHKCLCM
  1E1B  2818          		jr	z,GOSCRMAIN
                      	
  1E1D                	SCRPAR2:
  1E1D  CD723F        		call	CHKCMM
  1E20  280C          		jr	z,SCRPAR3
                      	
  1E22  D5            		push	de
  1E23  CDE40D        		call	INT1ARG
  1E26  D1            		pop	de
  1E27  3D            		dec	a
  1E28  57            		ld	d,a		;2nd parameter-1
                      	
  1E29  CD823F        		call	CHKCLCM
  1E2C  2807          		jr	z,GOSCRMAIN
                      	
  1E2E                	SCRPAR3:
  1E2E  D5            		push	de
  1E2F  CDE40D        		call	INT1ARG
  1E32  D1            		pop	de
  1E33  3D            		dec	a
  1E34  5F            		ld	e,a		;3rd parameter-1
                      	
  1E35                	GOSCRMAIN:
  1E35  F1            		pop	af
  1E36  3D            		dec	a
  1E37  4F            		ld	c,a		;1st parameter-1
                      	;	jr	SCRMAIN
                      	
                      	
                      	;SCREEN command main part
                      	;used by EXAS BASIC compiler
                      	;input: c=1st paraeter-1(ff=none), d=2nd parameter-1, e=3rd parameter-1
                      	;destroy: af,de
  1E38                	_SCRMAIN:ds	SCRMAIN-_SCRMAIN
  1E39                		org	SCRMAIN
                      	
  1E39  3A8CFD        		ld	a,(PAGES)
  1E3C  3D            		dec	a
  1E3D  BA            		cp	d
  1E3E  DACB03        		jp	c,FCERR
  1E41  BB            		cp	e
  1E42  DACB03        		jp	c,FCERR
                      	
  1E45  79            		ld	a,c
  1E46  3C            		inc	a
  1E47  FE03          		cp	03h
  1E49  380A          		jr	c,SCROK
  1E4B  FE05          		cp	05h
  1E4D  D2CB03        		jp	nc,FCERR
  1E50  7A            		ld	a,d
  1E51  B7            		or	a
  1E52  CACB03        		jp	z,FCERR
                      	
  1E55                	SCROK:
  1E55  7A            		ld	a,d
  1E56  CD0C14        		call	CHGACT
                      	
  1E59  3A90FD        		ld	a,(SCREEN3)
  1E5C  BB            		cp	e
  1E5D  7B            		ld	a,e
  1E5E  C4ED13        		call	nz,CHGDSP
                      	
  1E61  3A92FD        		ld	a,(SCREEN1)
  1E64  B9            		cp	c
  1E65  C8            		ret	z
  1E66  79            		ld	a,c
  1E67  0C            		inc	c
  1E68  C8            		ret	z		;1st parameter=none
  1E69  C39013        		jp	CHGMOD
                      	
                      	
                      	;TIME function
  1E6C                	F_TIME:
  1E6C  2A28FA        		ld	hl,(TMCNT)
  1E6F  ED5B2AFA      		ld	de,(TMCNT+2)
  1E73  C3A60C        		jp	I4TOF
                      	
                      	
                      	;SOUND command
  1E76                	C_SOUN:
  1E76  CD673F        		call	CHKCLN
  1E79  CAC203        		jp	z,SNERR
  1E7C  CD320E        		call	INT1ARG2
  1E7F  79            		ld	a,c
  1E80  FE10          		cp	10h
  1E82  D2CB03        		jp	nc,FCERR
  1E85  F3            		di
  1E86                	SETPSGEI:
  1E86  CDC51B        		call	SETPSG
  1E89  FB            		ei
  1E8A  C9            		ret
                      	
                      	
                      	;PLAY command
  1E8B                	C_PLAY:
  1E8B  CDB31E        		call	PLAY
  1E8E  224EFF        		ld	(PROGAD),hl
  1E91  C9            		ret
                      	
                      	
                      	;play routine
                      	;input: hl=data address, (z=0)
                      	;output: hl=next address
                      	;destroy: af,bc,de
  1E92                	_PLAY:	ds	PLAY-_PLAY
  1EB3                		org	PLAY
                      	
  1EB3  DDE5          		push	ix
  1EB5  ED5B4EFF      		ld	de,(PROGAD)
  1EB9  D5            		push	de
                      	
  1EBA  AF            		xor	a
  1EBB  3244FD        		ld	(PLWKB+PLLEN),a
  1EBE  3269FD        		ld	(PLWKC+PLLEN),a
                      	
  1EC1  DD211DFD      		ld	ix,PLWKA
  1EC5  0603          		ld	b,03h
  1EC7                	PLAYLP1:
  1EC7  C5            		push	bc
  1EC8  CD8A26        		call	STRARG
  1ECB  DD7702        		ld	(ix+PLLEN),a
  1ECE  DD7303        		ld	(ix+PLADR),e
  1ED1  DD7204        		ld	(ix+PLADR+1),d
  1ED4  012500        		ld	bc,PLWKB-PLWKA
  1ED7  DD09          		add	ix,bc
  1ED9  C1            		pop	bc
  1EDA  CD823F        		call	CHKCLCM
  1EDD  2802          		jr	z,PLSTR0
  1EDF  10E6          		djnz	PLAYLP1
                      	
                      	;check string length=0?
  1EE1                	PLSTR0:
  1EE1  2169FD        		ld	hl,PLWKC+PLLEN
  1EE4  11DBFF        		ld	de,PLWKB-PLWKC
  1EE7  0603          		ld	b,03h
  1EE9                	PLAYLP2:
  1EE9  7E            		ld	a,(hl)
  1EEA  B7            		or	a
  1EEB  200E          		jr	nz,PLAYNZ1
  1EED  78            		ld	a,b
  1EEE  3D            		dec	a
  1EEF  3214FD        		ld	(CHANNEL),a
  1EF2  3EFF          		ld	a,0ffh
  1EF4  E5            		push	hl
  1EF5  F3            		di
  1EF6  CD310F        		call	PUTPLBF
  1EF9  FB            		ei
  1EFA  E1            		pop	hl
  1EFB                	PLAYNZ1:
  1EFB  19            		add	hl,de
  1EFC  10EB          		djnz	PLAYLP2
                      	
  1EFE                	PLAYLP3:
  1EFE  3A18FA        		ld	a,(STOPFLG)
  1F01  FE03          		cp	03h
  1F03  CCB31B        		call	z,PLSTOP
  1F06  285C          		jr	z,PLAYEND
                      	
  1F08  F3            		di
  1F09  DD2167FD      		ld	ix,PLWKC
  1F0D  010003        		ld	bc,0300h	;c=PLAYLEN check counter
  1F10                	PLAYLP4:
  1F10  78            		ld	a,b
  1F11  3D            		dec	a
  1F12  3214FD        		ld	(CHANNEL),a
  1F15  DD7E02        		ld	a,(ix+PLLEN)
  1F18  B7            		or	a
  1F19  2829          		jr	z,PLAYNEXT
                      	
  1F1B  DD6E03        		ld	l,(ix+PLADR)
  1F1E  DD6604        		ld	h,(ix+PLADR+1)
                      	
  1F21  3217FD        		ld	(PLAYLEN),a
  1F24  2218FD        		ld	(PLAYSTR),hl
  1F27  C5            		push	bc
  1F28  CD6F1F        		call	CNVPLAY
  1F2B  C1            		pop	bc
  1F2C  3A17FD        		ld	a,(PLAYLEN)
  1F2F  DD7702        		ld	(ix+PLLEN),a
  1F32  2A18FD        		ld	hl,(PLAYSTR)
  1F35  DD7503        		ld	(ix+PLADR),l
  1F38  DD7404        		ld	(ix+PLADR+1),h
                      	
  1F3B  0C            		inc	c
  1F3C  B7            		or	a
  1F3D  2005          		jr	nz,PLAYNEXT
  1F3F  0D            		dec	c
  1F40  3D            		dec	a
  1F41  CD310F        		call	PUTPLBF		;a=ffh
  1F44                	PLAYNEXT:
  1F44  11DBFF        		ld	de,PLWKB-PLWKC
  1F47  DD19          		add	ix,de
  1F49  10C5          		djnz	PLAYLP4
                      	
  1F4B  211BFD        		ld	hl,PLAYST
  1F4E  7E            		ld	a,(hl)
  1F4F  B7            		or	a
  1F50  200D          		jr	nz,PLAYNZ2
                      	
  1F52  3C            		inc	a		;=01h
  1F53  321EFD        		ld	(PLWKA+REMAIN+1),a
  1F56  3243FD        		ld	(PLWKB+REMAIN+1),a
  1F59  3268FD        		ld	(PLWKC+REMAIN+1),a
  1F5C  3E07          		ld	a,07h
  1F5E  77            		ld	(hl),a
                      	
  1F5F                	PLAYNZ2:
  1F5F  FB            		ei
  1F60  79            		ld	a,c		;c=PLAYLEN check counter
  1F61  B7            		or	a
  1F62  209A          		jr	nz,PLAYLP3
                      	
  1F64                	PLAYEND:
  1F64  D1            		pop	de
  1F65  2A4EFF        		ld	hl,(PROGAD)
  1F68  ED534EFF      		ld	(PROGAD),de
  1F6C  DDE1          		pop	ix
  1F6E  C9            		ret
                      	
                      	
                      	;convert play data
                      	;input: a=string length, hl=string address, ix=play work
                      	;destroy: af,bc,de,hl
  1F6F                	CNVPLAY:
  1F6F  CD871C        		call	GETPLAD
  1F72  56            		ld	d,(hl)
  1F73  14            		inc	d		;in+1
  1F74  23            		inc	hl
  1F75  7E            		ld	a,(hl)		;out
  1F76  92            		sub	d
  1F77  3004          		jr	nc,CNVPLNC
                      	
  1F79  23            		inc	hl
  1F7A  23            		inc	hl		;size
  1F7B  3C            		inc	a
  1F7C  86            		add	a,(hl)
  1F7D                	CNVPLNC:
  1F7D  FE08          		cp	08h
  1F7F  D8            		ret	c
                      	
  1F80  CD1D20        		call	PLAYGETC
  1F83  C8            		ret	z
  1F84  CD6A20        		call	PLAYINC
  1F87  CDEF0B        		call	TOUPPER
  1F8A  CD8F1F        		call	PLAYCMD
  1F8D  18E0          		jr	CNVPLAY
                      	
                      	
  1F8F                	PLAYCMD:
  1F8F  D641          		sub	'A'
  1F91  FE07          		cp	'G'-'A'+1
  1F93  DAC720        		jp	c,TONE
                      	;	ld	hl,PLAYTBL
                      	;	ld	b,08h
                      	;PLCMDLP:
                      	;	cp	(hl)
                      	;	inc	hl
                      	;	jp	z,JPTBLNC
                      	;	inc	hl
                      	;	inc	hl
                      	;	djnz	PLCMDLP
                      	;	jp	FCERR
                      	;
                      	;
                      	;PLAYTBL:
                      	;	db	'V'-'A'
                      	;	dw	PLAYV
                      	;	db	'M'-'A'
                      	;	dw	PLAYM
                      	;	db	'S'-'A'
                      	;	dw	PLAYS
                      	;	db	'L'-'A'
                      	;	dw	PLAYL
                      	;	db	'T'-'A'
                      	;	dw	PLAYT
                      	;	db	'O'-'A'
                      	;	dw	PLAYO
                      	;	db	'R'-'A'
                      	;	dw	PLAYR
                      	;	db	'N'-'A'
                      	;	dw	PLAYN
                      	
  1F96  FE0C          		cp	'M'-'A'
  1F98  282F          		jr	z,PLAYM
  1F9A  FE12          		cp	'S'-'A'
  1F9C  283F          		jr	z,PLAYS
  1F9E  FE0B          		cp	'L'-'A'
  1FA0  2847          		jr	z,PLAYL
  1FA2  FE13          		cp	'T'-'A'
  1FA4  2855          		jr	z,PLAYT
  1FA6  FE0E          		cp	'O'-'A'
  1FA8  2861          		jr	z,PLAYO
  1FAA  FE11          		cp	'R'-'A'
  1FAC  CA9520        		jp	z,PLAYR
  1FAF  FE0D          		cp	'N'-'A'
  1FB1  CA7620        		jp	z,PLAYN
  1FB4  FE15          		cp	'V'-'A'
  1FB6  C2CB03        		jp	nz,FCERR
                      	
                      	
  1FB9                	PLAYV:
  1FB9  CD5421        		call	GETNUM1
  1FBC  3802          		jr	c,PLAYVNUM
  1FBE  3E08          		ld	a,08h
  1FC0                	PLAYVNUM:
  1FC0  FE10          		cp	10h
  1FC2  D2CB03        		jp	nc,FCERR
  1FC5                	PUTV:
  1FC5  DD7712        		ld	(ix+VOLUME),a
  1FC8  C9            		ret
                      	
  1FC9                	PLAYM:
  1FC9  CD5F21        		call	GETNUM2
  1FCC  3803          		jr	c,PLAYMNUM
  1FCE  11FF00        		ld	de,00ffh
  1FD1                	PLAYMNUM:
  1FD1  7A            		ld	a,d
  1FD2  B3            		or	e
  1FD3  CACB03        		jp	z,FCERR
  1FD6  DD7313        		ld	(ix+PERIOD),e
  1FD9  DD7214        		ld	(ix+PERIOD+1),d
  1FDC  C9            		ret
                      	
  1FDD                	PLAYS:
  1FDD  CD5421        		call	GETNUM1
  1FE0  FE10          		cp	10h
  1FE2  D2CB03        		jp	nc,FCERR
  1FE5  C610          		add	a,10h
  1FE7  18DC          		jr	PUTV
                      	
  1FE9                	PLAYL:
  1FE9  CD5421        		call	GETNUM1
  1FEC  3802          		jr	c,PLAYLNUM
  1FEE  3E04          		ld	a,04h
  1FF0                	PLAYLNUM:
  1FF0  3D            		dec	a
  1FF1  FE40          		cp	40h
  1FF3  D2CB03        		jp	nc,FCERR
  1FF6  3C            		inc	a
  1FF7  DD7710        		ld	(ix+LENGTH),a
  1FFA  C9            		ret
                      	
  1FFB                	PLAYT:
  1FFB  CD5421        		call	GETNUM1
  1FFE  3802          		jr	c,PLAYTNUM
  2000  3E78          		ld	a,120
  2002                	PLAYTNUM:
  2002  FE20          		cp	32
  2004  DACB03        		jp	c,FCERR
  2007  DD7711        		ld	(ix+TEMPO),a
  200A  C9            		ret
                      	
  200B                	PLAYO:
  200B  CD5421        		call	GETNUM1
  200E  3802          		jr	c,PLAYONUM
  2010  3E04          		ld	a,04h
  2012                	PLAYONUM:
  2012  3D            		dec	a
  2013  FE08          		cp	08h
  2015  D2CB03        		jp	nc,FCERR
  2018  3C            		inc	a
  2019  DD770F        		ld	(ix+OCTAVE),a
  201C  C9            		ret
                      	
                      	
                      	;get a character from PLAY string
                      	;output: a,z-flag(1=no character)
                      	;destroy: f,hl
  201D                	PLAYGETC:
  201D  3A17FD        		ld	a,(PLAYLEN)
  2020  B7            		or	a
  2021  C8            		ret	z		;a=0 if no character
  2022  2A18FD        		ld	hl,(PLAYSTR)
  2025  7E            		ld	a,(hl)
  2026  FE20          		cp	' '
  2028  C0            		ret	nz
  2029  CD6A20        		call	PLAYINC
  202C  18EF          		jr	PLAYGETC
                      	
                      	
                      	;scale data
                      	;address probably equals to 6001mkII/6601 ROM (used by BELUGA)
  202E                	_SCALE2:ds	SCALE2-_SCALE2
  2030                		org	SCALE2
                      	
                      	;		c/b+	c+/d-	d	d+/e-	e/f-	f/e+
  2030  E80E120E480D89		dw	0ee8h,	0e12h,	0d48h,	0c89h,	0bd5h,	0b2bh
                      	;		f+/g-	g	g+/a-	a	a+/b-	b/c-
  203C  8A0AF3096409DD		dw	0a8ah,	09f3h,	0964h,	08ddh,	085eh,	07e6h
                      	
                      	
                      	;scale data
  2048                	_SCALE:	ds	SCALE-_SCALE
  204B                		org	SCALE
                      	
                      	;		c/b+	c+/d-	d	d+/e-	e/f-	f/e+
  204B  E80E120E480D89		dw	0ee8h,	0e12h,	0d48h,	0c89h,	0bd5h,	0b2bh
                      	;		f+/g-	g	g+/a-	a	a+/b-	b/c-
  2057  8A0AF3096409DD		dw	0a8ah,	09f3h,	0964h,	08ddh,	085eh,	07e6h
                      	
                      	
  2063                	TONETBL:
                      	;		a   b   c  d  e  f   g
  2063  12160004080A0E		db	18, 22, 0, 4, 8, 10, 14
                      	
                      	
                      	;increment (PLAYSTR) and decrement (PLAYLEN)
                      	;destroy: f,hl
  206A                	PLAYINC:
  206A  2117FD        		ld	hl,PLAYLEN
  206D  35            		dec	(hl)
  206E  2118FD        		ld	hl,PLAYSTR
  2071  34            		inc	(hl)
  2072  C0            		ret	nz
  2073  2C            		inc	l
  2074  34            		inc	(hl)
  2075  C9            		ret
                      	
                      	
  2076                	PLAYN:
  2076  CD5421        		call	GETNUM1
  2079  D2CB03        		jp	nc,FCERR
  207C  FE61          		cp	97
  207E  D2CB03        		jp	nc,FCERR
  2081  B7            		or	a
  2082  283C          		jr	z,PLAYN0
                      	
  2084  0600          		ld	b,00h
  2086                	PLAYNLP:
  2086  04            		inc	b
  2087  D60C          		sub	0ch
  2089  30FB          		jr	nc,PLAYNLP
  208B  87            		add	a,a
  208C  16FF          		ld	d,0ffh
  208E  5F            		ld	e,a
  208F  216320        		ld	hl,SCALE+24
  2092  19            		add	hl,de
  2093  1859          		jr	GETFREQ
                      	
  2095                	PLAYR:
  2095  AF            		xor	a
  2096  F5            		push	af		;volume
  2097  D5            		push	de		;(tune)
  2098  CD5421        		call	GETNUM1
  209B  3006          		jr	nc,PLAYRNC
  209D  B7            		or	a
  209E  2068          		jr	nz,CHKLEN
  20A0  C3CB03        		jp	FCERR
                      	
  20A3                	PLAYRNC:
  20A3  3E04          		ld	a,04h
  20A5  1861          		jr	CHKLEN
                      	
                      	;accidental mark
  20A7                	PLAYPLS:
  20A7  CD6A20        		call	PLAYINC
  20AA  1C            		inc	e
  20AB  1C            		inc	e
  20AC  7B            		ld	a,e
  20AD  D618          		sub	24
  20AF  3834          		jr	c,NOACC
  20B1  5F            		ld	e,a		;=0
  20B2  1831          		jr	NOACC
                      	
  20B4                	PLAYMNS:
  20B4  CD6A20        		call	PLAYINC
  20B7  1D            		dec	e
  20B8  1D            		dec	e
  20B9  F2E520        		jp	P,NOACC
  20BC  1E16          		ld	e,22
  20BE  1825          		jr	NOACC
                      	
  20C0                	PLAYN0:
  20C0  AF            		xor	a
  20C1  F5            		push	af		;volume
  20C2  D5            		push	de		;(tune)
                      	
                      	;for compatibility with PC-6001
  20C3  3E50          		ld	a,80
  20C5  1846          		jr	CALCLEN
                      	
                      	
  20C7                	TONE:
  20C7  216320        		ld	hl,TONETBL
  20CA  1600          		ld	d,00h
  20CC  5F            		ld	e,a
  20CD  19            		add	hl,de
  20CE  5E            		ld	e,(hl)
  20CF  CD1D20        		call	PLAYGETC
  20D2  2811          		jr	z,NOACC
  20D4  FE2B          		cp	'+'
  20D6  28CF          		jr	z,PLAYPLS
  20D8  FE23          		cp	'#'
  20DA  28CB          		jr	z,PLAYPLS
  20DC  FE2D          		cp	'-'
  20DE  28D4          		jr	z,PLAYMNS
  20E0  FE3D          		cp	'='
  20E2  CACB03        		jp	z,FCERR
                      	
  20E5                	NOACC:
  20E5  DD460F        		ld	b,(ix+OCTAVE)
  20E8  214B20        		ld	hl,SCALE
  20EB  1600          		ld	d,00h
  20ED  19            		add	hl,de
  20EE                	GETFREQ:
  20EE  7E            		ld	a,(hl)
  20EF  23            		inc	hl
  20F0  56            		ld	d,(hl)
  20F1  05            		dec	b
  20F2  2805          		jr	z,OCTAVE1
  20F4                	OCTVLP:
  20F4  CB3A          		srl	d
  20F6  1F            		rra
  20F7  10FB          		djnz	OCTVLP
  20F9                	OCTAVE1:
  20F9  5F            		ld	e,a
  20FA  DD7E12        		ld	a,(ix+VOLUME)
                      	
  20FD                	PUSHVOL:
  20FD  F5            		push	af		;volume
  20FE  D5            		push	de		;tune
  20FF  CD5421        		call	GETNUM1
  2102  B7            		or	a
  2103  2003          		jr	nz,CHKLEN
  2105  DD7E10        		ld	a,(ix+LENGTH)
  2108                	CHKLEN:
  2108  FE41          		cp	65
  210A  D2CB03        		jp	nc,FCERR
                      	
  210D                	CALCLEN:
                      	;60[s/min]/T[/min]/(L/4)/(8192/3993600[Hz])=117000/T/L
  210D  DD4611        		ld	b,(ix+TEMPO)	;T-value
  2110  CD5A24        		call	MULINT1		;hl=T*L (<=3fc0h)
                      	;	ld	de,0e4e2h	;117187.5/2 (6601:4MHz)
  2113  1184E4        		ld	de,0e484h	;117000/2
  2116  CD8524        		call	DIVINT2		;bc=(117000/2)/(T*L)*2
  2119  50            		ld	d,b
  211A  59            		ld	e,c
                      	
                      	;dotted note
  211B                	DOTLP:
  211B  CD1D20        		call	PLAYGETC
  211E  FE2E          		cp	'.'
  2120  200C          		jr	nz,NOTDOT
  2122  CD6A20        		call	PLAYINC
  2125  CB38          		srl	b
  2127  CB19          		rr	c
  2129  EB            		ex	de,hl
  212A  09            		add	hl,bc
  212B  EB            		ex	de,hl
  212C  18ED          		jr	DOTLP
  212E                	NOTDOT:
                      	
                      	;	di
  212E  7A            		ld	a,d		;length
  212F  CD310F        		call	PUTPLBF
  2132  7B            		ld	a,e
  2133  CD310F        		call	PUTPLBF
  2136  D1            		pop	de		;tune
  2137  7A            		ld	a,d
  2138  CD310F        		call	PUTPLBF
  213B  7B            		ld	a,e
  213C  CD310F        		call	PUTPLBF
  213F  F1            		pop	af		;volume
  2140  CD310F        		call	PUTPLBF
  2143  FE10          		cp	10h
  2145  380C          		jr	c,PLCMDEND
  2147  DD7E13        		ld	a,(ix+PERIOD)	;period
  214A  CD310F        		call	PUTPLBF
  214D  DD7E14        		ld	a,(ix+PERIOD+1)
  2150  CD310F        		call	PUTPLBF
  2153                	PLCMDEND:
                      	;	ei
  2153  C9            		ret
                      	
                      	
  2154                	GETNUM1:
                      	;output: a,c-flag(1=number)
                      	;destroy: f,bc,de,hl
  2154  CD5F21        		call	GETNUM2
  2157  7B            		ld	a,e
  2158  D0            		ret	nc
  2159  14            		inc	d
  215A  15            		dec	d
  215B  C8            		ret	z		;c-flag=1
  215C  C3CB03        		jp	FCERR
                      	
                      	
  215F                	GETNUM2:
                      	;output: de,c-flag(1=number)
                      	;destroy: af,bc,de
  215F  CD1D20        		call	PLAYGETC
  2162  110000        		ld	de,0000h
  2165  C8            		ret	z		;c-flag=0
  2166  FE3D          		cp	'='
  2168  2835          		jr	z,GETNUMEQ
  216A  FE3B          		cp	';'
  216C  282A          		jr	z,GETNUMSEMI
  216E  D630          		sub	'0'
  2170  FE0A          		cp	'9'-'0'+1
  2172  D0            		ret	nc		;c-flag=0
  2173  2A18FD        		ld	hl,(PLAYSTR)
  2176  E5            		push	hl		;
  2177  3A17FD        		ld	a,(PLAYLEN)
  217A  47            		ld	b,a
  217B  CDD627        		call	ATOI2LEN
  217E  2218FD        		ld	(PLAYSTR),hl
  2181  C1            		pop	bc		;
  2182  B7            		or	a
  2183  ED42          		sbc	hl,bc
  2185  3A17FD        		ld	a,(PLAYLEN)
  2188  95            		sub	l
  2189  3217FD        		ld	(PLAYLEN),a
  218C  CD1D20        		call	PLAYGETC
  218F  2805          		jr	z,GETNUMZ
  2191  FE3B          		cp	';'
  2193  CC6A20        		call	z,PLAYINC
  2196                	GETNUMZ:
  2196  37            		scf			;set c-flag
  2197  C9            		ret
                      	
  2198                	GETNUMSEMI:
  2198  CD6A20        		call	PLAYINC
  219B  AF            		xor	a		;reset c-flag
  219C  57            		ld	d,a
  219D  5F            		ld	e,a
  219E  C9            		ret
                      	
  219F                	GETNUMEQ:
  219F  CD6A20        		call	PLAYINC
  21A2  11DAFE        		ld	de,INPBUF
  21A5                	GETNUMEQLP:
  21A5  CD1D20        		call	PLAYGETC
  21A8  CACB03        		jp	z,FCERR
  21AB  CD6A20        		call	PLAYINC
  21AE  CDF20B        		call	TOUPPER2
  21B1  12            		ld	(de),a
  21B2  13            		inc	de
  21B3  FE3B          		cp	';'
  21B5  20EE          		jr	nz,GETNUMEQLP
                      	
  21B7  21DAFE        		ld	hl,INPBUF
  21BA  46            		ld	b,(hl)
  21BB  78            		ld	a,b
  21BC  D641          		sub	'A'
  21BE  FE1A          		cp	'Z'-'A'+1
  21C0  D2CB03        		jp	nc,FCERR
  21C3  23            		inc	hl
  21C4  CD8833        		call	GETNAME
                      	
  21C7  FE24          		cp	'$'
  21C9  CAE303        		jp	z,TMERR
                      	
  21CC  FE28          		cp	'('
  21CE  2811          		jr	z,GETNUMARR
                      	
  21D0  CDAC33        		call	SRCHVAR
  21D3  EB            		ex	de,hl
  21D4  3003          		jr	nc,GETNUMEQNC
  21D6  21AB0E        		ld	hl,ZERO
  21D9                	GETNUMEQNC:
  21D9  CD2D0C        		call	SETF1
  21DC  CDBD0C        		call	FTOI
  21DF  37            		scf
  21E0  C9            		ret
                      	
                      	
  21E1                	GETNUMARR:
  21E1  ED5B4EFF      		ld	de,(PROGAD)
  21E5  D5            		push	de
  21E6  CDAA32        		call	GETARR
  21E9  E1            		pop	hl
  21EA  224EFF        		ld	(PROGAD),hl
  21ED  EB            		ex	de,hl
  21EE  18E9          		jr	GETNUMEQNC
                      	
                      	
                      	;STICK() function
  21F0                	F_STCK:
  21F0  CD4C07        		call	FNCI1		;a=0
  21F3  83            		add	a,e
  21F4  2813          		jr	z,STCK0		;e=0?
  21F6  FE03          		cp	03h
  21F8  D2CB03        		jp	nc,FCERR
  21FB  CDA61C        		call	JOYSTK
                      	;exchange bit2 and bit3
  21FE  47            		ld	b,a
  21FF  E60C          		and	0ch
  2201  78            		ld	a,b
  2202  EA0E22        		jp	pe,CNVSTCK
  2205  EE0C          		xor	0ch
  2207  1805          		jr	CNVSTCK
                      	
  2209                	STCK0:
  2209  CD6110        		call	STICK
  220C  0F            		rrca
  220D  0F            		rrca
  220E                	CNVSTCK:
  220E  E60F          		and	0fh
  2210  211C22        		ld	hl,STCKTBL
  2213  85            		add	a,l
  2214  6F            		ld	l,a
  2215  3001          		jr	nc,STCKNC
  2217  24            		inc	h
  2218                	STCKNC:
  2218  6E            		ld	l,(hl)
  2219  C3660C        		jp	I1TOF
                      	
  221C                	STCKTBL:
                      	;		    u   d   ud  r   ur  dr  udr
  221C  00010500030204		db	0,  1,  5,  0,  3,  2,  4,  3
                      	;		l   ul  dl  udl rl url drl udrl
  2224  07080607000105		db	7,  8,  6,  7,  0,  1,  5,  0
                      	
                      	
                      	;STRIG() function
  222C                	F_STRG:
  222C  CD4C07        		call	FNCI1		;a=0
  222F  83            		add	a,e
  2230  2813          		jr	z,STRG0		;e=0?
  2232  FE03          		cp	03h
  2234  D2CB03        		jp	nc,FCERR
  2237  CDA61C        		call	JOYSTK
  223A  E610          		and	10h
  223C                	STRGEND:
  223C  CA2A0C        		jp	z,SETZERO
                      	;	jp	SETPLS1
                      	
  223F                	SETPLS1:
  223F  21A10E        		ld	hl,PLSONE
  2242  C32D0C        		jp	SETF1
                      	
  2245                	STRG0:
  2245  CD6110        		call	STICK
  2248  E680          		and	80h
  224A  18F0          		jr	STRGEND
                      	
                      	
                      	;LCOPY command
  224C                	C_LCPY:
  224C  218222        		ld	hl,LCPYHD
  224F  0605          		ld	b,05h
  2251                	LCPYLP1:
  2251  7E            		ld	a,(hl)
  2252  CD371A        		call	PRINTER
  2255  23            		inc	hl
  2256  10F9          		djnz	LCPYLP1
                      	
  2258  2A90FD        		ld	hl,(VRAM-1)	;h=(VRAM)
  225B  24            		inc	h
  225C  24            		inc	h
  225D  68            		ld	l,b		;b=0
  225E  3A92FD        		ld	a,(SCREEN1)
  2261  FE02          		cp	02h
  2263  3822          		jr	c,LCPYTXT
                      	
  2265                	LCPYGRP:
  2265  110018        		ld	de,1800h
  2268                	LCPYLP2:
  2268  4E            		ld	c,(hl)
  2269  CD061A        		call	SENDGRP
  226C  23            		inc	hl
  226D  1B            		dec	de
  226E  7A            		ld	a,d
  226F  B3            		or	e
  2270  20F6          		jr	nz,LCPYLP2
                      	
  2272                	LCPYEND:
  2272  010020        		ld	bc,2000h
  2275  CD7B22        		call	LCPYLP3
                      	
  2278  010A06        		ld	bc,060ah
  227B                	LCPYLP3:
  227B  79            		ld	a,c
  227C  CD371A        		call	PRINTER
  227F  10FA          		djnz	LCPYLP3
  2281  C9            		ret
                      	
                      	;header for lcopy
  2282                	LCPYHD:
  2282  20200A1DC1    		db	20h, 20h, 0ah, 1dh, 0c1h
                      	
                      	;lcopy text screen
  2287                	LCPYTXT:
  2287  3E04          		ld	a,04h
  2289  D393          		out	(93h),a		;CGROM ON
  228B  3A20FA        		ld	a,(HEIGHT)
  228E  47            		ld	b,a
  228F                	LCPYTLP1:
  228F  C5            		push	bc
  2290  0E0C          		ld	c,0ch
  2292                	LCPYTLP2:
  2292  0620          		ld	b,COLUMNS
  2294                	LCPYTLP3:
  2294  C5            		push	bc
  2295  7E            		ld	a,(hl)
  2296  CDA014        		call	CGROM
  2299  7B            		ld	a,e
  229A  C60C          		add	a,0ch
  229C  91            		sub	c
  229D  5F            		ld	e,a
  229E  1A            		ld	a,(de)
                      	
  229F  57            		ld	d,a		;
  22A0  25            		dec	h
  22A1  25            		dec	h
  22A2  7E            		ld	a,(hl)		;attribute
  22A3  24            		inc	h
  22A4  24            		inc	h
  22A5  CB77          		bit	6,a
  22A7  201F          		jr	nz,LCPYSEMI
  22A9  0F            		rrca
  22AA  7A            		ld	a,d		;
  22AB  3001          		jr	nc,NOTREV
  22AD  2F            		cpl
  22AE                	NOTREV:
  22AE  4F            		ld	c,a
  22AF  CD061A        		call	SENDGRP
  22B2  23            		inc	hl
  22B3  C1            		pop	bc
  22B4  10DE          		djnz	LCPYTLP3
                      	
  22B6  0D            		dec	c
  22B7  2806          		jr	z,LCPYTZ
  22B9  11E0FF        		ld	de,0-COLUMNS
  22BC  19            		add	hl,de
  22BD  18D3          		jr	LCPYTLP2
                      	
  22BF                	LCPYTZ:
  22BF  C1            		pop	bc
  22C0  10CD          		djnz	LCPYTLP1
                      	
  22C2  3E05          		ld	a,05h
  22C4  D393          		out	(93h),a		;CGROM OFF
  22C6  18AA          		jr	LCPYEND
                      	
  22C8                	LCPYSEMI:
                      	;c=	9-12	xx**....
                      	;	5-8	xx..**..
                      	;	1-4	xx....**
                      	
  22C8  7E            		ld	a,(hl)
  22C9  0D            		dec	c
  22CA  CB51          		bit	2,c
  22CC  2006          		jr	nz,SEMI58	;c=5-8
  22CE  CB59          		bit	3,c
  22D0  2804          		jr	z,SEMI14	;c=1-4
                      	
  22D2  0F            		rrca
  22D3  0F            		rrca
  22D4                	SEMI58:
  22D4  0F            		rrca
  22D5  0F            		rrca
  22D6                	SEMI14:
  22D6  E603          		and	03h
                      	
                      	;00h->00h, 01h->0fh, 02h->f0h, 03h->ffh
  22D8  1F            		rra			;c-flag=0
  22D9  3002          		jr	nc,SEMINC
  22DB  C61E          		add	a,0fh*2
  22DD                	SEMINC:
  22DD  1F            		rra			;c-flag=0
  22DE  30CE          		jr	nc,NOTREV
  22E0  C6F0          		add	a,0f0h
  22E2  18CA          		jr	NOTREV
                      	
                      	
                      	;KEY command
  22E4                	C_KEY:
  22E4  CDE40D        		call	INT1ARG
  22E7  3D            		dec	a
  22E8  FE0A          		cp	0ah
  22EA  D2CB03        		jp	nc,FCERR
  22ED  113DFB        		ld	de,FKEYTBL
  22F0  87            		add	a,a		;*2
  22F1  87            		add	a,a		;*4
  22F2  87            		add	a,a		;*8
  22F3  83            		add	a,e		;no carry
  22F4  5F            		ld	e,a
  22F5  7E            		ld	a,(hl)
  22F6  FE2C          		cp	','
  22F8  C2C203        		jp	nz,SNERR
  22FB  D5            		push	de		;
  22FC  23            		inc	hl
  22FD  CD8A26        		call	STRARG
  2300  EB            		ex	de,hl
  2301  D1            		pop	de		;
                      	
  2302  01FF08        		ld	bc,08ffh
  2305  3C            		inc	a
  2306                	KEYLP1:
  2306  3D            		dec	a
  2307  2806          		jr	z,KEYLP2
  2309  EDA0          		ldi
  230B  10F9          		djnz	KEYLP1
  230D  1804          		jr	KEYEND
                      	
  230F                	KEYLP2:
  230F  12            		ld	(de),a		;a=0
  2310  13            		inc	de
  2311  10FC          		djnz	KEYLP2
  2313                	KEYEND:
  2313  C3AE12        		jp	PRTFKEY
                      	
                      	
                      	;CSAVE command
  2316                	C_CSV:
  2316  CD8A26        		call	STRARG
  2319  B7            		or	a
  231A  CACB03        		jp	z,FCERR
  231D  4F            		ld	c,a
                      	
                      	;write header (d3h*10)
  231E  CDB81A        		call	WOPEN
  2321  3ED3          		ld	a,0d3h
  2323  060A          		ld	b,0ah
  2325                	CSVLP1:
  2325  CDCC1A        		call	PUTCMT
  2328  10FB          		djnz	CSVLP1
                      	
                      	;file name
  232A  0606          		ld	b,06h
                      	
  232C  0C            		inc	c
  232D                	CSVLP2:
  232D  1A            		ld	a,(de)
  232E  0D            		dec	c
  232F  2002          		jr	nz,CSVNZ
  2331  AF            		xor	a
  2332  0C            		inc	c
  2333                	CSVNZ:
  2333  CDCC1A        		call	PUTCMT
  2336  13            		inc	de
  2337  10F4          		djnz	CSVLP2
                      	
                      	;data
  2339                	CSVDATA:
  2339  01B024        		ld	bc,24b0h
  233C  CDE825        		call	WAITLP
                      	
  233F  2A5FFA        		ld	hl,(STARTAD)
  2342  ED5B56FF      		ld	de,(VARAD)
  2346                	CSVLP3:
  2346  7E            		ld	a,(hl)
  2347  CDCC1A        		call	PUTCMT
  234A  23            		inc	hl
  234B  E7            		rst	CPHLDE
  234C  20F8          		jr	nz,CSVLP3
                      	
                      	;footer (00h*9)
  234E  0609          		ld	b,09h
  2350                	CSVLP4:
  2350  CDCC1A        		call	PUTCMT		;a=0
  2353  10FB          		djnz	CSVLP4
                      	
  2355  C3061B        		jp	WCLOSE
                      	
                      	
                      	;CLOAD command
  2358                	C_CLD:
  2358  F1            		pop	af		;cancel return address
  2359  CD603F        		call	SKIPSP
  235C  FE95          		cp	PRINT_
  235E  0E00          		ld	c,00h		;file name length
  2360  79            		ld	a,c
  2361  2002          		jr	nz,CLDNZ1
  2363  23            		inc	hl
  2364  2F            		cpl
  2365                	CLDNZ1:
  2365  32D8FE        		ld	(VERIFY),a
  2368  F5            		push	af		;verify?
  2369  CD673F        		call	CHKCLN
  236C  2808          		jr	z,NOTARGET
  236E  CD8A26        		call	STRARG
  2371  B7            		or	a
  2372  CACB03        		jp	z,FCERR
  2375  4F            		ld	c,a
  2376                	NOTARGET:
  2376  CD611A        		call	ROPEN
                      	
  2379                	CLDLP1:
  2379  EB            		ex	de,hl
  237A  CD3925        		call	GETFN
  237D  EB            		ex	de,hl
                      	
                      	;compare file name
  237E  79            		ld	a,c
  237F  B7            		or	a
  2380  2815          		jr	z,CLDFND
                      	
  2382  D5            		push	de		;target
                      	
  2383  21D1FE        		ld	hl,FNAME
  2386  0C            		inc	c
  2387  0606          		ld	b,06h
  2389                	CLDLP2:
  2389  1A            		ld	a,(de)
  238A  0D            		dec	c
  238B  2002          		jr	nz,CLDNZ2
  238D  AF            		xor	a
  238E  0C            		inc	c
  238F                	CLDNZ2:
  238F  BE            		cp	(hl)
  2390  2045          		jr	nz,CLDSKIP
  2392  23            		inc	hl
  2393  13            		inc	de
  2394  10F3          		djnz	CLDLP2
  2396  D1            		pop	de		;target
                      	
  2397                	CLDFND:
  2397  217625        		ld	hl,FOUND
  239A  CD8325        		call	PUTFN
  239D  CD9C1A        		call	CHKVRF2
                      	
  23A0  F1            		pop	af		;verify?
  23A1  4F            		ld	c,a		;c=0: not verify
                      	
  23A2  2A5FFA        		ld	hl,(STARTAD)
  23A5                	CLDLP3:
  23A5  060A          		ld	b,0ah
  23A7                	CLDLP4:
  23A7  EB            		ex	de,hl
  23A8  21FEFF        		ld	hl,0-0002h
  23AB  39            		add	hl,sp
  23AC  E7            		rst	CPHLDE
  23AD  2837          		jr	z,CLDOM		;over memory error
  23AF  EB            		ex	de,hl
  23B0  CD8F1A        		call	GETCMTTR
  23B3  0C            		inc	c
  23B4  0D            		dec	c
  23B5  2803          		jr	z,CLDZ2		;c=0: not verify
  23B7  BE            		cp	(hl)
  23B8  2035          		jr	nz,CLDBAD
  23BA                	CLDZ2:
  23BA  77            		ld	(hl),a
  23BB  23            		inc	hl
  23BC  B7            		or	a
  23BD  20E6          		jr	nz,CLDLP3
  23BF  CD2A1B        		call	BLNKAST
  23C2  10E3          		djnz	CLDLP4
  23C4  CDAA1A        		call	RCLOSE
                      	
  23C7  2256FF        		ld	(VARAD),hl
                      	
  23CA  AF            		xor	a
  23CB  3258FA        		ld	(DEVICE),a
  23CE                	OKCHGLKP:
  23CE  219003        		ld	hl,OK
  23D1  CDCF30        		call	PUTS
  23D4  C3C104        		jp	CHGLKP
                      	
  23D7                	CLDSKIP:
  23D7  217D25        		ld	hl,SKIP
  23DA  CD8325        		call	PUTFN
                      	
                      	;check footer (00h*10)
  23DD  11000A        		ld	de,0a00h
  23E0  CD4E25        		call	CMTSKP
  23E3  D1            		pop	de		;target
  23E4  1893          		jr	CLDLP1
                      	
  23E6                	CLDOM:
  23E6  CDAA1A        		call	RCLOSE
  23E9  CDDB34        		call	NEW
  23EC  C3D103        		jp	OMERR
                      	
  23EF                	CLDBAD:
  23EF  CDAA1A        		call	RCLOSE
  23F2  21F823        		ld	hl,BAD
  23F5  C3D400        		jp	PUTSEDIT
                      	
  23F8                	BAD:
  23F8  42616400      		db	"Bad", 00h
                      	
                      	
                      	;input by external device
                      	;input: a=(INPDEV), hl=INPBUF-1
                      	;destroy: af,bc,de,hl
  23FC                	INPTEXT:
  23FC  FE02          		cp	02h
  23FE  F5            		push	af
  23FF  2807          		jr	z,INPT232
  2401  07            		rlca
  2402  D2CB03        		jp	nc,FCERR
  2405  CD9A25        		call	INPOPN
  2408                	INPT232:
  2408  21DAFE        		ld	hl,INPBUF
  240B  0647          		ld	b,71
  240D                	INPTEXTLP:
  240D  F1            		pop	af
  240E  F5            		push	af
  240F  2020          		jr	nz,INPTCMT
                      	
  2411  E5            		push	hl
  2412                	INPT232LP:
  2412  3A18FA        		ld	a,(STOPFLG)
  2415  FE03          		cp	03h
  2417  CA5127        		jp	z,STOPSP
  241A  CD4310        		call	GETRSBF
  241D  28F3          		jr	z,INPT232LP
  241F  E1            		pop	hl
  2420                	INPTCHKRET:
  2420  FE0D          		cp	0dh
  2422  2804          		jr	z,INPTEXTEND
  2424  77            		ld	(hl),a
  2425  23            		inc	hl
  2426  10E5          		djnz	INPTEXTLP
                      	
  2428                	INPTEXTEND:
  2428  F1            		pop	af
  2429  C4AA1A        		call	nz,RCLOSE
  242C  3600          		ld	(hl),00h
  242E  C3C409        		jp	INPTANA
                      	
  2431                	INPTCMT:
  2431  CD8F1A        		call	GETCMTTR
  2434  18EA          		jr	INPTCHKRET
                      	
  2436                	EXTRA:
  2436  3F457874726120		db	"?Extra ignored", 0dh, 0ah, 00h
                      	
  2447                	REDO:
  2447  3F5265646F2066		db	"?Redo from start", 0dh, 0ah, 00h
                      	
                      	
                      	;hl=a*b
                      	;input: a,b
                      	;output: hl
                      	;destroy: af,c
  245A                	MULINT1:
  245A  210000        		ld	hl,0000h
  245D  4D            		ld	c,l		;=0
  245E  1801          		jr	MULI1NZ
  2460                	MULI1C:
  2460  09            		add	hl,bc
  2461                	MULI1NZ:
  2461  CB38          		srl	b
  2463  CB19          		rr	c
  2465  87            		add	a,a
  2466  38F8          		jr	c,MULI1C
  2468  20F7          		jr	nz,MULI1NZ
  246A  C9            		ret
                      	
                      	
                      	;dehl=de*hl
                      	;input: de,hl
                      	;output: dehl
                      	;destroy: af,bc
  246B                	MULINT2:
  246B  7C            		ld	a,h
  246C  4D            		ld	c,l
  246D  210000        		ld	hl,0000h
  2470  0610          		ld	b,10h
  2472                	MULI2LP:
  2472  1F            		rra
  2473  CB19          		rr	c
  2475  3001          		jr	nc,MULI2NC
  2477  19            		add	hl,de
  2478                	MULI2NC:
  2478  CB1C          		rr	h
  247A  CB1D          		rr	l
  247C  10F4          		djnz	MULI2LP
  247E  1F            		rra
  247F  CB19          		rr	c
  2481  59            		ld	e,c
  2482  57            		ld	d,a
  2483  EB            		ex	de,hl
  2484  C9            		ret
                      	
                      	
                      	;bc=de/hl*2
                      	;input: de,hl(<8000h)
                      	;output: bc
                      	;destroy: af,de,hl
  2485                	DIVINT2:
  2485  AF            		xor	a
  2486  010002        		ld	bc,0200h	;*2^(b-1)
  2489                	DIVILP1:
  2489  04            		inc	b
  248A  ED6A          		adc	hl,hl		;c-flag=0
  248C  F28924        		jp	p,DIVILP1
  248F  EB            		ex	de,hl
  2490                	DIVILP2:
  2490  B7            		or	a
  2491  ED52          		sbc	hl,de
  2493  3001          		jr	nc,DIVNC
  2495  19            		add	hl,de
  2496                	DIVNC:
  2496  3F            		ccf
  2497  CB11          		rl	c
  2499  17            		rla
  249A  CB3A          		srl	d
  249C  CB1B          		rr	e
  249E  10F0          		djnz	DIVILP2
                      	
  24A0  47            		ld	b,a
  24A1  C9            		ret
                      	
                      	
                      	;add 4-byte integer and 4byte integer
                      	;input: FAC1(integer),FAC2(integer)
                      	;output: FAC1(integer),f
                      	;destroy: de,hl
  24A2                	ADDINT4:
  24A2  2A66FF        		ld	hl,(FAC1)
  24A5  ED5B6DFF      		ld	de,(FAC2)
  24A9  19            		add	hl,de
  24AA  2266FF        		ld	(FAC1),hl
  24AD  2A68FF        		ld	hl,(FAC1+2)
  24B0  ED5B6FFF      		ld	de,(FAC2+2)
  24B4  ED5A          		adc	hl,de
  24B6  2268FF        		ld	(FAC1+2),hl
  24B9  C9            		ret
                      	
                      	
                      	;subtract 4-byte integer from 4byte integer
                      	;input: FAC1(integer),FAC2(integer)
                      	;output: FAC1(integer),f
                      	;destroy: de,hl
  24BA                	SUBINT4:
  24BA  2A66FF        		ld	hl,(FAC1)
  24BD  ED5B6DFF      		ld	de,(FAC2)
  24C1  B7            		or	a
  24C2  ED52          		sbc	hl,de
  24C4  2266FF        		ld	(FAC1),hl
  24C7  2A68FF        		ld	hl,(FAC1+2)
  24CA  ED5B6FFF      		ld	de,(FAC2+2)
  24CE  ED52          		sbc	hl,de
  24D0  2268FF        		ld	(FAC1+2),hl
  24D3  C9            		ret
                      	
                      	
                      	;a=FAC1(int4)/(hl)<=9, FAC1%=(hl), hl+=4
                      	;input: FAC1(integer), hl=division factor (4byte int) address
                      	;output: a=FAC1/(hl4), FAC1=FAC1%(hl4), hl=hl+4, a=[0,9]
                      	;destroy: f,FAC2
  24D4                	DIVINT4:
  24D4  C5            		push	bc
  24D5  D5            		push	de
  24D6  CD360C        		call	SETF2
  24D9  2B            		dec	hl
  24DA  E5            		push	hl
  24DB  AF            		xor	a
  24DC                	DIVINT4LP:
  24DC  3C            		inc	a
  24DD  CDBA24        		call	SUBINT4
  24E0  30FA          		jr	nc,DIVINT4LP
  24E2  3D            		dec	a
  24E3  CDA224        		call	ADDINT4
  24E6  E1            		pop	hl
  24E7  D1            		pop	de
  24E8  C1            		pop	bc
  24E9  C9            		ret
                      	
                      	
                      	;negate 4-byte integer
                      	;input: FAC1(integer)
                      	;output: FAC1(integer), c-flag, z-flag
                      	;destroy: af,hl
  24EA                	NEGINT4:
  24EA  2166FF        		ld	hl,FAC1
  24ED  AF            		xor	a
  24EE  96            		sub	(hl)
  24EF  77            		ld	(hl),a
  24F0  23            		inc	hl
  24F1  3E00          		ld	a,00h
  24F3  9E            		sbc	a,(hl)
  24F4  77            		ld	(hl),a
  24F5  23            		inc	hl
  24F6  3E00          		ld	a,00h
  24F8  9E            		sbc	a,(hl)
  24F9  77            		ld	(hl),a
  24FA  23            		inc	hl
  24FB  3E00          		ld	a,00h
  24FD  9E            		sbc	a,(hl)
  24FE  77            		ld	(hl),a
  24FF  C9            		ret
                      	
                      	
                      	;compare 4-byte integer and 4-byte integer
                      	;input: FAC1(integer), FAC2(integer)
                      	;output: c-flag,z-flag
                      	;destroy: f,de,hl
  2500                	CMPINT4:
  2500  2A68FF        		ld	hl,(FAC1+2)
  2503  ED5B6FFF      		ld	de,(FAC2+2)
  2507  B7            		or	a
  2508  ED52          		sbc	hl,de
  250A  C0            		ret	nz
  250B  2A66FF        		ld	hl,(FAC1)
  250E  ED5B6DFF      		ld	de,(FAC2)
  2512  ED52          		sbc	hl,de
  2514  C9            		ret
                      	
                      	
                      	;decrement 4-byte integer
                      	;input: FAC1
                      	;output: FAC1
                      	;destroy: af,hl
  2515                	DECINT4:
  2515  2A66FF        		ld	hl,(FAC1)
  2518  7C            		ld	a,h
  2519  B5            		or	l		;
  251A  2B            		dec	hl
  251B  2266FF        		ld	(FAC1),hl
  251E  C0            		ret	nz		;
  251F  2A68FF        		ld	hl,(FAC1+2)
  2522  2B            		dec	hl
  2523  2268FF        		ld	(FAC1+2),hl
  2526  C9            		ret
                      	
                      	
                      	;4-byte integer=0?
                      	;output: a(4 bytes OR),z
                      	;destroy: af
  2527                	CHKINT4:
  2527  E5            		push	hl
  2528  2A66FF        		ld	hl,(FAC1)
  252B  7C            		ld	a,h
  252C  B5            		or	l
  252D  2A68FF        		ld	hl,(FAC1+2)
  2530  B4            		or	h
  2531  B5            		or	l
  2532  E1            		pop	hl
  2533  C9            		ret
                      	
                      	
                      	;check cload header and get file name
                      	;destroy: af,b,de (if no error)
  2534                	_GETFN:	ds	GETFN-_GETFN
  2539                		org	GETFN
                      	
                      	;check header (d3h*10)
  2539  11D30A        		ld	de,0ad3h
  253C  CD4E25        		call	CMTSKP
                      	;file name
  253F  11D1FE        		ld	de,FNAME
                      	
  2542  0606          		ld	b,06h
  2544                	GETFNLP:
  2544  CD8F1A        		call	GETCMTTR
  2547  12            		ld	(de),a
  2548  13            		inc	de
  2549  10F9          		djnz	GETFNLP
  254B  C9            		ret
                      	
                      	
                      	;skip CMT data
                      	;input: d=count, e=data
                      	;destroy: af,b
  254C                	_CMTSKP:ds	CMTSKP-_CMTSKP
  254E                		org	CMTSKP
                      	
  254E  42            		ld	b,d
  254F                	CMTSKPLP:
  254F  CD8F1A        		call	GETCMTTR
  2552  BB            		cp	e
  2553  20F9          		jr	nz,CMTSKP
  2555  10F8          		djnz	CMTSKPLP
  2557  C9            		ret
                      	
                      	
  2558                	_FOUND:	ds	FOUND-_FOUND
  2576                		org	FOUND
                      	
  2576  466F756E643A00		db	"Found:", 00h
                      	
  257D                	SKIP:
  257D  536B69703A00  		db	"Skip:", 00h
                      	
                      	
                      	;put message and file name in device
                      	;input: hl=message address
                      	;destroy: af,hl,(bc,de,FAC1)
  2583                	_PUTFN:	ds	PUTFN-_PUTFN
  2583                		org	PUTFN
                      	
  2583  CDCF30        		call	PUTS
  2586  21D1FE        		ld	hl,FNAME
  2589  CDCF30        		call	PUTS
  258C  C33927        		jp	PUTNL
                      	
                      	
                      	;CMT open for INPUT #-1
                      	;destroy: af,b
  258F                	_INPOPN:ds	INPOPN-_INPOPN
  259A                		org	INPOPN
                      	
                      	;	ld	a,0ffh
                      	;	ld	(VERIFY),a
                      	;	call	ROPEN
  259A  CD5C1A        		call	VRFOPN
  259D  D5            		push	de
  259E  119C06        		ld	de,069ch
  25A1  CD4E25        		call	CMTSKP
  25A4  D1            		pop	de
  25A5  C9            		ret
                      	
                      	
                      	;CMT open for PRINT #-1
                      	;destroy: a,b
  25A6                	_PRTOPN:ds	PRTOPN-_PRTOPN
  25A8                		org	PRTOPN
                      	
  25A8  CDB81A        		call	WOPEN
  25AB  3E9C          		ld	a,9ch
  25AD  0606          		ld	b,06h
  25AF                	PRTOPNLP:
  25AF  CDCC1A        		call	PUTCMT
  25B2  10FB          		djnz	PRTOPNLP
  25B4  C9            		ret
                      	
                      	
                      	;convert intermediate code to command/function ascii characters
                      	;input: a=code
                      	;output: a=first character, hl=address
                      	;destroy: f,b,hl
  25B5                	CNVASC:
  25B5  212B02        		ld	hl,CMDNAME-1
  25B8  FEAB          		cp	CMDLAST+1
  25BA  3819          		jr	c,CNVASCC
  25BC  218941        		ld	hl,CMDNAMEEX-1
  25BF  FEC2          		cp	CLAST66+1
  25C1  3004          		jr	nc,CNVFNC
  25C3  D62B          		sub	CMDLAST-7fh
  25C5  180E          		jr	CNVASCC
                      	
                      	;function
  25C7                	CNVFNC:
  25C7  21E302        		ld	hl,FNCNAME-1
  25CA  D642          		sub	TAB_-80h
  25CC  FEB0          		cp	FNCLAST-(TAB_-80h)+1
  25CE  3805          		jr	c,CNVASCC
  25D0  21F141        		ld	hl,FNCNAMEEX-1
  25D3  D630          		sub	FNCLAST+1-TAB_
                      	
  25D5                	CNVASCC:
  25D5  D67F          		sub	7fh
  25D7  47            		ld	b,a
  25D8                	CNVASCLP:
  25D8  23            		inc	hl
  25D9  7E            		ld	a,(hl)
  25DA  D680          		sub	80h
  25DC  38FA          		jr	c,CNVASCLP
  25DE  10F8          		djnz	CNVASCLP
  25E0  C9            		ret
                      	
                      	
                      	;wait for about 3.5s
                      	;destroy: af,bc
  25E1                	_WAIT:	ds	WAIT-_WAIT
  25E5                		org	WAIT
                      	
  25E5  010000        		ld	bc,0000h
                      	;25e8
  25E8                	WAITLP:
  25E8  3A18FA        		ld	a,(STOPFLG)
  25EB  FE03          		cp	03h
  25ED  C8            		ret	z
                      	
  25EE  E3            		ex	(sp),hl		;waste time
  25EF  E3            		ex	(sp),hl		;waste time
  25F0  00            		nop			;waste time
                      	
  25F1  0B            		dec	bc
  25F2  78            		ld	a,b
  25F3  B1            		or	c
  25F4  20F2          		jr	nz,WAITLP
  25F6  C9            		ret
                      	
                      	
                      	;EXEC command
  25F7                	C_EXEC:
  25F7  CD5F0B        		call	NARGMO
  25FA  CDBD0C        		call	FTOI
                      	
                      	;for compatibility with N60-BASIC
  25FD  2A4EFF        		ld	hl,(PROGAD)
  2600  EB            		ex	de,hl
  2601  7C            		ld	a,h
  2602  B5            		or	l
  2603  ED44          		neg			;set c-flag if hl<>0
  2605  D5            		push	de
  2606  CDA207        		call	JPHL
  2609  D1            		pop	de
  260A  C9            		ret
                      	
                      	
                      	;get a character from buffer
                      	;input: hl=buffer map address
                      	;output: a,z-flag(1=no input)
                      	;destroy: f,hl
  260B                	GETBF:
  260B  7E            		ld	a,(hl)		;in
  260C  2C            		inc	l		;inc hl
  260D  BE            		cp	(hl)		;out
  260E  C8            		ret	z
  260F  7E            		ld	a,(hl)
  2610  3C            		inc	a
  2611  2C            		inc	l		;inc hl
  2612  2C            		inc	l		;inc hl
  2613  A6            		and	(hl)		;size
  2614  2D            		dec	l		;dec hl
  2615  2D            		dec	l		;dec hl
  2616  77            		ld	(hl),a		;out
  2617  2C            		inc	l		;inc hl
  2618  2C            		inc	l		;inc hl
  2619  2C            		inc	l		;inc hl
  261A  86            		add	a,(hl)		;hl=(buffer address)+a
  261B  2C            		inc	l		;inc hl, l>0, reset z-flag
  261C  66            		ld	h,(hl)
  261D  6F            		ld	l,a
  261E  3001          		jr	nc,GETBFNC
  2620  24            		inc	h		;h>0, reset z-flag
  2621                	GETBFNC:
  2621  7E            		ld	a,(hl)
  2622  C9            		ret
                      	
                      	
                      	;input: a=length, hl=string address
                      	;destroy: af,bc,de,hl
  2623                	MAKESTR:
  2623  322DFF        		ld	(STRDSC1),a
  2626  222FFF        		ld	(STRDSC1+2),hl
  2629  AF            		xor	a
  262A  1803          		jr	ADDSTR2
                      	
                      	;input: STRDSC1, STRDSC4
                      	;destroy: af,bc,de,hl
  262C                	ADDSTR:
  262C  3A39FF        		ld	a,(STRDSC4)
  262F                	ADDSTR2:
  262F  47            		ld	b,a		;;
  2630  3A2DFF        		ld	a,(STRDSC1)
  2633  4F            		ld	c,a		;
  2634  80            		add	a,b		;c+b
  2635  DAE903        		jp	c,LSERR		;over 255 characters
                      	
  2638  CD6626        		call	GCCHECK
  263B  223DFF        		ld	(STRAD),hl
  263E  23            		inc	hl
  263F  EB            		ex	de,hl
  2640  2A2FFF        		ld	hl,(STRDSC1+2)
  2643  ED532FFF      		ld	(STRDSC1+2),de
                      	
  2647  78            		ld	a,b		;;
  2648  81            		add	a,c		;
  2649  322DFF        		ld	(STRDSC1),a
  264C  90            		sub	b		;c=0?
                      	
  264D  78            		ld	a,b
  264E  0600          		ld	b,00h
  2650  2802          		jr	z,ADDSZ1
  2652  EDB0          		ldir
  2654                	ADDSZ1:
  2654  B7            		or	a
  2655  2806          		jr	z,ADDSZ2
  2657  4F            		ld	c,a		;b=0
  2658  2A3BFF        		ld	hl,(STRDSC4+2)
  265B  EDB0          		ldir
  265D                	ADDSZ2:
  265D  AF            		xor	a
  265E  3239FF        		ld	(STRDSC4),a
  2661  3C            		inc	a
  2662  3225FF        		ld	(ARGTYP),a	;=1
  2665  C9            		ret
                      	
                      	
                      	;check string area and call GC if necessary
                      	;input: a=new string length
                      	;output: hl=new (STRAD)+1
                      	;destroy: af,de
  2666                	GCCHECK:
  2666  C5            		push	bc
  2667  1600          		ld	d,00h
  2669  5F            		ld	e,a
  266A  D5            		push	de
  266B  CD7E26        		call	CHKSAREA
  266E  D1            		pop	de
  266F  300B          		jr	nc,GCCHECKOK
  2671  D5            		push	de
  2672  CD0F31        		call	GC
  2675  D1            		pop	de
  2676  CD7E26        		call	CHKSAREA
  2679  DAE603        		jp	c,OSERR
  267C                	GCCHECKOK:
  267C  C1            		pop	bc
  267D  C9            		ret
                      	
                      	;check string area
  267E                	CHKSAREA:
  267E  2A3DFF        		ld	hl,(STRAD)
  2681  B7            		or	a
  2682  ED52          		sbc	hl,de
  2684  ED5B5BFA      		ld	de,(STACK)
  2688  E7            		rst	CPHLDE
  2689  C9            		ret
                      	
                      	
                      	;get a string argument
                      	;input: hl=program address
                      	;output: a=length, de=string address, hl=next address, z-flag(1=ok)
                      	;destroy: f,bc,FAC1,FAC2
  268A                	STRARG:
  268A  CD673F        		call	CHKCLN
  268D  CAF803        		jp	z,MOERR
  2690                	STRARG3:
  2690  CD6017        		call	ARG
  2693                	STRARG2:
  2693  EB            		ex	de,hl
  2694  CD740B        		call	CHKSTR
                      	;get string pointer
  2697  23            		inc	hl
  2698  23            		inc	hl
  2699  46            		ld	b,(hl)
  269A  23            		inc	hl
  269B  66            		ld	h,(hl)
  269C  68            		ld	l,b
  269D  EB            		ex	de,hl
  269E  C9            		ret
                      	
                      	
                      	;get string,integer argument
                      	;input: hl=program address
                      	;output: STRDSC1, a=length, hl=string address, FAC1,de=integer
                      	;destroy: FAC1, FAC2, f,bc
  269F                	ARGSI1:
  269F  CD820B        		call	CHKLPAR
  26A2  CD8A26        		call	STRARG
  26A5  F5            		push	af
  26A6  322DFF        		ld	(STRDSC1),a	;length
  26A9  ED532FFF      		ld	(STRDSC1+2),de	;string address
  26AD  7E            		ld	a,(hl)
  26AE  FE2C          		cp	','
  26B0  C2C203        		jp	nz,SNERR
  26B3  CDBB26        		call	ARGI1
  26B6  2A2FFF        		ld	hl,(STRDSC1+2)	;string address
  26B9  F1            		pop	af		;length
  26BA  C9            		ret
                      	
                      	
                      	;protect string descriptor and get integer argument
                      	;input: hl=program address
                      	;output: FAC1,de=integer
                      	;destroy: FAC1, FAC2, af, bc, de
  26BB                	ARGI1:
  26BB  E5            		push	hl		;program address
  26BC  CDE019        		call	COPYSTR
  26BF  E1            		pop	hl
  26C0  CDE30D        		call	INT1INC
  26C3  C3F419        		jp	BACKSTR
                      	
                      	
                      	;put a character in device
                      	;input: a=character code, (DEVICE)=0:CRT, 1:printer, 2:RS-232C, 80h-ffh:CMT
                      	; (1,4,5,8,9,c,d...:printer, 2,3,6,7,a,b,e,f...:RS-232C)
                      	;destroy: af
  26C6                	_PUTDEV:ds	PUTDEV-_PUTDEV
  26C7                		org	PUTDEV
                      	
  26C7  CDCFFF        		call	HOOKPUT
  26CA  F5            		push	af
  26CB  3A58FA        		ld	a,(DEVICE)
  26CE  B7            		or	a
  26CF  2856          		jr	z,PUTCRT
  26D1  FACD1A        		jp	m,PUTCMT2
  26D4  E602          		and	02h
  26D6  283A          		jr	z,PUTPRT2
                      	;	jr	nz,PUT232
                      	
                      	;input: a
                      	;output: none
                      	;destroy: af
  26D8                	PUT232:
  26D8  3E17          		ld	a,17h		;RTS=0
  26DA  D381          		out	(81h),a
                      	
  26DC                	PUT232LP:
  26DC  DB81          		in	a,(81h)
  26DE  2F            		cpl
  26DF  E681          		and	81h
  26E1  280C          		jr	z,PUT232Z	;if DSR=1, TxRDY=1
                      	
  26E3  3A18FA        		ld	a,(STOPFLG)
  26E6  FE03          		cp	03h
  26E8  20F2          		jr	nz,PUT232LP
                      	;stop
  26EA  CDF226        		call	PUT232END
  26ED  1862          		jr	STOPSP
                      	
  26EF                	PUT232Z:
  26EF  F1            		pop	af
  26F0  D380          		out	(80h),a
  26F2                	PUT232END:
  26F2  3E37          		ld	a,37h		;RTS=1
  26F4  D381          		out	(81h),a
  26F6  C9            		ret
                      	
                      	
  26F7                	PUTPRTTAB:
  26F7  3E20          		ld	a,' '
  26F9  CD1727        		call	PUTPRT3		;a<-(PRTPOS)
  26FC  E607          		and	07h
  26FE  20F7          		jr	nz,PUTPRTTAB
  2700  C9            		ret
                      	
                      	
                      	;put new line to printer
                      	;destroy: af
  2701                	_PUTPRNL:ds	PUTPRNL-_PUTPRNL
  2701                		org	PUTPRNL
  2701  3E01          		ld	a,01h
  2703  3258FA        		ld	(DEVICE),a
  2706  3A57FA        		ld	a,(PRTPOS)
  2709  B7            		or	a
  270A  C43927        		call	nz,PUTNL
  270D  AF            		xor	a
  270E  3258FA        		ld	(DEVICE),a
  2711  C9            		ret
                      	
                      	
  2712                	PUTPRT2:
  2712  F1            		pop	af
  2713  FE09          		cp	09h
  2715  28E0          		jr	z,PUTPRTTAB
  2717                	PUTPRT3:
  2717  CD1C1A        		call	PUTPRT
  271A  D60D          		sub	0dh
  271C  2805          		jr	z,PUTPRTZ	;a=0 if CR
  271E  D8            		ret	c
  271F  3A57FA        		ld	a,(PRTPOS)
  2722  3C            		inc	a
  2723                	PUTPRTZ:
  2723  3257FA        		ld	(PRTPOS),a
  2726  C9            		ret
                      	
                      	
  2727                	PUTCRT:
  2727  F1            		pop	af
  2728  C37510        		jp	PRTC
                      	
                      	
                      	;put new line if necessary
  272B                	_PUTNLX:ds	PUTNLX-_PUTNLX
  272D                		org	PUTNLX
  272D  3A58FA        		ld	a,(DEVICE)
  2730  B7            		or	a
  2731  CA6109        		jp	z,PRTNLX
  2734  3D            		dec	a
  2735  28CA          		jr	z,PUTPRNL
  2737  1800          		jr	PUTNL
                      	
                      	
                      	;put new line
                      	;destroy: af
  2739                	_PUTNL:	ds	PUTNL-_PUTNL
  2739                		org	PUTNL
                      	
  2739  3E0D          		ld	a,0dh
  273B  CDC726        		call	PUTDEV
  273E  3E0A          		ld	a,0ah
  2740  C3C726        		jp	PUTDEV
                      	
                      	
                      	;STOP and ESC
                      	;destroy: af
  2743                	_STOPESC:ds	STOPESC-_STOPESC
  274D                		org	STOPESC
                      	
  274D  CD5B27        		call	CHKSTOP
  2750  C0            		ret	nz
                      	;	jp	STOPSP
                      	
                      	;reset sp and stop
  2751                	STOPSP:
  2751  ED7B5BFA      		ld	sp,(STACK)
  2755  21FFFF        		ld	hl,0ffffh
  2758  C33C35        		jp	STOP2
                      	
                      	
                      	;check STOP/ESC
                      	;output: z-flag (1=STOP)
                      	;destroy: af
  275B                	CHKSTOP:
  275B  3A18FA        		ld	a,(STOPFLG)
  275E  FE03          		cp	03h
  2760  C8            		ret	z
  2761  FE1B          		cp	1bh
  2763  C0            		ret	nz
  2764  CDBC0F        		call	GETCH		;cancel ESC
  2767                	CHKSTLP:
  2767  3A18FA        		ld	a,(STOPFLG)
  276A  FE1B          		cp	1bh
  276C  28F9          		jr	z,CHKSTLP
  276E  CDBC0F        		call	GETCH		;ESC end
  2771  18E8          		jr	CHKSTOP
                      	
                      	
                      	;get device number
                      	;in	out
                      	;#0	0	CRT
                      	;#-1	80h	CMT
                      	;#-2	2	RS-232C
                      	;#-3	1	printer
                      	;input: hl=program address
                      	;output: a, hl,(PROGAD)=next address
                      	;destroy: f,bc,de
  2773                	DEVNUM:
  2773  CD603F        		call	SKIPSP
  2776  FE23          		cp	'#'
  2778  3E00          		ld	a,00h
  277A  C0            		ret	nz
                      	
  277B  23            		inc	hl
  277C  CD190E        		call	INT2ARG
  277F  E5            		push	hl
  2780  1B            		dec	de
  2781  210400        		ld	hl,0004h
  2784  19            		add	hl,de
  2785  D2CB03        		jp	nc,FCERR
  2788  7D            		ld	a,l
  2789  3C            		inc	a
  278A  FE03          		cp	03h
  278C  3803          		jr	c,DEVNUMC	;#-2,#-3
  278E  E601          		and	01h
  2790  0F            		rrca
  2791                	DEVNUMC:
  2791  E1            		pop	hl
  2792  F5            		push	af
  2793  CD723F        		call	CHKCMM
  2796  C2C203        		jp	nz,SNERR
  2799  224EFF        		ld	(PROGAD),hl
  279C  F1            		pop	af
  279D  C9            		ret
                      	
                      	
                      	;INKEY$
  279E                	F_INKY:
  279E  21AD18        		ld	hl,FNCRTN
  27A1  E5            		push	hl
                      	
  27A2  CDBC0F        		call	GETCH
  27A5  282A          		jr	z,INKYZ
                      	
  27A7  FE03          		cp	03h
  27A9  2826          		jr	z,INKYZ
  27AB  FE1B          		cp	1bh
  27AD  2822          		jr	z,INKYZ
                      	
  27AF  47            		ld	b,a		;
  27B0                	INKYNZ:
  27B0  3E01          		ld	a,01h		;new string length=1
  27B2  3230FF        		ld	(STRDSC1+3),a	;old string descriptor address < (STRAD)
  27B5  CD6626        		call	GCCHECK
  27B8  223DFF        		ld	(STRAD),hl
  27BB  23            		inc	hl
  27BC  70            		ld	(hl),b		;
  27BD  222FFF        		ld	(STRDSC1+2),hl	;new string descriptor address
  27C0  3E01          		ld	a,01h
  27C2                	INKYLEN:
  27C2  322DFF        		ld	(STRDSC1),a
                      	
  27C5                	INKYEND:
  27C5  212DFF        		ld	hl,STRDSC1
  27C8  2267FF        		ld	(FAC1+1),hl
  27CB  3E01          		ld	a,01h
  27CD  3225FF        		ld	(ARGTYP),a
  27D0  C9            		ret
                      	
  27D1                	INKYZ:
  27D1  AF            		xor	a
  27D2  18EE          		jr	INKYLEN
                      	
                      	
                      	;convert string to 2-byte integer (unsigned)
                      	;input: hl=program address
                      	;output: de=integer, hl=next address
                      	;destroy: af,bc
  27D4                	ATOI2:
  27D4  0600          		ld	b,00h
                      	
                      	;input: hl=program address, b=string length
  27D6                	ATOI2LEN:
  27D6  110000        		ld	de,0000h
  27D9  2B            		dec	hl
  27DA                	ATOI2LP:
  27DA  23            		inc	hl
  27DB  7E            		ld	a,(hl)
  27DC  FE20          		cp	' '
  27DE  28FA          		jr	z,ATOI2LP
  27E0  D630          		sub	'0'
  27E2  FE0A          		cp	'9'-'0'+1
  27E4  D0            		ret	nc
                      	
  27E5  E5            		push	hl
                      	
  27E6  2166E6        		ld	hl,0-6554
  27E9  19            		add	hl,de
  27EA  3813          		jr	c,ATOI2END
                      	
  27EC  62            		ld	h,d
  27ED  6B            		ld	l,e
  27EE  29            		add	hl,hl
  27EF  29            		add	hl,hl
  27F0  19            		add	hl,de
  27F1  29            		add	hl,hl
                      	
  27F2  85            		add	a,l
  27F3  6F            		ld	l,a
  27F4  3003          		jr	nc,ATOI2NC
  27F6  24            		inc	h
  27F7  2806          		jr	z,ATOI2END
                      	
  27F9                	ATOI2NC:
  27F9  EB            		ex	de,hl
  27FA  E1            		pop	hl
  27FB  10DD          		djnz	ATOI2LP
  27FD  23            		inc	hl
  27FE  C9            		ret
                      	
  27FF                	ATOI2END:
  27FF  E1            		pop	hl
  2800  C9            		ret
                      	
                      	
                      	;convert string to float (integer part)
                      	;input: b=length, hl=program address
                      	;output: FAC1, hl=next address, b=remained length, d=sign(0=plus, 1=minus)
                      	;destroy: FAC2, af,de
  2801                	ATOIF:
  2801  78            		ld	a,b		;
  2802  E5            		push	hl
  2803  CD2A0C        		call	SETZERO
  2806  E1            		pop	hl
  2807  47            		ld	b,a		;
  2808  1600          		ld	d,00h		;sign
                      	
  280A                	ATOIFLP1:
  280A  CD8C3A        		call	SKIPSPB
  280D  C8            		ret	z		;all space
                      	
  280E  05            		dec	b
  280F  FE2B          		cp	'+'
  2811  2810          		jr	z,ATOIFLP2
  2813  FECA          		cp	PLUS_
  2815  280C          		jr	z,ATOIFLP2
  2817  14            		inc	d
  2818  FE2D          		cp	'-'
  281A  2807          		jr	z,ATOIFLP2
  281C  FECB          		cp	MINUS_
  281E  2803          		jr	z,ATOIFLP2
  2820  04            		inc	b
  2821  15            		dec	d
  2822  2B            		dec	hl
  2823                	ATOIFLP2:
  2823  CD2A28        		call	CTOF
  2826  D0            		ret	nc
  2827  10FA          		djnz	ATOIFLP2
  2829  C9            		ret
                      	
                      	
                      	;FAC1 = FAC1 * 10 + [0-9]
                      	;input: FAC1, hl=program address, b=length(>0), d=sign(0=plus, 1=minus)
                      	;output: FAC1, c-flag(1=OK), b=remained length(for space), hl=next address
                      	;destroy: FAC2,af
  282A                	CTOF:
  282A  CD8C3A        		call	SKIPSPB
  282D  2B            		dec	hl
  282E  C8            		ret	z
                      	
  282F  D630          		sub	'0'
  2831  FE0A          		cp	'9'-'0'+1
  2833  D0            		ret	nc
  2834  23            		inc	hl
  2835  E5            		push	hl		;program address
                      	
  2836  D5            		push	de
  2837  C5            		push	bc
  2838  F5            		push	af
  2839  CD1939        		call	ABS
  283C  CD9037        		call	MULF10
  283F  CD5B39        		call	CPYFAC
  2842  F1            		pop	af
  2843  CD650C        		call	I1TOFA
  2846  CD8F36        		call	ADDF
  2849  C1            		pop	bc
  284A  D1            		pop	de
                      	
  284B  7A            		ld	a,d
  284C  0F            		rrca
  284D  DC280D        		call	c,NEGABS
                      	
  2850  E1            		pop	hl		;program address
  2851  37            		scf
  2852  C9            		ret
                      	
                      	
                      	;insert a character
                      	;input: a=data (for checking BELL)
                      	;output: hl=VRAM address
                      	;destroy: f,bc,de
  2853                	INSERT:
  2853  FE07          		cp	07h
  2855  2005          		jr	nz,INSNZ
  2857  CD7510        		call	PRTC
  285A  3E20          		ld	a,' '
  285C                	INSNZ:
  285C  F5            		push	af
                      	
  285D  2AAAFD        		ld	hl,(CSRAD)
                      	
  2860  CDD628        		call	GETSCRC
  2863  47            		ld	b,a		;
                      	
  2864  23            		inc	hl
  2865  CD6315        		call	CHKLINE
  2868  201C          		jr	nz,INSSCRL
                      	
  286A  CDF815        		call	CNVATT1
  286D  4F            		ld	c,a
                      	
  286E                	INSLP:
  286E  CDD628        		call	GETSCRC
                      	
  2871  E5            		push	hl
  2872  CD410E        		call	CHR2ATT
  2875  71            		ld	(hl),c
  2876  E1            		pop	hl
                      	
  2877  70            		ld	(hl),b
  2878  47            		ld	b,a
  2879  23            		inc	hl
  287A  CD6315        		call	CHKLINE
  287D  28EF          		jr	z,INSLP
                      	
  287F  78            		ld	a,b
  2880  FE20          		cp	' '
  2882  2002          		jr	nz,INSSCRL
  2884  F1            		pop	af
  2885  C9            		ret
                      	
                      	
  2886                	INSSCRL:
  2886  E5            		push	hl
                      	
  2887  CD4911        		call	AD2XY
                      	
  288A  3AA5FD        		ld	a,(LASTLIN)
  288D  BD            		cp	l
  288E  381B          		jr	c,INSSCRLU
                      	
  2890  67            		ld	h,a		;(LASTLIN)
  2891  2837          		jr	z,NOSCRLD
  2893  CD530E        		call	SCRLDW
                      	
  2896                	INSSCRLEND:
  2896  4D            		ld	c,l		;;
  2897  2D            		dec	l
  2898  AF            		xor	a
                      	
  2899                	INSSCRLEND2:
  2899  CD8215        		call	SETLINE
  289C  69            		ld	l,c		;;
  289D  CDB811        		call	Y2AD
  28A0  CDDA11        		call	DELLIN
  28A3  E1            		pop	hl
                      	
  28A4  78            		ld	a,b
  28A5  CDCA14        		call	PRT12
  28A8  2B            		dec	hl
                      	
  28A9  F1            		pop	af
  28AA  C9            		ret
                      	
  28AB                	INSSCRLU:
  28AB  E1            		pop	hl
  28AC  11E0FF        		ld	de,0-COLUMNS
  28AF  CB54          		bit	2,h
  28B1  2802          		jr	z,INSSCRLU60
  28B3  1ED8          		ld	e,0-CLMN66	;d=0ffh
  28B5                	INSSCRLU60:
  28B5  19            		add	hl,de
  28B6  E5            		push	hl
                      	
  28B7  6F            		ld	l,a		;(LASTLIN)
  28B8  3E1E          		ld	a,1eh		;up
  28BA  CD7510        		call	PRTC
                      	
  28BD  3AA2FD        		ld	a,(CONSOL1)
  28C0  67            		ld	h,a
  28C1  95            		sub	l
  28C2  4D            		ld	c,l
  28C3  280B          		jr	z,NOSCRLU	;a=0
                      	
  28C5  CD4A0E        		call	SCRLUP
  28C8  18CC          		jr	INSSCRLEND
                      	
  28CA                	NOSCRLD:
  28CA  AF            		xor	a
  28CB  3259FE        		ld	(INPTXY),a	;scroll out
  28CE  18C6          		jr	INSSCRLEND
                      	
  28D0                	NOSCRLU:
                      	;	xor	a
  28D0  3259FE        		ld	(INPTXY),a	;scroll out
  28D3  3C            		inc	a
  28D4  18C3          		jr	INSSCRLEND2
                      	
                      	
                      	;get character from screen
                      	;input: hl
                      	;output: a
                      	;destroy: f
  28D6                	GETSCRC:
  28D6  CD9539        		call	CHKMOD
  28D9  CA6166        		jp	z,GETSCRC66
  28DC  7E            		ld	a,(hl)
  28DD  25            		dec	h
  28DE  25            		dec	h
  28DF  CB76          		bit	6,(hl)
  28E1  2802          		jr	z,GETSCRCZ
  28E3  3E20          		ld	a,' '
  28E5                	GETSCRCZ:
  28E5  24            		inc	h
  28E6  24            		inc	h
  28E7  C9            		ret
                      	
                      	
  28E8                	NOINSTBL:
  28E8  020305060B0C0D		db	02h, 03h, 05h, 06h, 0bh, 0ch, 0dh, 15h, 1ch, 1dh, 1eh, 1fh
                      	
  28F4                	DELSTR:
  28F4  1D201D00      		db	1dh, ' ', 1dh, 00h
                      	
                      	
                      	;screen input
                      	;output: hl=INPBUF-1, c-flag(1=stop)
                      	;destroy: af,bc,de
  28F8                	_INPTSCR:ds	INPTSCR-_INPTSCR
  28F9                		org	INPTSCR
                      	
  28F9  CD5529        		call	SCREDIT
  28FC  D8            		ret	c
  28FD  3E47          		ld	a,71
  28FF  1811          		jr	COPYIBF
                      	
                      	
                      	;one line input
                      	;output: hl=INPBUF-1, c-flag(1=stop)
                      	;destroy: af,bc,de
  2901                	_INPT1:	ds	INPT1-_INPT1
  2905                		org	INPT1
                      	
  2905  212C01        		ld	hl,QMARK
  2908  CDCF30        		call	PUTS
  290B  CD5529        		call	SCREDIT
  290E  D8            		ret	c
  290F  3A5BFE        		ld	a,(INPTX)
                      	;	jr	COPYIBF
                      	
                      	;copy characters to input buffer from VRAM
                      	;input: a=length, hl=start position address
                      	;output: hl=INPBUF-1, c-flag=0
                      	;destroy: af,bc,de
  2912                	COPYIBF:
  2912  11DAFE        		ld	de,INPBUF
  2915  B7            		or	a
  2916  2813          		jr	z,CPIBFZ
  2918  4F            		ld	c,a
  2919  0647          		ld	b,71
  291B                	CPIBFLP1:
  291B  CDD628        		call	GETSCRC
  291E  FE20          		cp	20h
  2920  300F          		jr	nc,CPIBFNC
  2922  EB            		ex	de,hl
  2923  3614          		ld	(hl),14h
  2925  EB            		ex	de,hl
  2926  1006          		djnz	CPIBFGRP
  2928  AF            		xor	a
  2929  1813          		jr	CPIBFNZ
  292B                	CPIBFZ:
  292B  12            		ld	(de),a
  292C  1810          		jr	CPIBFNZ
  292E                	CPIBFGRP:
  292E  13            		inc	de
  292F  C630          		add	a,30h
                      	
  2931                	CPIBFNC:
  2931  12            		ld	(de),a
  2932  13            		inc	de
  2933  23            		inc	hl
  2934  CD6315        		call	CHKLINE
  2937  2005          		jr	nz,CPIBFNZ
  2939  0D            		dec	c
  293A  2802          		jr	z,CPIBFNZ
  293C  10DD          		djnz	CPIBFLP1
                      	
  293E                	CPIBFNZ:
  293E  2B            		dec	hl
  293F  CD4911        		call	AD2XY
  2942  CD6D11        		call	SETCSR
  2945  CD3927        		call	PUTNL
                      	
  2948                	CPIBFLP2:
  2948  1B            		dec	de
  2949  1A            		ld	a,(de)
  294A  FE20          		cp	' '
  294C  28FA          		jr	z,CPIBFLP2
  294E  13            		inc	de
  294F  AF            		xor	a
  2950  12            		ld	(de),a
                      	
  2951  21D9FE        		ld	hl,INPBUF-1
  2954  C9            		ret
                      	
                      	
                      	;screen edit
                      	;output: hl=start position address, c-flag(1=stop)
                      	;destroy: af,bc,de
  2955                	SCREDIT:
  2955  CD7D15        		call	CUTLINE
  2958  2AA8FD        		ld	hl,(CSRY)
  295B  225AFE        		ld	(INPTX-1),hl	;h=end position for INPUT command
  295E  2259FE        		ld	(INPTXY),hl	;initial position for INPUT command
  2961  3AABFD        		ld	a,(CSRAD+1)
  2964  325CFE        		ld	(INPTPAG),a	;page for INPUT command
                      	
  2967                	SEDLP:
  2967  CDC40F        		call	GETC
  296A  CD6F29        		call	SEDCMD
  296D  18F8          		jr	SEDLP
                      	
                      	
                      	;one line input main routine
  296F                	SEDCMD:
  296F  FE20          		cp	20h
  2971  3832          		jr	c,SEDCTL
                      	
  2973  2A5DFE        		ld	hl,(INSMODE)
  2976  2C            		inc	l
  2977  2D            		dec	l
  2978  C45328        		call	nz,INSERT
                      	
  297B                	SEDPRTC:
  297B  CD7510        		call	PRTC
                      	
  297E                	CHKIPOS2:
  297E  2AAAFD        		ld	hl,(CSRAD)
                      	
                      	;check cursor position for input command
                      	;input: hl=cursor address
                      	;output: hl=cursor XY, de=cursor address
                      	;destroy: af
  2981                	CHKIPOS:
  2981  54            		ld	d,h
  2982  5D            		ld	e,l
  2983  CD4911        		call	AD2XY
  2986  3A59FE        		ld	a,(INPTXY)	;y+1
  2989  BD            		cp	l
  298A  C0            		ret	nz
                      	
  298B  3A5BFE        		ld	a,(INPTX)
  298E  BC            		cp	h
  298F  3004          		jr	nc,IPOSNC
  2991  7C            		ld	a,h
  2992  325BFE        		ld	(INPTX),a
  2995                	IPOSNC:
  2995  3A5AFE        		ld	a,(INPTXY+1)	;x+1
  2998  BC            		cp	h
  2999  D8            		ret	c
                      	
  299A  3A5CFE        		ld	a,(INPTPAG)
  299D  AA            		xor	d
  299E  E6F0          		and	0f0h
  29A0  C0            		ret	nz
                      	
  29A1  2259FE        		ld	(INPTXY),hl
  29A4  C9            		ret
                      	
                      	
                      	;control code
  29A5                	SEDCTL:
  29A5  21E828        		ld	hl,NOINSTBL
  29A8  010C00        		ld	bc,000ch
  29AB  EDB1          		cpir
  29AD  2004          		jr	nz,SEDCMDNZ
  29AF  215DFE        		ld	hl,INSMODE
  29B2  70            		ld	(hl),b		;b=0
  29B3                	SEDCMDNZ:
  29B3  2AAAFD        		ld	hl,(CSRAD)
                      	
  29B6  FE02          		cp	02h
  29B8  2879          		jr	z,SEDCTLB
  29BA  FE03          		cp	03h
  29BC  CACD2A        		jp	z,SEDSTOP
  29BF  FE05          		cp	05h
  29C1  285E          		jr	z,SEDCTLE
  29C3  FE06          		cp	06h
  29C5  CA552A        		jp	z,SEDCTLF
  29C8  FE08          		cp	08h
  29CA  281E          		jr	z,SEDDEL
  29CC  FE09          		cp	09h
  29CE  CAAA2A        		jp	z,SEDTAB
  29D1  FE0A          		cp	0ah
  29D3  CA812A        		jp	z,SEDCTLJ
  29D6  FE0D          		cp	0dh
  29D8  CAE92A        		jp	z,SEDRET
  29DB  FE15          		cp	15h
  29DD  283D          		jr	z,SEDCTLU
  29DF  FE12          		cp	12h
  29E1  2098          		jr	nz,SEDPRTC	;14h,1ch,1dh,1eh,1fh
                      	
  29E3                	SEDINS:
  29E3  215DFE        		ld	hl,INSMODE
  29E6  7E            		ld	a,(hl)
  29E7  2F            		cpl
  29E8  77            		ld	(hl),a
  29E9  C9            		ret
                      	
                      	
  29EA                	SEDDEL:
  29EA  CD6315        		call	CHKLINE
  29ED  E5            		push	hl		;
  29EE  21F428        		ld	hl,DELSTR
  29F1  2801          		jr	z,SEDDELZ
  29F3  23            		inc	hl
  29F4                	SEDDELZ:
  29F4  CDCF30        		call	PUTS
  29F7  CD7E29        		call	CHKIPOS2
  29FA  E1            		pop	hl		;
  29FB  54            		ld	d,h
  29FC  5D            		ld	e,l
  29FD  1B            		dec	de
  29FE  CDF815        		call	CNVATT1
  2A01  4F            		ld	c,a
  2A02                	DELLP:
  2A02  CDD628        		call	GETSCRC
  2A05  12            		ld	(de),a
                      	
  2A06  E5            		push	hl
  2A07  CD410E        		call	CHR2ATT
  2A0A  71            		ld	(hl),c
  2A0B  E1            		pop	hl
                      	
  2A0C  13            		inc	de
  2A0D  23            		inc	hl
                      	
  2A0E  CD6315        		call	CHKLINE
  2A11  28EF          		jr	z,DELLP
                      	
  2A13  2B            		dec	hl
  2A14  3620          		ld	(hl),' '
  2A16  CD410E        		call	CHR2ATT
  2A19  71            		ld	(hl),c
                      	
  2A1A  C9            		ret
                      	
                      	
  2A1B                	CTLULP:
  2A1B  2B            		dec	hl
  2A1C                	SEDCTLU:
  2A1C  CD6315        		call	CHKLINE
  2A1F  28FA          		jr	z,CTLULP
                      	
  2A21                	SEDCTLE:
  2A21  E5            		push	hl
  2A22  CD410E        		call	CHR2ATT
  2A25  CDF815        		call	CNVATT1
  2A28  77            		ld	(hl),a
  2A29  E1            		pop	hl
                      	
  2A2A  3620          		ld	(hl),' '
  2A2C  23            		inc	hl
  2A2D  CD6315        		call	CHKLINE
  2A30  28EF          		jr	z,SEDCTLE
  2A32  C9            		ret
                      	
                      	
  2A33                	SEDCTLB:
  2A33  CD442A        		call	CHKCTLB
  2A36  30FB          		jr	nc,SEDCTLB
  2A38                	CTLBLP:
  2A38  CD442A        		call	CHKCTLB
  2A3B  38FB          		jr	c,CTLBLP
  2A3D  23            		inc	hl
  2A3E  CD8129        		call	CHKIPOS
  2A41  C36D11        		jp	SETCSR
                      	
  2A44                	CHKCTLB:
  2A44  2B            		dec	hl
  2A45  54            		ld	d,h
  2A46  5D            		ld	e,l
  2A47  CD4911        		call	AD2XY
  2A4A  3AA2FD        		ld	a,(CONSOL1)
  2A4D  2C            		inc	l
  2A4E  BD            		cp	l
  2A4F  3821          		jr	c,CTLBC
  2A51                	CTLBNC:
  2A51  F1            		pop	af		;cancel return address
  2A52  C36811        		jp	CTLCR
                      	
                      	
  2A55                	SEDCTLF:
  2A55  CD662A        		call	CHKCTLF
  2A58  38FB          		jr	c,SEDCTLF
  2A5A                	CTLFLP:
  2A5A  CD662A        		call	CHKCTLF
  2A5D  30FB          		jr	nc,CTLFLP
  2A5F  EB            		ex	de,hl
  2A60  CD6D11        		call	SETCSR
  2A63  C37E29        		jp	CHKIPOS2
                      	
  2A66                	CHKCTLF:
  2A66  23            		inc	hl
  2A67  54            		ld	d,h
  2A68  5D            		ld	e,l
  2A69  CD4911        		call	AD2XY
  2A6C  3AA5FD        		ld	a,(LASTLIN)
  2A6F  BD            		cp	l
  2A70  3807          		jr	c,CTLFC
  2A72                	CTLBC:
  2A72  EB            		ex	de,hl
  2A73  CDD628        		call	GETSCRC
  2A76  C39C0B        		jp	ALPNUM2
                      	
  2A79                	CTLFC:
  2A79  2AABFD        		ld	hl,(WIDTH-1)	;h=(WIDTH)
  2A7C  6F            		ld	l,a
                      	
  2A7D  F1            		pop	af		;cancel return address
  2A7E  C36D11        		jp	SETCSR
                      	
                      	
  2A81                	SEDCTLJ:
  2A81  3A5DFE        		ld	a,(INSMODE)
  2A84  B7            		or	a
  2A85  3E0A          		ld	a,0ah
  2A87  CA7B29        		jp	z,SEDPRTC
                      	
  2A8A  2AA8FD        		ld	hl,(CSRY)	;l=y+1, h=x+1
  2A8D  3AACFD        		ld	a,(WIDTH)
  2A90  3C            		inc	a
  2A91  94            		sub	h
  2A92  47            		ld	b,a
  2A93                	CTLJLP:
  2A93  C5            		push	bc
  2A94  3E20          		ld	a,' '
  2A96  CD5328        		call	INSERT
  2A99  2AAAFD        		ld	hl,(CSRAD)
  2A9C  77            		ld	(hl),a
  2A9D  C1            		pop	bc
  2A9E  10F3          		djnz	CTLJLP
                      	
  2AA0  CD4911        		call	AD2XY
  2AA3  CD6D11        		call	SETCSR
  2AA6  7C            		ld	a,h		;>0
  2AA7  C38215        		jp	SETLINE
                      	
                      	
  2AAA                	SEDTAB:
  2AAA  3AACFD        		ld	a,(WIDTH)
  2AAD  D607          		sub	07h
  2AAF  47            		ld	b,a
  2AB0  3AA9FD        		ld	a,(CSRX)
  2AB3  90            		sub	b
  2AB4  DE07          		sbc	a,07h
  2AB6  C8            		ret	z
  2AB7  2F            		cpl
  2AB8  E607          		and	07h
  2ABA  3C            		inc	a
  2ABB  47            		ld	b,a
  2ABC  3A5DFE        		ld	a,(INSMODE)
  2ABF  E604          		and	04h
  2AC1  C61C          		add	a,1ch		;1ch(right) or 20h(space)
  2AC3  4F            		ld	c,a
  2AC4                	SEDTABLP:
  2AC4  C5            		push	bc
  2AC5  79            		ld	a,c
  2AC6  CD6F29        		call	SEDCMD
  2AC9  C1            		pop	bc
  2ACA  10F8          		djnz	SEDTABLP
  2ACC  C9            		ret
                      	
                      	
  2ACD                	SEDSTOP:
  2ACD  E1            		pop	hl		;cancel return address
  2ACE  2AA8FD        		ld	hl,(CSRY)
  2AD1                	STOPLP:
  2AD1  2C            		inc	l
  2AD2  CD7215        		call	CHKLINE3
  2AD5  28FA          		jr	z,STOPLP
  2AD7  2D            		dec	l
  2AD8  CD6D11        		call	SETCSR
  2ADB  CD3927        		call	PUTNL
                      	
  2ADE  21DAFE        		ld	hl,INPBUF
  2AE1  AF            		xor	a
  2AE2  3218FA        		ld	(STOPFLG),a
  2AE5  77            		ld	(hl),a
  2AE6  2B            		dec	hl
  2AE7  37            		scf
  2AE8  C9            		ret
                      	
                      	
  2AE9                	SEDRET:
  2AE9  F1            		pop	af		;cancel return address
  2AEA  E5            		push	hl		;(CSRAD)
                      	
  2AEB  3A5CFE        		ld	a,(INPTPAG)
  2AEE  AC            		xor	h		;(CSRAD+1)
  2AEF  E6F0          		and	0f0h
  2AF1  2019          		jr	nz,SETLENMAX	;if other page
                      	
  2AF3  3AA8FD        		ld	a,(CSRY)
  2AF6  2A59FE        		ld	hl,(INPTXY)
  2AF9  BD            		cp	l		;(INPTXY)
  2AFA  2010          		jr	nz,SETLENMAX	;if other line
                      	
  2AFC  CD7215        		call	CHKLINE3
  2AFF  280B          		jr	z,SETLENMAX	;if connected to previous line
  2B01  CD7615        		call	CHKLINE4
  2B04  2806          		jr	z,SETLENMAX	;if connected to next line
                      	
  2B06  3A5BFE        		ld	a,(INPTX)	;end position
  2B09  94            		sub	h		;(INPTXY+1)
  2B0A  1802          		jr	SETLEN
                      	
  2B0C                	SETLENMAX:
  2B0C  3E47          		ld	a,71
  2B0E                	SETLEN:
  2B0E  325BFE        		ld	(INPTX),a	;length
  2B11  E1            		pop	hl		;(CSRAD)
                      	
  2B12                	SRETLP:
  2B12  CD6315        		call	CHKLINE
  2B15  2B            		dec	hl
  2B16  28FA          		jr	z,SRETLP
                      	
  2B18  23            		inc	hl
  2B19  54            		ld	d,h		;
  2B1A  CD4911        		call	AD2XY
  2B1D  3A5CFE        		ld	a,(INPTPAG)
  2B20  AA            		xor	d		;
  2B21  E6F0          		and	0f0h
  2B23  2009          		jr	nz,SRETNZ	;if other page
                      	
  2B25  ED5B59FE      		ld	de,(INPTXY)	;initial position
  2B29  7D            		ld	a,l
  2B2A  BB            		cp	e
  2B2B  2001          		jr	nz,SRETNZ	;if other line
  2B2D  EB            		ex	de,hl		;if same line
  2B2E                	SRETNZ:
  2B2E  B7            		or	a		;reset c-flag
  2B2F  C3CD11        		jp	XY2AD
                      	
                      	
                      	;x=x+-(8 or 4 or 2 or 1)
                      	;input: b(bit7=0:increment, bit7=1:decrement), (GRPX3)
                      	;output: hl,(GRPX3)=X
                      	;destroy: af,de
  2B32                	INCGX:
  2B32  3A92FD        		ld	a,(SCREEN1)
  2B35  3C            		inc	a
  2B36  57            		ld	d,a
  2B37  3E10          		ld	a,10h
  2B39                	INCGXLP:
  2B39  0F            		rrca
  2B3A  15            		dec	d
  2B3B  20FC          		jr	nz,INCGXLP
                      	
  2B3D  2AB1FE        		ld	hl,(GRPX3)
  2B40  5F            		ld	e,a
  2B41  CB78          		bit	7,b
  2B43  2003          		jr	nz,INCGXNZ
                      	
  2B45  19            		add	hl,de		;de=8,4,2,1
  2B46  1802          		jr	INCGXEND
                      	
  2B48                	INCGXNZ:
                      	;	or	a
  2B48  ED52          		sbc	hl,de		;de=8,4,2,1
                      	
  2B4A                	INCGXEND:
  2B4A  22B1FE        		ld	(GRPX3),hl
  2B4D  C9            		ret
                      	
                      	
                      	;y=y+(12 or 4 or 1 or 1)
                      	;input: (GRPY3)
                      	;output: de=(GRPY3)
                      	;destroy: af
  2B4E                	INCGY:
  2B4E  CD9539        		call	CHKMOD
  2B51  CA686C        		jp	z,INCGY66
  2B54  3A92FD        		ld	a,(SCREEN1)
  2B57  3D            		dec	a
  2B58  3E04          		ld	a,04h		;screen mode 2
  2B5A  2807          		jr	z,INCGYZ
  2B5C  3E01          		ld	a,01h		;screen mode 3,4
  2B5E  F2632B        		jp	p,INCGYZ
  2B61  3E0C          		ld	a,0ch		;screen mode 1
  2B63                	INCGYZ:
  2B63  ED5BB3FE      		ld	de,(GRPY3)
  2B67  83            		add	a,e
  2B68  5F            		ld	e,a
  2B69  32B3FE        		ld	(GRPY3),a	;<256
  2B6C  C9            		ret
                      	
                      	
                      	;error-=|dx|*2
                      	;input: bc=dx, hl=error
                      	;output: hl=error
                      	;destroy: af
  2B6D                	SUB2DX:
  2B6D  78            		ld	a,b
  2B6E  07            		rlca
  2B6F  3805          		jr	c,SUB2DXNZ
                      	;dx>0
                      	;	or	a
  2B71  ED42          		sbc	hl,bc
  2B73  ED42          		sbc	hl,bc
  2B75  C9            		ret
                      	
                      	;dx<0
  2B76                	SUB2DXNZ:
  2B76  09            		add	hl,bc
  2B77  09            		add	hl,bc
  2B78  C9            		ret
                      	
                      	
                      	;x1 <-> x2, y1 <-> y2
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2
                      	;output: (GRPX2)=larger x,(GRPY2)=larger y,(GRPX3)=smaller x,(GRPY3)=smaller y
                      	;destroy: bc,de,hl
  2B79                	SORTXY:
  2B79  F5            		push	af
  2B7A  CDC92B        		call	CHKGXY23
  2B7D  3807          		jr	c,SORTXOK
  2B7F  22AFFE        		ld	(GRPY2),hl
  2B82  ED53B3FE      		ld	(GRPY3),de
  2B86                	SORTXOK:
  2B86  2AADFE        		ld	hl,(GRPX2)
  2B89  ED5BB1FE      		ld	de,(GRPX3)
  2B8D  E7            		rst	CPHLDE
  2B8E  3816          		jr	c,SORTX
  2B90  F1            		pop	af
  2B91  C9            		ret
                      	
                      	
                      	;(x1,y1) <-> (x2,y2)
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2
                      	;output: (GRPX2),(GRPY2)=larger y with x, (GRPX3),(GRPY3)=small y with x
                      	;destroy: bc,de,hl
  2B92                	SORTY:
  2B92  F5            		push	af
  2B93  CDC92B        		call	CHKGXY23
  2B96  3815          		jr	c,NOSORT
  2B98  22AFFE        		ld	(GRPY2),hl
  2B9B  ED53B3FE      		ld	(GRPY3),de
  2B9F  2AADFE        		ld	hl,(GRPX2)
  2BA2  ED5BB1FE      		ld	de,(GRPX3)
  2BA6                	SORTX:
  2BA6  ED53ADFE      		ld	(GRPX2),de
  2BAA  22B1FE        		ld	(GRPX3),hl
  2BAD                	NOSORT:
  2BAD  F1            		pop	af
  2BAE  C9            		ret
                      	
                      	
                      	;sort XY and put bc,de,hl
                      	;output: bc=smaller x, de=smaller y, hl=larger y
                      	;destroy: none
  2BAF                	SORTXY2:
  2BAF  CD792B        		call	SORTXY
  2BB2  ED4BB1FE      		ld	bc,(GRPX3)	;smaller x, b=0
  2BB6  ED5BB3FE      		ld	de,(GRPY3)	;smaller y
  2BBA  2AAFFE        		ld	hl,(GRPY2)	;larger y
  2BBD  C9            		ret
                      	
                      	
                      	;push (GRPX2),(GRPY2)
                      	;destroy: af,hl
  2BBE                	PUSHGXY:
  2BBE  F1            		pop	af		;return address
  2BBF  2AADFE        		ld	hl,(GRPX2)
  2BC2  E5            		push	hl
  2BC3  2AAFFE        		ld	hl,(GRPY2)
  2BC6  E5            		push	hl
  2BC7  F5            		push	af		;return address
  2BC8  C9            		ret
                      	
                      	
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2
                      	;output: bc=(GRPX2)=x2, de=(GRPY2)=y2, hl=(GRPY3)=y1, (GRPX3)=x1, z,c(y1>y2?)
                      	;destroy: af
  2BC9                	CHKGXY23:
  2BC9  CDEC2B        		call	CHKGXY
  2BCC  ED43B1FE      		ld	(GRPX3),bc
  2BD0  ED53B3FE      		ld	(GRPY3),de
  2BD4  ED4BADFE      		ld	bc,(GRPX2)
  2BD8  ED5BAFFE      		ld	de,(GRPY2)
  2BDC  CDEC2B        		call	CHKGXY
  2BDF  ED43ADFE      		ld	(GRPX2),bc
  2BE3  ED53AFFE      		ld	(GRPY2),de
                      	
  2BE7  2AB3FE        		ld	hl,(GRPY3)
  2BEA  E7            		rst	CPHLDE
  2BEB  C9            		ret
                      	
                      	
                      	;check and round graphic coordinates (x,y)
                      	;input: bc=x, de=y
                      	;output: bc=x, de=y
                      	;destroy: af,hl
  2BEC                	CHKGXY:
  2BEC  CD9539        		call	CHKMOD
  2BEF  CA196C        		jp	z,CHKGXY66
  2BF2  78            		ld	a,b
  2BF3  B7            		or	a
  2BF4  2802          		jr	z,CHKMNS
  2BF6  0EFF          		ld	c,0ffh
  2BF8                	CHKMNS:
  2BF8  B2            		or	d
  2BF9  FACB03        		jp	m,FCERR
                      	
  2BFC  3A92FD        		ld	a,(SCREEN1)
  2BFF  47            		ld	b,a		;
  2C00  0F            		rrca
  2C01  2F            		cpl
  2C02  21A6FD        		ld	hl,CONSOL3
  2C05  A6            		and	(hl)
  2C06  0F            		rrca
  2C07  21BF00        		ld	hl,191
  2C0A  3003          		jr	nc,NOFKEY
  2C0C  21B300        		ld	hl,191-12
  2C0F                	NOFKEY:
  2C0F  E7            		rst	CPHLDE
  2C10  3001          		jr	nc,CHKYOK
  2C12  EB            		ex	de,hl
  2C13                	CHKYOK:
  2C13  78            		ld	a,b		;
  2C14  3D            		dec	a
  2C15  280D          		jr	z,ROUNDY2
  2C17  F2282C        		jp	p,ROUNDX	;screen mode 3,4
                      	
                      	;round off y for screen mode 1
  2C1A                	ROUNDY1:
  2C1A  CDBA3F        		call	DIV12
  2C1D  7B            		ld	a,e
  2C1E  87            		add	a,a		;*2
  2C1F  83            		add	a,e		;*3
  2C20  87            		add	a,a		;*6
  2C21  87            		add	a,a		;*12
  2C22  1803          		jr	ROUNDY2END
                      	
                      	;round off y for screen mode 2
  2C24                	ROUNDY2:
  2C24  7B            		ld	a,e
  2C25  E6FC          		and	0fch
  2C27                	ROUNDY2END:
  2C27  5F            		ld	e,a
                      	
  2C28                	ROUNDX:
  2C28  04            		inc	b		;
  2C29  3EF0          		ld	a,0f0h
  2C2B                	ROUNDXLP:
  2C2B  37            		scf
  2C2C  1F            		rra			;f8,fc,fe,ff
  2C2D  10FC          		djnz	ROUNDXLP
                      	
  2C2F  A1            		and	c
  2C30  4F            		ld	c,a		;b=0
  2C31  C9            		ret
                      	
                      	
                      	;screen mode 2
  2C32                	PSET2:
  2C32  C5            		push	bc		;X
  2C33  CD8E3F        		call	GXY2AD60
                      	
  2C36  3AACFE        		ld	a,(ATTDAT)
  2C39  5E            		ld	e,(hl)		;
  2C3A  B7            		or	a
  2C3B  2004          		jr	nz,PS2NZ1
  2C3D  CB73          		bit	6,e
  2C3F  2004          		jr	nz,PS2NZ2
  2C41                	PS2NZ1:
  2C41  CD5715        		call	GETSPA2NZ
  2C44  77            		ld	(hl),a
  2C45                	PS2NZ2:
  2C45  24            		inc	h
  2C46  24            		inc	h
  2C47  CB73          		bit	6,e		;
  2C49  2004          		jr	nz,PS2SEMI	;semi-graphic mode?
  2C4B  CD1216        		call	GETSP
  2C4E  77            		ld	(hl),a
                      	
  2C4F                	PS2SEMI:
  2C4F  C1            		pop	bc		;X
  2C50  CD6E2C        		call	MASK2
  2C53  47            		ld	b,a
                      	
  2C54  7E            		ld	a,(hl)
  2C55  E63F          		and	3fh
  2C57  B0            		or	b
  2C58  4F            		ld	c,a
                      	
  2C59  3AACFE        		ld	a,(ATTDAT)
  2C5C  B7            		or	a
  2C5D  2809          		jr	z,PSET2C0
  2C5F  3D            		dec	a
  2C60  E603          		and	03h
  2C62  0F            		rrca
  2C63  0F            		rrca
  2C64  81            		add	a,c
  2C65  77            		ld	(hl),a
  2C66  E1            		pop	hl
  2C67  C9            		ret
                      	
  2C68                	PSET2C0:
  2C68  78            		ld	a,b
  2C69  2F            		cpl
  2C6A  A6            		and	(hl)
  2C6B  77            		ld	(hl),a
  2C6C  E1            		pop	hl
  2C6D  C9            		ret
                      	
                      	
                      	;screen mode 2 dot bit mask
                      	;input: c=X, d=Y mod 12
                      	;output: a
                      	; bit5 bit4
                      	; bit3 bit2
                      	; bit1 bit0
                      	;destroy: f,bc
  2C6E                	MASK2:
  2C6E  79            		ld	a,c
  2C6F  2F            		cpl
  2C70  E604          		and	04h
  2C72  C604          		add	a,04h
  2C74  CB52          		bit	2,d
  2C76  C0            		ret	nz	;4<=d<=7
  2C77  CB5A          		bit	3,d
  2C79  2003          		jr	nz,MASK2NZ
  2C7B  07            		rlca
  2C7C  07            		rlca
  2C7D  C9            		ret		;0<=d<=3
  2C7E                	MASK2NZ:
  2C7E  0F            		rrca
  2C7F  0F            		rrca
  2C80  C9            		ret		;8<=d<=11
                      	
                      	
                      	;continued from BFG
  2C81                	BFG2:
  2C81  3AB1FE        		ld	a,(GRPX3)	;smaller x
  2C84  E6F8          		and	0f8h
  2C86  47            		ld	b,a
  2C87  3AADFE        		ld	a,(GRPX2)	;larger x
  2C8A  E6F8          		and	0f8h
  2C8C  90            		sub	b		;
  2C8D  0F            		rrca
  2C8E  0F            		rrca
  2C8F  0F            		rrca			;int(larger/8)-int(smaller/8)
  2C90  47            		ld	b,a		;bytes
  2C91  2003          		jr	nz,BFGLP3	;a=0?
  2C93  7A            		ld	a,d
  2C94  A3            		and	e
  2C95  57            		ld	d,a
                      	
  2C96                	BFGLP3:
                      	;left part
  2C96  C5            		push	bc
  2C97  3AACFE        		ld	a,(ATTDAT)
  2C9A  AE            		xor	(hl)
  2C9B  A2            		and	d		;d=left part mask
  2C9C  AE            		xor	(hl)
  2C9D  77            		ld	(hl),a
                      	
  2C9E  78            		ld	a,b
  2C9F  B7            		or	a
  2CA0  2811          		jr	z,BFGNEXT
                      	
                      	;middle part
  2CA2  E5            		push	hl		;VRAM address
  2CA3  3AACFE        		ld	a,(ATTDAT)
  2CA6  05            		dec	b
  2CA7  2804          		jr	z,BFGRGT
  2CA9                	BFGLP4:
  2CA9  23            		inc	hl
  2CAA  77            		ld	(hl),a
  2CAB  10FC          		djnz	BFGLP4
                      	
                      	;right part
  2CAD                	BFGRGT:
  2CAD  23            		inc	hl
  2CAE  AE            		xor	(hl)
  2CAF  A3            		and	e		;e=right part mask
  2CB0  AE            		xor	(hl)
  2CB1  77            		ld	(hl),a
  2CB2  E1            		pop	hl		;VRAM address
                      	
  2CB3                	BFGNEXT:
  2CB3  012000        		ld	bc,0020h
  2CB6  09            		add	hl,bc
  2CB7  C1            		pop	bc
  2CB8  0D            		dec	c
  2CB9  20DB          		jr	nz,BFGLP3
  2CBB  C3CA2E        		jp	LINEEND2
                      	
                      	
                      	;|dy/dx|<=1
  2CBE                	SLOPEX:
  2CBE  AF            		xor	a
  2CBF  95            		sub	l
  2CC0  6F            		ld	l,a
  2CC1  9C            		sbc	a,h
  2CC2  95            		sub	l
  2CC3  67            		ld	h,a
  2CC4  E5            		push	hl		;error=-|dx|
                      	
  2CC5                	LINELP2:
  2CC5  ED4BB1FE      		ld	bc,(GRPX3)
  2CC9  ED5BB3FE      		ld	de,(GRPY3)
  2CCD  CD472D        		call	PSET
                      	
  2CD0  E1            		pop	hl		;error
  2CD1  C1            		pop	bc		;dx
  2CD2  D1            		pop	de		;dy
  2CD3  D5            		push	de		;dy
  2CD4  C5            		push	bc		;dx
                      	
  2CD5  19            		add	hl,de		;error+=dy
  2CD6  19            		add	hl,de		;error+=dy
  2CD7  CB7C          		bit	7,h
  2CD9  2006          		jr	nz,ERRMNS
                      	
                      	;if error>=0
  2CDB  CD6D2B        		call	SUB2DX		;error-=|dx|*2
  2CDE  CD4E2B        		call	INCGY		;increment Y
                      	
  2CE1                	ERRMNS:
  2CE1  E5            		push	hl		;error
  2CE2  CD322B        		call	INCGX		;increment or decrement X
  2CE5  DAC52E        		jp	c,LINEEND
                      	
  2CE8  EB            		ex	de,hl		;de=X
  2CE9  2AADFE        		ld	hl,(GRPX2)
  2CEC  CB78          		bit	7,b
  2CEE  2801          		jr	z,LINEZ
  2CF0  EB            		ex	de,hl		;if dx<0
  2CF1                	LINEZ:
  2CF1  E7            		rst	CPHLDE
  2CF2  30D1          		jr	nc,LINELP2
  2CF4  C3C52E        		jp	LINEEND
                      	
                      	
                      	;get (step)(x,y) cordinate
                      	;input: hl=program address
                      	;output: bc=graphic X, de=graphic Y,
                      	;	 (GRPX1)=(GRPX2),(GRPY1)=(GRPY2)=0-32767
                      	;	 a=next data, hl=next data address, z(, or not)
                      	;destroy: f
  2CF7                	GETGXY:
  2CF7  CD603F        		call	SKIPSP
  2CFA  FEC9          		cp	STEP_
  2CFC  F5            		push	af		;STEP?
  2CFD  2001          		jr	nz,GETGXYNZ
  2CFF  23            		inc	hl
  2D00                	GETGXYNZ:
  2D00  CD820B        		call	CHKLPAR
  2D03  CD220E        		call	INTARG2		;bc,de
  2D06  CD910B        		call	CHKRPAR
  2D09  F1            		pop	af		;STEP?
  2D0A  CD132D        		call	SETGXY
  2D0D  CD603F        		call	SKIPSP
  2D10  FE2C          		cp	','
  2D12  C9            		ret
                      	
                      	
                      	;input: bc=x, de=y, z(0=absolute, 1=relative)
                      	;output: bc=x, de=y, (GRPX1)=(GRPX2)=x, (GRPY1)=(GRPY2)=y
                      	;destroy: f
  2D13                	_SETGXY:ds	SETGXY-_SETGXY
  2D13                		org	SETGXY
                      	
  2D13  E5            		push	hl
  2D14  200B          		jr	nz,SETGXYNZ
  2D16  2AAEFD        		ld	hl,(GRPX1)
  2D19  09            		add	hl,bc
  2D1A  44            		ld	b,h
  2D1B  4D            		ld	c,l
  2D1C  2AB0FD        		ld	hl,(GRPY1)
  2D1F  19            		add	hl,de
  2D20  EB            		ex	de,hl
  2D21                	SETGXYNZ:
  2D21  ED43AEFD      		ld	(GRPX1),bc
  2D25  ED43ADFE      		ld	(GRPX2),bc
  2D29  ED53B0FD      		ld	(GRPY1),de
  2D2D  ED53AFFE      		ld	(GRPY2),de
  2D31  E1            		pop	hl
  2D32  C9            		ret
                      	
                      	
                      	;PRESET command
  2D33                	C_PRST:
  2D33  3A94FD        		ld	a,(COLOR2)
  2D36  1803          		jr	PSETRST
                      	
                      	;PSET command
  2D38                	C_PSET:
  2D38  3A93FD        		ld	a,(COLOR1)
                      	
                      	;PSET and PRESET
  2D3B                	PSETRST:
  2D3B  CDC015        		call	SETATT
  2D3E  CDF72C        		call	GETGXY
  2D41  CC6C2D        		call	z,PSCOLR
                      	;	jp	PSET
                      	
                      	
                      	;input: bc=x1, de=y1, (ATTDAT)=attribute
                      	;destroy: af,bc,de
  2D44                	_PSET:	ds	PSET-_PSET
  2D47                		org	PSET
                      	
  2D47  E5            		push	hl
                      	;	call	CHKGXY
  2D48  CD9539        		call	CHKMOD
  2D4B  CAA16B        		jp	z,PSET66
  2D4E  3A92FD        		ld	a,(SCREEN1)
  2D51  3D            		dec	a
  2D52  CA322C        		jp	z,PSET2
  2D55  F2602D        		jp	p,PSETG
                      	
                      	
                      	;screen mode 1
  2D58                	PSET1:
  2D58  CD8E3F        		call	GXY2AD60
  2D5B  3AACFE        		ld	a,(ATTDAT)
  2D5E  1809          		jr	PSETEND
                      	
                      	
                      	;screen mode 3,4
  2D60                	PSETG:
  2D60  CD4514        		call	GXY2GAD60
  2D63  3AACFE        		ld	a,(ATTDAT)
  2D66  AE            		xor	(hl)
  2D67  A2            		and	d
  2D68  AE            		xor	(hl)
  2D69                	PSETEND:
  2D69  77            		ld	(hl),a
  2D6A  E1            		pop	hl
  2D6B  C9            		ret
                      	
                      	
  2D6C                	PSCOLR:
  2D6C  C5            		push	bc		;x
  2D6D  D5            		push	de		;y
  2D6E  CDE30D        		call	INT1INC
  2D71  D1            		pop	de		;y
  2D72  C1            		pop	bc		;x
  2D73  C3C015        		jp	SETATT
                      	
                      	
                      	;POINT() function
  2D76                	F_POIN:
  2D76  CDF72C        		call	GETGXY
  2D79  CD733E        		call	POINT
  2D7C  C3650C        		jp	I1TOFA
                      	
                      	
                      	;prepare for line command
  2D7F                	PRELINE:
  2D7F  CD603F        		call	SKIPSP
  2D82  FECB          		cp	MINUS_
  2D84  ED4BAEFD      		ld	bc,(GRPX1)
  2D88  ED5BB0FD      		ld	de,(GRPY1)
  2D8C  2808          		jr	z,LINE2P
                      	
  2D8E                	LINE1P:
  2D8E  CDF72C        		call	GETGXY
  2D91  FECB          		cp	MINUS_
  2D93  C2C203        		jp	nz,SNERR
                      	
  2D96                	LINE2P:
  2D96  C5            		push	bc		;x1
  2D97  D5            		push	de		;y1
                      	
  2D98  23            		inc	hl
  2D99  CDF72C        		call	GETGXY
  2D9C  ED43ADFE      		ld	(GRPX2),bc	;x2
  2DA0  ED53AFFE      		ld	(GRPY2),de	;y2
  2DA4  3A93FD        		ld	a,(COLOR1)
  2DA7  2011          		jr	nz,NOTBOX
  2DA9  5F            		ld	e,a
  2DAA  CD5F3F        		call	SKIPSPINC
  2DAD  FE2C          		cp	','
  2DAF  280C          		jr	z,CHKBF
                      	
                      	;color
  2DB1  CDE40D        		call	INT1ARG
  2DB4  7E            		ld	a,(hl)
  2DB5  FE2C          		cp	','
  2DB7  2804          		jr	z,CHKBF
  2DB9  7B            		ld	a,e
                      	
  2DBA                	NOTBOX:
  2DBA  B7            		or	a		;reset c-flag
  2DBB  1815          		jr	PRELEND
                      	
                      	;check 'B' and 'F'
  2DBD                	CHKBF:
  2DBD  CD5F3F        		call	SKIPSPINC
  2DC0  FE42          		cp	'B'
  2DC2  C2C203        		jp	nz,SNERR
                      	
  2DC5  CD5F3F        		call	SKIPSPINC
  2DC8  FE46          		cp	'F'
  2DCA  2001          		jr	nz,BOX
  2DCC  23            		inc	hl		;for box fill
  2DCD                	BOX:
  2DCD  224EFF        		ld	(PROGAD),hl
  2DD0  7B            		ld	a,e
  2DD1  37            		scf
                      	
  2DD2                	PRELEND:
  2DD2  D1            		pop	de		;y1
  2DD3  C1            		pop	bc		;x1
                      	
  2DD4  F5            		push	af
  2DD5  CDC015        		call	SETATT
  2DD8  F1            		pop	af
  2DD9  C9            		ret
                      	
                      	
                      	;LINE command
  2DDA                	C_LINE:
  2DDA  CD7F2D        		call	PRELINE
  2DDD  3040          		jr	nc,LINE
  2DDF  2054          		jr	nz,LINEB
                      	;	jr	LINEBF
                      	
                      	
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2, (ATTDAT)=attribute
                      	;destroy: af,bc,de
  2DE1                	_LINEBF:ds	LINEBF-_LINEBF
  2DE4                		org	LINEBF
                      	
  2DE4  E5            		push	hl
  2DE5  CDBE2B        		call	PUSHGXY
  2DE8  CDAF2B        		call	SORTXY2
                      	
  2DEB  3A92FD        		ld	a,(SCREEN1)
  2DEE  FE02          		cp	02h
  2DF0  3868          		jr	c,BF12
                      	
                      	;line bf (graphic mode)
  2DF2                	BFG:
  2DF2  3AADFE        		ld	a,(GRPX2)	;larger x
  2DF5  2001          		jr	nz,BF4
  2DF7  3C            		inc	a		;screen mode 3
  2DF8                	BF4:
  2DF8  E607          		and	07h
  2DFA  3C            		inc	a
  2DFB  47            		ld	b,a
  2DFC  AF            		xor	a
  2DFD                	BFGLP1:
  2DFD  37            		scf
  2DFE  1F            		rra			;right part mask
  2DFF  10FC          		djnz	BFGLP1
                      	
                      	;	or	a
  2E01  ED52          		sbc	hl,de
  2E03  2C            		inc	l
  2E04  E5            		push	hl		;l=lines
                      	
  2E05  6F            		ld	l,a		;right part mask
                      	
  2E06  79            		ld	a,c		;smaller x
  2E07  E607          		and	07h
  2E09  47            		ld	b,a
  2E0A  3EFF          		ld	a,0ffh
  2E0C  2804          		jr	z,BFGZ
  2E0E                	BFGLP2:
  2E0E  CB3F          		srl	a
  2E10  10FC          		djnz	BFGLP2
  2E12                	BFGZ:
  2E12  67            		ld	h,a		;left part mask
                      	
  2E13  E5            		push	hl
  2E14  CD4514        		call	GXY2GAD60	;b=0
  2E17  D1            		pop	de		;d=left part mask, e=right part mask
  2E18  C1            		pop	bc		;c=lines
                      	
  2E19  C3812C        		jp	BFG2
                      	
                      	
                      	;by Bresenham's line algorithm
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2, (ATTDAT)=attribute
                      	;destroy: af
  2E1C                	_LINE:	ds	LINE-_LINE
  2E1F                		org	LINE
                      	
  2E1F  E5            		push	hl
  2E20  CDBE2B        		call	PUSHGXY
  2E23  D5            		push	de
  2E24  C5            		push	bc
                      	
  2E25  CD922B        		call	SORTY
  2E28  ED4BB3FE      		ld	bc,(GRPY3)	;start (smaller y)
  2E2C  2AAFFE        		ld	hl,(GRPY2)	;end (larger y)
  2E2F  B7            		or	a
  2E30  ED42          		sbc	hl,bc		;dy
  2E32  1839          		jr	LINE2
                      	
                      	
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2, (ATTDAT)=attribute
                      	;destroy: af,bc,de
  2E34                	_LINEB:	ds	LINEB-_LINEB
  2E35                		org	LINEB
                      	
  2E35  E5            		push	hl
  2E36  CDBE2B        		call	PUSHGXY
  2E39  CDAF2B        		call	SORTXY2
  2E3C  EB            		ex	de,hl
                      	
                      	;down-up-right-left
  2E3D  C5            		push	bc
  2E3E  CD1F2E        		call	LINE
  2E41  22AFFE        		ld	(GRPY2),hl	;smaller y
  2E44  EB            		ex	de,hl
  2E45  CD1F2E        		call	LINE
  2E48  ED4BADFE      		ld	bc,(GRPX2)	;larger x
  2E4C  EB            		ex	de,hl		;larger y
  2E4D  CD1F2E        		call	LINE
  2E50  C1            		pop	bc		;smaller x
  2E51  ED43ADFE      		ld	(GRPX2),bc
  2E55  CD1F2E        		call	LINE
  2E58  1870          		jr	LINEEND2
                      	
                      	
                      	;line bf (screen mode 1,2)
  2E5A                	BF12:
  2E5A  ED53AFFE      		ld	(GRPY2),de
  2E5E  CD1F2E        		call	LINE
  2E61  E7            		rst	CPHLDE
  2E62  2866          		jr	z,LINEEND2
  2E64  ED53B3FE      		ld	(GRPY3),de
  2E68  CD4E2B        		call	INCGY
  2E6B  18ED          		jr	BF12
                      	
                      	
  2E6D                	LINE2:
  2E6D  CD9539        		call	CHKMOD
  2E70  3A92FD        		ld	a,(SCREEN1)
  2E73  CAF96B        		jp	z,LINE66
  2E76  0F            		rrca
  2E77  3801          		jr	c,SKIPY
                      	;screen mode 1 or 3: dy=dy*2
  2E79  29            		add	hl,hl
                      	
  2E7A                	SKIPY:
  2E7A  EB            		ex	de,hl
  2E7B  ED4BB1FE      		ld	bc,(GRPX3)	;start (x)
  2E7F  2AADFE        		ld	hl,(GRPX2)	;end (x)
  2E82  B7            		or	a
  2E83  ED42          		sbc	hl,bc		;dx
  2E85  B7            		or	a
  2E86  2004          		jr	nz,SKIPX
                      	;screen mode 1: dx=dx*3
  2E88  44            		ld	b,h
  2E89  4D            		ld	c,l
  2E8A  29            		add	hl,hl
  2E8B  09            		add	hl,bc
                      	
  2E8C                	SKIPX:
  2E8C  D5            		push	de		;dy
  2E8D  E5            		push	hl		;dx
                      	
  2E8E  CB7C          		bit	7,h
  2E90  2806          		jr	z,DXPLUS	;dx>0
                      	;if dx<0, hl=-hl
  2E92  AF            		xor	a
  2E93  95            		sub	l
  2E94  6F            		ld	l,a
  2E95  9C            		sbc	a,h
  2E96  95            		sub	l
  2E97  67            		ld	h,a
  2E98                	DXPLUS:
  2E98  E7            		rst	CPHLDE
  2E99  D2BE2C        		jp	nc,SLOPEX	;if |dy/dx|<=1
                      	
                      	;|dy/dx|>1
  2E9C  D5            		push	de		;error=dy
                      	
  2E9D  ED5BB3FE      		ld	de,(GRPY3)
  2EA1                	LINELP1:
  2EA1  ED4BB1FE      		ld	bc,(GRPX3)
  2EA5  CD472D        		call	PSET
                      	
  2EA8  E1            		pop	hl		;error
  2EA9  C1            		pop	bc		;dx
  2EAA  D1            		pop	de		;dy
  2EAB  D5            		push	de		;dy
  2EAC  C5            		push	bc		;dx
                      	
  2EAD  CD6D2B        		call	SUB2DX		;error-=|dx|*2
  2EB0  E5            		push	hl
  2EB1  CB7C          		bit	7,h
  2EB3  2807          		jr	z,ERRPLS
                      	
                      	;if error<0
  2EB5  E1            		pop	hl
  2EB6  19            		add	hl,de		;error+=dy
  2EB7  19            		add	hl,de		;error+=dy
  2EB8  E5            		push	hl		;error
  2EB9  CD322B        		call	INCGX		;increment or decrement X
                      	;	jr	c,LINEEND
                      	
  2EBC                	ERRPLS:
  2EBC  CD4E2B        		call	INCGY		;increment Y
  2EBF  2AAFFE        		ld	hl,(GRPY2)
  2EC2  E7            		rst	CPHLDE
  2EC3  30DC          		jr	nc,LINELP1
                      	
  2EC5                	LINEEND:
  2EC5  F1            		pop	af		;cancel error
  2EC6  F1            		pop	af		;cancel dx
  2EC7  F1            		pop	af		;cancel dy
                      	
  2EC8  C1            		pop	bc
  2EC9  D1            		pop	de
                      	
  2ECA                	LINEEND2:
  2ECA  E1            		pop	hl
  2ECB  22AFFE        		ld	(GRPY2),hl
  2ECE  E1            		pop	hl
  2ECF  22ADFE        		ld	(GRPX2),hl
  2ED2  E1            		pop	hl
  2ED3  C9            		ret
                      	
                      	
                      	;PAINT command
  2ED4                	C_PAIN:
  2ED4  CDF72C        		call	GETGXY
  2ED7  C5            		push	bc		;X
  2ED8  D5            		push	de		;Y
  2ED9  3A93FD        		ld	a,(COLOR1)
  2EDC  CCE30D        		call	z,INT1INC
  2EDF  CDC015        		call	SETATT
  2EE2  7E            		ld	a,(hl)
  2EE3  FE2C          		cp	','
  2EE5  3AC5FE        		ld	a,(BORDERA)
  2EE8  2006          		jr	nz,PANZ
  2EEA  CDE30D        		call	INT1INC
  2EED  32C6FE        		ld	(BORDERC),a
  2EF0                	PANZ:
  2EF0  5F            		ld	e,a
                      	;	jp	PAINT2
                      	
                      	
                      	;paint used by OKHOTSK
                      	;input: e=color code, (sp)=Y, (sp+2)=X
  2EF1                	_PAINT2:ds	PAINT2-_PAINT2
  2EF1                		org	PAINT2
                      	
  2EF1  7B            		ld	a,e
  2EF2  CDCF15        		call	CNVATT
  2EF5  32C5FE        		ld	(BORDERA),a
  2EF8  D1            		pop	de		;Y
  2EF9  C1            		pop	bc		;X
                      	
                      	
                      	;input: bc=x, de=y, (ATTDAT)=attribute, (BORDERA)=attribute, (BORDERC)=color
                      	;destroy: af,bc,de
  2EFA                	_PAINT:	ds	PAINT-_PAINT
  2EFA                		org	PAINT
                      	
  2EFA  3A92FD        		ld	a,(SCREEN1)
  2EFD  3D            		dec	a
  2EFE  C8            		ret	z		;screen mode 2
  2EFF  E5            		push	hl
  2F00  FA0B2F        		jp	m,PAINT1	;screen mode 1
  2F03  CD4514        		call	GXY2GAD60
  2F06                	PAMAIN:
  2F06  CD122F        		call	PADWN
  2F09  E1            		pop	hl
  2F0A  C9            		ret
                      	
  2F0B                	PAINT1:
  2F0B  CD8E3F        		call	GXY2AD60
  2F0E  16FF          		ld	d,0ffh
  2F10  18F4          		jr	PAMAIN
                      	
                      	
  2F12                	PADWN:
  2F12  CDC42F        		call	PALINE
  2F15  C8            		ret	z
  2F16  E5            		push	hl		;address
  2F17  D5            		push	de		;bit
  2F18  ED4BB5FE      		ld	bc,(PAWRK)
  2F1C  C5            		push	bc
  2F1D  CD812F        		call	PAUP2
  2F20  E1            		pop	hl
  2F21  22B5FE        		ld	(PAWRK),hl
  2F24  D1            		pop	de		;bit
  2F25  E1            		pop	hl		;address
                      	
  2F26                	PADWN2:
  2F26  3A92FD        		ld	a,(SCREEN1)
  2F29  B7            		or	a
  2F2A  1E19          		ld	e,19h
  2F2C  2002          		jr	nz,PADWNG
  2F2E  1E01          		ld	e,01h
  2F30                	PADWNG:
  2F30  7C            		ld	a,h
  2F31  E61F          		and	1fh
  2F33  BB            		cp	e
  2F34  3804          		jr	c,PADWNOK
  2F36  7D            		ld	a,l
  2F37  FEE0          		cp	0e0h
  2F39  D0            		ret	nc
  2F3A                	PADWNOK:
  2F3A  012000        		ld	bc,COLUMNS
  2F3D  09            		add	hl,bc
                      	
  2F3E  AF            		xor	a
  2F3F  32B7FE        		ld	(PACNT),a
  2F42                	PADWNLP1:
  2F42  CD1E30        		call	SRCHOK
  2F45  3812          		jr	c,CALLDWN
  2F47  E5            		push	hl		;address
  2F48  21B7FE        		ld	hl,PACNT
  2F4B  34            		inc	(hl)
  2F4C  D5            		push	de		;bit
  2F4D  CDE934        		call	CHKFRE
  2F50  D1            		pop	de
  2F51  E1            		pop	hl
  2F52  E5            		push	hl
  2F53  D5            		push	de
                      	
                      	;	ld	a,l
                      	;	inc	a
                      	;	and	1fh
                      	;	jr	nz,PADWNNZ
                      	;	bit	0,d
                      	;	jr	nz,CALLDWN
                      	;PADWNNZ:
                      	;	call	INCGXPA
                      	
  2F54  CD3730        		call	SRCHNG
  2F57  30E9          		jr	nc,PADWNLP1
                      	
  2F59                	CALLDWN:
  2F59  3AB7FE        		ld	a,(PACNT)
  2F5C  B7            		or	a
  2F5D  C8            		ret	z
  2F5E                	PADWNLP2:
  2F5E  D1            		pop	de		;bit
  2F5F  E1            		pop	hl		;address
  2F60  3D            		dec	a
  2F61  32B7FE        		ld	(PACNT),a
  2F64  28AC          		jr	z,PADWN
  2F66  F5            		push	af
  2F67  CD122F        		call	PADWN
  2F6A  F1            		pop	af
  2F6B  18F1          		jr	PADWNLP2
                      	
                      	
  2F6D                	PAUP:
  2F6D  CDC42F        		call	PALINE
  2F70  C8            		ret	z
  2F71  E5            		push	hl		;address
  2F72  D5            		push	de		;bit
  2F73  ED4BB5FE      		ld	bc,(PAWRK)
  2F77  C5            		push	bc
  2F78  CD262F        		call	PADWN2
  2F7B  E1            		pop	hl
  2F7C  22B5FE        		ld	(PAWRK),hl
  2F7F  D1            		pop	de		;bit
  2F80  E1            		pop	hl		;address
                      	
  2F81                	PAUP2:
                      	;if (hl - start address) < 0020h
  2F81  3A92FD        		ld	a,(SCREEN1)
  2F84  E602          		and	02h		;0(screen mode 1) or 2(screen mode 3,4)
  2F86  5F            		ld	e,a
  2F87  7C            		ld	a,h
  2F88  E61F          		and	1fh
  2F8A  BB            		cp	e
  2F8B  2004          		jr	nz,PAUPNZ1
  2F8D  7D            		ld	a,l
  2F8E  FE20          		cp	20h
  2F90  D8            		ret	c
  2F91                	PAUPNZ1:
  2F91  01E0FF        		ld	bc,0-COLUMNS
  2F94  09            		add	hl,bc
                      	
  2F95  AF            		xor	a
  2F96  32B7FE        		ld	(PACNT),a
  2F99                	PAUPLP1:
  2F99  CD1E30        		call	SRCHOK
  2F9C  3812          		jr	c,CALLUP
  2F9E  E5            		push	hl		;address
  2F9F  21B7FE        		ld	hl,PACNT
  2FA2  34            		inc	(hl)
  2FA3  D5            		push	de		;bit
  2FA4  CDE934        		call	CHKFRE
  2FA7  D1            		pop	de
  2FA8  E1            		pop	hl
  2FA9  E5            		push	hl
  2FAA  D5            		push	de
                      	
                      	;	ld	a,l
                      	;	inc	a
                      	;	and	1fh
                      	;	jr	nz,PAUPNZ2
                      	;	bit	0,d
                      	;	jr	nz,CALLUP
                      	;PAUPNZ2:
                      	;	call	INCGXPA
                      	
  2FAB  CD3730        		call	SRCHNG
  2FAE  30E9          		jr	nc,PAUPLP1
                      	
  2FB0                	CALLUP:
  2FB0  3AB7FE        		ld	a,(PACNT)
  2FB3  B7            		or	a
  2FB4  C8            		ret	z
  2FB5                	PAUPLP2:
  2FB5  D1            		pop	de		;bit
  2FB6  E1            		pop	hl		;address
  2FB7  3D            		dec	a
  2FB8  32B7FE        		ld	(PACNT),a
  2FBB  28B0          		jr	z,PAUP
  2FBD  F5            		push	af
  2FBE  CD6D2F        		call	PAUP
  2FC1  F1            		pop	af
  2FC2  18F1          		jr	PAUPLP2
                      	
                      	
                      	;paint 1 line
                      	;input: hl=address, d=bit
                      	;output: hl, d, z-flag(1=not painted)
                      	;destroy: af,bc
  2FC4                	PALINE:
  2FC4  CD4D27        		call	STOPESC
  2FC7  CD0F30        		call	CHKPA
  2FCA  C8            		ret	z
  2FCB  E5            		push	hl		;address
  2FCC  D5            		push	de		;bit
  2FCD  CDF42F        		call	PAINTR
  2FD0  7D            		ld	a,l
  2FD1  E61F          		and	1fh
  2FD3  6F            		ld	l,a
  2FD4  62            		ld	h,d
  2FD5  22B5FE        		ld	(PAWRK),hl	;X_right
  2FD8  D1            		pop	de		;bit
  2FD9  E1            		pop	hl		;address
                      	;	jr	PAINTL		;z-flag=0
                      	
                      	
                      	;paint to left direction
                      	;input: hl=address, d=bit
                      	;output: hl, d, z-flag=0
                      	;destroy: af,bc
  2FDA                	PAINTL:
  2FDA  7D            		ld	a,l
  2FDB  E61F          		and	1fh
  2FDD  2003          		jr	nz,PALOK
  2FDF  CB7A          		bit	7,d
  2FE1  C0            		ret	nz
                      	
  2FE2                	PALOK:
  2FE2  CD0530        		call	DECGXPA
  2FE5  CD0F30        		call	CHKPA
  2FE8  20F0          		jr	nz,PAINTL
                      	;	jp	INCGXPA
                      	
                      	
                      	;increment x for paint
                      	;input: hl=address, d=bit
                      	;output: hl, d, z-flag=0
                      	;destroy: af
  2FEA                	INCGXPA:
  2FEA  CB0A          		rrc	d
  2FEC  E2F12F        		jp	po,INCGXPA4	;screen mode 4
  2FEF  CB0A          		rrc	d		;screen mode 1 or 3
  2FF1                	INCGXPA4:
  2FF1  D0            		ret	nc
  2FF2  23            		inc	hl
  2FF3  C9            		ret
                      	
                      	
                      	;paint to right direction
                      	;input: hl=address, d=bit
                      	;output: hl,d
                      	;destroy: af,bc
  2FF4                	PAINTR:
  2FF4  7D            		ld	a,l
  2FF5  3C            		inc	a
  2FF6  E61F          		and	1fh
  2FF8  2003          		jr	nz,PAROK
  2FFA  CB42          		bit	0,d
  2FFC  C0            		ret	nz
                      	
  2FFD                	PAROK:
  2FFD  CDEA2F        		call	INCGXPA
  3000  CD0F30        		call	CHKPA
  3003  20EF          		jr	nz,PAINTR
                      	;	jp	DECGXPA
                      	
                      	
                      	;decrement x for paint
                      	;input: hl=address, d=bit
                      	;output: hl, d
                      	;destroy: af
  3005                	DECGXPA:
  3005  CB02          		rlc	d
  3007  E20C30        		jp	po,DECGXPA4	;screen mode 4
  300A  CB02          		rlc	d		;screen mode 1 or 3
  300C                	DECGXPA4:
  300C  D0            		ret	nc
  300D  2B            		dec	hl
  300E  C9            		ret
                      	
                      	
                      	;check and paint
                      	;input: hl=address, d=bit
                      	;output: z(1=not painted)
                      	;destroy: af
  300F                	CHKPA:
  300F  3AC5FE        		ld	a,(BORDERA)
  3012  AE            		xor	(hl)
  3013  A2            		and	d
  3014  C8            		ret	z
                      	
  3015  3AACFE        		ld	a,(ATTDAT)
  3018  AE            		xor	(hl)
  3019  A2            		and	d
  301A  AE            		xor	(hl)
  301B  77            		ld	(hl),a
  301C  B2            		or	d		;d>0, reset z-flag
  301D  C9            		ret
                      	
                      	
                      	;search for paintable area
                      	;input: hl=address, d=bit
                      	;output: hl, d, c-flag(1=over,0=OK)
                      	;destroy: af,e
  301E                	SRCHOK:
  301E  CD4930        		call	CMPPAX
  3021  D8            		ret	c
                      	
  3022  5E            		ld	e,(hl)
  3023  3AC5FE        		ld	a,(BORDERA)
  3026  AB            		xor	e
  3027  A2            		and	d
  3028  2806          		jr	z,SRCHOKZ
                      	
  302A  3AACFE        		ld	a,(ATTDAT)
  302D  AB            		xor	e
  302E  A2            		and	d
  302F  C0            		ret	nz		;c-flag=0
                      	
  3030                	SRCHOKZ:
  3030  CD5930        		call	GXLARGE
  3033  20E9          		jr	nz,SRCHOK
  3035  37            		scf
  3036  C9            		ret
                      	
                      	
                      	;search for unpaintable area
                      	;get unpaintable area
                      	;input: hl=address, d=bit
                      	;output: hl, d, c-flag(1=over,0=NG)
                      	;destroy: af,e
  3037                	SRCHNG:
  3037  CD4930        		call	CMPPAX
  303A  D8            		ret	c
                      	
  303B  5E            		ld	e,(hl)
  303C  3AC5FE        		ld	a,(BORDERA)
  303F  AB            		xor	e
  3040  A2            		and	d
  3041  C8            		ret	z		;c-flag=0
                      	
  3042  CD5930        		call	GXLARGE
  3045  20F0          		jr	nz,SRCHNG
  3047  37            		scf
  3048  C9            		ret
                      	
                      	
                      	;compare  X to (PAWRK)
                      	;input: hl=address, d=bit
                      	;output: f
                      	;destroy: af,e
  3049                	CMPPAX:
  3049  7D            		ld	a,l
  304A  E61F          		and	1fh
  304C  5F            		ld	e,a
  304D  3AB5FE        		ld	a,(PAWRK)	;address low (5 bits)
  3050  BB            		cp	e
  3051  C0            		ret	nz
                      	
  3052  3AB6FE        		ld	a,(PAWRK+1)	;bit
  3055  3D            		dec	a
  3056  BA            		cp	d
  3057  3F            		ccf
  3058  C9            		ret
                      	
                      	
                      	;increment x and compare graphic width (=320)
                      	;output: z-flag(1=over)
                      	;destroy: af
  3059                	GXLARGE:
  3059  CDEA2F        		call	INCGXPA
  305C  7D            		ld	a,l
  305D  E61F          		and	1fh
  305F  C0            		ret	nz
  3060  7A            		ld	a,d
  3061  2F            		cpl
  3062  E680          		and	80h
  3064  C9            		ret
                      	
                      	
                      	;STR$() function
  3065                	F_STR:
  3065  CD680B        		call	CHKNUM
  3068  CDAC3A        		call	FTOA
  306B  E5            		push	hl
  306C  010101        		ld	bc,0101h
  306F  AF            		xor	a
  3070  EDB1          		cpir
  3072  91            		sub	c
  3073  E1            		pop	hl
  3074  CD2326        		call	MAKESTR
  3077  C3C527        		jp	INKYEND
                      	
                      	
                      	;MODE key
                      	;destroy: af
  307A                	MODEKEY:
  307A  E5            		push	hl
  307B  D5            		push	de
  307C  C5            		push	bc
                      	
  307D  215AFA        		ld	hl,KEYFLG
  3080  CB5E          		bit	3,(hl)
  3082  2845          		jr	z,MODEEND
  3084  CB9E          		res	3,(hl)
                      	
  3086  2A5DFA        		ld	hl,(LINENUM)
  3089  7C            		ld	a,h
  308A  A5            		and	l
  308B  3C            		inc	a
  308C  203B          		jr	nz,MODEEND	;not direct command mode
                      	
  308E  CD8111        		call	CSROFF
                      	
  3091  21BC0D        		ld	hl,MODESTR
  3094  CDCF30        		call	PUTS
  3097  3A65FE        		ld	a,(MODE)
  309A  3C            		inc	a
  309B  CD7A39        		call	PUTI1
  309E  CD3927        		call	PUTNL
                      	
  30A1  3A8CFD        		ld	a,(PAGES)
  30A4  CD7A39        		call	PUTI1
  30A7  21C40D        		ld	hl,PAGESTR
  30AA  CDCF30        		call	PUTS
                      	
  30AD  3A65FE        		ld	a,(MODE)
  30B0  FE02          		cp	02h
  30B2  3812          		jr	c,SKPFILES
                      	
  30B4  3A75FE        		ld	a,(DRVBIT)
  30B7  B7            		or	a
  30B8  280C          		jr	z,SKPFILES
                      	
  30BA  3A31FB        		ld	a,(FILES)
  30BD  CD7A39        		call	PUTI1
  30C0  21CD0D        		ld	hl,FILESTR
  30C3  CDCF30        		call	PUTS
                      	
  30C6                	SKPFILES:
  30C6  CD7911        		call	CSRON
                      	
  30C9                	MODEEND:
  30C9  C1            		pop	bc
  30CA  D1            		pop	de
  30CB  E1            		pop	hl
  30CC  C9            		ret
                      	
                      	
                      	;put characters (skip first character) (used by LIZARD)
  30CD                	_PUTSINC:ds	PUTSINC-_PUTSINC
  30CE                		org	PUTSINC
                      	
  30CE  23            		inc	hl
                      	
                      	;put characters
                      	;input: hl,(DEVICE)=0:CRT, 1:printer, 2:RS-232C, 80h-ffh:CMT
                      	;destroy: af,hl,(bc,de,FAC1)
  30CF                	_PUTS:	ds	PUTS-_PUTS
  30CF                		org	PUTS
                      	
  30CF  7E            		ld	a,(hl)
  30D0  B7            		or	a
  30D1  C8            		ret	z
  30D2  FE22          		cp	22h		;double quotation mark
  30D4  C8            		ret	z
  30D5  CDC726        		call	PUTDEV
  30D8  18F4          		jr	PUTSINC
                      	
                      	
                      	;input: bc=candidate of string descriptor address
                      	;       hl=string descriptor address to be checked
                      	;	(GCWRK)=candidate of string data address to be comacted
                      	;	stack=string descriptor address pointing to same data (endmark=0000)
                      	;output: bc=string descriptor address to be compacted
                      	;	 (GCWRK)=string data address to be comacted
                      	;	 hl=next string descriptor address
                      	;	 stack=string descriptor address pointing to same data (endmark=0000)
                      	;destroy: af,de
  30DA                	GETSTR:
  30DA  E5            		push	hl
  30DB  7E            		ld	a,(hl)
  30DC  23            		inc	hl
  30DD  23            		inc	hl
  30DE  5E            		ld	e,(hl)
  30DF  23            		inc	hl
  30E0  56            		ld	d,(hl)
  30E1  23            		inc	hl
                      	
  30E2  B7            		or	a
  30E3  2852          		jr	z,GETNOSTR2	;length=0
                      	
  30E5  E5            		push	hl
  30E6  2A56FF        		ld	hl,(VARAD)
  30E9  E7            		rst	CPHLDE
  30EA  304A          		jr	nc,GETNOSTR	;in program area
  30EC  2A3DFF        		ld	hl,(STRAD)
  30EF  E7            		rst	CPHLDE
  30F0  3844          		jr	c,GETNOSTR	;in work area or have been compacted
  30F2  2A41FF        		ld	hl,(GCWRK)
  30F5  E7            		rst	CPHLDE
  30F6  E1            		pop	hl
  30F7  2811          		jr	z,GETSTRZ
  30F9  303C          		jr	nc,GETNOSTR2	;de < candidate
                      	
                      	;new candidate found
  30FB  ED5341FF      		ld	(GCWRK),de
  30FF  C1            		pop	bc
  3100  D1            		pop	de		;return address
                      	
  3101                	GETSTRLP:
  3101  F1            		pop	af		;pushed address? (a=higher byte)
  3102  F5            		push	af
  3103  D5            		push	de		;return address
  3104  B7            		or	a
  3105  C8            		ret	z		;no data
  3106  D1            		pop	de		;return address
  3107  F1            		pop	af		;cancel
  3108  18F7          		jr	GETSTRLP
                      	
  310A                	GETSTRZ:
  310A  F1            		pop	af
  310B  D1            		pop	de		;return address
  310C  F5            		push	af
  310D  D5            		push	de		;return address
  310E  C9            		ret
                      	
                      	
                      	;garbage collection
                      	;destroy: af,bc,de,hl
  310F                	_GC:	ds	GC-_GC
  310F                		org	GC
                      	
  310F  2A27FF        		ld	hl,(STREND)
  3112  223DFF        		ld	(STRAD),hl
                      	
                      	;	ld	hl,0000h
  3115  2600          		ld	h,00h		;higher byte
  3117                	GCLP1:
  3117  E5            		push	hl
  3118  2241FF        		ld	(GCWRK),hl
  311B  2A56FF        		ld	hl,(VARAD)
                      	
                      	;normal variable
  311E                	GCVAR:
  311E  ED5B58FF      		ld	de,(ARRAD)
  3122  E7            		rst	CPHLDE
  3123  3014          		jr	nc,GCARR
  3125  23            		inc	hl
  3126  7E            		ld	a,(hl)
  3127  07            		rlca
  3128  3806          		jr	c,GCVARS
  312A  110600        		ld	de,0006h
  312D  19            		add	hl,de
  312E  18EE          		jr	GCVAR
  3130                	GCVARS:
  3130  23            		inc	hl
  3131  CDDA30        		call	GETSTR
  3134  18E8          		jr	GCVAR
                      	
                      	
  3136                	GETNOSTR:
  3136  E1            		pop	hl
  3137                	GETNOSTR2:
  3137  F1            		pop	af	;cancel
  3138  C9            		ret
                      	
                      	
                      	;array variable
  3139                	GCARR:
  3139  ED5B5AFF      		ld	de,(FREEAD)
  313D  E7            		rst	CPHLDE
  313E  3029          		jr	nc,GCSDSC
  3140  23            		inc	hl
  3141  7E            		ld	a,(hl)
  3142  23            		inc	hl
  3143  5E            		ld	e,(hl)
  3144  23            		inc	hl
  3145  56            		ld	d,(hl)
  3146  23            		inc	hl
  3147  07            		rlca
  3148  3803          		jr	c,GCARRS
  314A  19            		add	hl,de
  314B  18EC          		jr	GCARR
                      	
  314D                	GCARRS:
  314D  EB            		ex	de,hl
  314E  19            		add	hl,de
  314F  EB            		ex	de,hl
  3150  D5            		push	de
  3151  5E            		ld	e,(hl)		;dimensions
  3152  1600          		ld	d,00h
  3154  23            		inc	hl
  3155  19            		add	hl,de
  3156  19            		add	hl,de
  3157                	GCARRLP:
  3157  D1            		pop	de
  3158  E7            		rst	CPHLDE
  3159  30DE          		jr	nc,GCARR
  315B  ED5350FF      		ld	(TMP),de
  315F  CDDA30        		call	GETSTR
  3162  ED5B50FF      		ld	de,(TMP)
  3166  D5            		push	de
  3167  18EE          		jr	GCARRLP
                      	
                      	;temporary string descriptor
  3169                	GCSDSC:
  3169  212DFF        		ld	hl,STRDSC1
  316C  CDDA30        		call	GETSTR
                      	;	ld	hl,STRDSC2
  316F  CDDA30        		call	GETSTR
                      	;	ld	hl,STRDSC3
  3172  CDDA30        		call	GETSTR
                      	;	ld	hl,STRDSC4
  3175  CDDA30        		call	GETSTR
                      	
  3178  2A41FF        		ld	hl,(GCWRK)
  317B  7C            		ld	a,h
                      	;	or	l
  317C  B7            		or	a		;higher byte
  317D  D1            		pop	de		;cancel
  317E  C8            		ret	z
  317F  D5            		push	de
                      	
                      	;compaction
                      	;input:	bc=string descriptor address
                      	;	hl=string data address to be comacted
                      	
  3180  0A            		ld	a,(bc)
  3181  C5            		push	bc		;
  3182  0600          		ld	b,00h
  3184  4F            		ld	c,a
  3185  09            		add	hl,bc
  3186  2B            		dec	hl
  3187  ED5B3DFF      		ld	de,(STRAD)
  318B  EDB8          		lddr
  318D  ED533DFF      		ld	(STRAD),de
  3191  13            		inc	de
                      	
  3192  E1            		pop	hl		;
  3193                	GCLP2:
  3193  23            		inc	hl
  3194  23            		inc	hl
  3195  73            		ld	(hl),e
  3196  23            		inc	hl
  3197  72            		ld	(hl),d
  3198  E1            		pop	hl
  3199  7C            		ld	a,h
                      	;	or	l
  319A  B7            		or	a		;higher byte
  319B  CA1731        		jp	z,GCLP1
  319E  18F3          		jr	GCLP2
                      	
                      	
                      	;LEN() function
  31A0                	F_LEN:
  31A0  CD740B        		call	CHKSTR
  31A3                	SETI1A:
  31A3  6F            		ld	l,a
  31A4                	SETI1:
  31A4  CD660C        		call	I1TOF
  31A7                	SETTYP0:
  31A7  AF            		xor	a
  31A8  3225FF        		ld	(ARGTYP),a	;0=numeric
  31AB  C9            		ret
                      	
                      	
                      	;ASC() function
  31AC                	F_ASC:
  31AC  CD9326        		call	STRARG2
  31AF  B7            		or	a
  31B0  CACB03        		jp	z,FCERR
  31B3  1A            		ld	a,(de)
  31B4  18ED          		jr	SETI1A
                      	
                      	
                      	;CHR$() function
  31B6                	F_CHR:
  31B6  CD680B        		call	CHKNUM
  31B9  CD4F07        		call	FTOI1
  31BC  43            		ld	b,e
  31BD  C3B027        		jp	INKYNZ
                      	
                      	
                      	;LEFT$() function
  31C0                	F_LEFT:
  31C0  CD9F26        		call	ARGSI1
  31C3  0E00          		ld	c,00h
  31C5  1824          		jr	MID
                      	
                      	
                      	;RIGHT$() function
  31C7                	F_RGT:
  31C7  CD9F26        		call	ARGSI1
  31CA  57            		ld	d,a		;
  31CB  93            		sub	e
  31CC  3001          		jr	nc,RGTNC
  31CE  AF            		xor	a
  31CF                	RGTNC:
  31CF  4F            		ld	c,a
  31D0  5A            		ld	e,d		;
  31D1  7A            		ld	a,d
  31D2  1817          		jr	MID
                      	
                      	
                      	;MID$() function
  31D4                	F_MID:
  31D4  CD9F26        		call	ARGSI1
  31D7  57            		ld	d,a		;length
  31D8  1D            		dec	e
  31D9  D5            		push	de		;d=length, e=2nd parameter-1
  31DA  1C            		inc	e
  31DB  CACB03        		jp	z,FCERR		;if 2nd parameter=0
                      	
  31DE  2A4EFF        		ld	hl,(PROGAD)
  31E1  1EFF          		ld	e,0ffh
  31E3  7E            		ld	a,(hl)
  31E4  FE2C          		cp	','
  31E6  CCBB26        		call	z,ARGI1
  31E9  C1            		pop	bc		;b=length, c=2nd parameter-1
  31EA  78            		ld	a,b
                      	
                      	;input: STRDSC1=string, a=string length, c=2nd parameter-1, e=3rd parameter
  31EB                	MID:
  31EB  91            		sub	c
  31EC  3001          		jr	nc,MIDNC
  31EE  AF            		xor	a
  31EF                	MIDNC:
  31EF  BB            		cp	e
  31F0  3801          		jr	c,MIDC
  31F2  7B            		ld	a,e
  31F3                	MIDC:
  31F3  47            		ld	b,a		;output length
  31F4  CD6626        		call	GCCHECK
  31F7  78            		ld	a,b		;output length
  31F8  2A2FFF        		ld	hl,(STRDSC1+2)
  31FB  0600          		ld	b,00h
  31FD  09            		add	hl,bc
  31FE  CD2326        		call	MAKESTR
  3201  2A4EFF        		ld	hl,(PROGAD)
  3204  CD910B        		call	CHKRPAR
  3207  C3C527        		jp	INKYEND
                      	
                      	
                      	;VAL() function
  320A                	F_VAL:
  320A  CD9326        		call	STRARG2
  320D  EB            		ex	de,hl
  320E  CD9B39        		call	ATOF
  3211  1894          		jr	SETTYP0
                      	
                      	
                      	;FRE() function
  3213                	F_FRE:
  3213  2125FF        		ld	hl,ARGTYP
  3216  7E            		ld	a,(hl)
  3217  B7            		or	a
  3218  2814          		jr	z,FRENUM
  321A  3D            		dec	a
  321B  C2C203        		jp	nz,SNERR
                      	;string
  321E  77            		ld	(hl),a		;=0
  321F  322DFF        		ld	(STRDSC1),a	;=0
  3222  CD0F31        		call	GC
  3225  2A3DFF        		ld	hl,(STRAD)
  3228  ED5B5BFA      		ld	de,(STACK)
  322C  1808          		jr	CALCFRE
                      	;numeric
  322E                	FRENUM:
  322E  21FAFF        		ld	hl,0-0006h	;for compatibility with N6X-BASIC
  3231  39            		add	hl,sp
  3232  ED5B5AFF      		ld	de,(FREEAD)
  3236                	CALCFRE:
  3236  B7            		or	a
  3237  ED52          		sbc	hl,de
  3239  C3680C        		jp	I2TOF
                      	
                      	
                      	;DIM command
  323C                	C_DIM:
  323C  CD7A33        		call	CHKVAR
                      	
  323F  7E            		ld	a,(hl)
  3240  FE28          		cp	'('
  3242  2045          		jr	nz,NOTARR
  3244  23            		inc	hl
                      	
  3245  E5            		push	hl		;program address
  3246  CD2834        		call	SRCHARR
  3249  D2DA03        		jp	nc,DDERR
  324C  CD7033        		call	SETARNM
  324F  E1            		pop	hl		;program address
  3250  D5            		push	de		;array address
  3251  CD2034        		call	VARSIZE
  3254  D5            		push	de		;array address
  3255  C5            		push	bc		;element bytes
                      	
  3256  48            		ld	c,b		;b=0
  3257                	DIMLP:
  3257  C5            		push	bc		;dimensions
  3258  CD190E        		call	INT2ARG
  325B  C1            		pop	bc		;dimensions
  325C  CB7A          		bit	7,d
  325E  C2CB03        		jp	nz,FCERR
  3261  0C            		inc	c
  3262  CAD103        		jp	z,OMERR		;over 255 dimensions
  3265  13            		inc	de		;+1
  3266  E1            		pop	hl		;element bytes
                      	
  3267  EB            		ex	de,hl
  3268  E3            		ex	(sp),hl		;push size, pop array address
  3269  EB            		ex	de,hl
                      	
  326A  D5            		push	de		;array address
  326B  E5            		push	hl		;element bytes
  326C  2A4EFF        		ld	hl,(PROGAD)
  326F  7E            		ld	a,(hl)
  3270  23            		inc	hl
  3271  FE2C          		cp	','
  3273  28E2          		jr	z,DIMLP
  3275  FE29          		cp	')'
  3277  C2C203        		jp	nz,SNERR
  327A  CD4434        		call	MAKEARR
                      	
  327D                	DIMNEXT:
  327D  2A4EFF        		ld	hl,(PROGAD)
  3280  2B            		dec	hl
  3281  D7            		rst	ANADAT
  3282  C8            		ret	z
  3283  23            		inc	hl
  3284  FE2C          		cp	','
  3286  C0            		ret	nz
  3287  18B3          		jr	C_DIM
                      	
  3289                	NOTARR:
  3289  224EFF        		ld	(PROGAD),hl
  328C  CDAC33        		call	SRCHVAR
  328F  DCD633        		call	c,MAKEVAR
  3292  18E9          		jr	DIMNEXT
                      	
                      	
                      	;get variable address
                      	;input: bc=variable name, hl=program address
                      	;output: de=variable address, (PROGAD)=next program address
                      	;destroy: FAC1,FAC2,af,de
  3294                	GETVAR:
  3294  C5            		push	bc
  3295  7E            		ld	a,(hl)
  3296  FE28          		cp	'('
  3298  280B          		jr	z,GETVARR
  329A  224EFF        		ld	(PROGAD),hl
  329D  CDAC33        		call	SRCHVAR
  32A0  DCD633        		call	c,MAKEVAR
  32A3  C1            		pop	bc
  32A4  C9            		ret
  32A5                	GETVARR:
  32A5  CDAA32        		call	GETARR
  32A8  C1            		pop	bc
  32A9  C9            		ret
                      	
                      	
                      	;get array address
                      	;input: bc=variable name, hl=program address of '('
                      	;output: de=array address
                      	;destroy: af,bc,hl
  32AA                	GETARR:
  32AA  23            		inc	hl
  32AB  224EFF        		ld	(PROGAD),hl
  32AE  C5            		push	bc		;variable name
  32AF  CD2834        		call	SRCHARR
  32B2  300F          		jr	nc,ARROK
                      	
  32B4  D5            		push	de		;array address
  32B5  2A4EFF        		ld	hl,(PROGAD)
  32B8  E5            		push	hl		;program address
  32B9  CD3E33        		call	DIMAUTO
  32BC  E1            		pop	hl		;program address
  32BD  224EFF        		ld	(PROGAD),hl
  32C0  D1            		pop	de		;array address
  32C1  13            		inc	de
  32C2  13            		inc	de
  32C3                	ARROK:
  32C3  EB            		ex	de,hl
  32C4  23            		inc	hl
  32C5  23            		inc	hl
  32C6  0600          		ld	b,00h
  32C8  4E            		ld	c,(hl)		;dimensions
  32C9  09            		add	hl,bc
  32CA  09            		add	hl,bc
  32CB  E5            		push	hl		;array address
  32CC  79            		ld	a,c
  32CD  08            		ex	af,af'		;dimensions
  32CE  F5            		push	af
  32CF  48            		ld	c,b		;=0
  32D0  C5            		push	bc		;pointer
  32D1  E5            		push	hl		;array address
  32D2  210100        		ld	hl,0001h
  32D5  2250FF        		ld	(TMP),hl	;multiplied sizes
                      	
  32D8                	GETALP:
  32D8  2A50FF        		ld	hl,(TMP)
  32DB  E5            		push	hl		;multiplied sizes
  32DC  2A4EFF        		ld	hl,(PROGAD)
  32DF  CD190E        		call	INT2ARG		;get suffix
  32E2  E1            		pop	hl		;multiplied sizes
  32E3  2250FF        		ld	(TMP),hl
  32E6  E1            		pop	hl		;array address
  32E7  D5            		push	de		;suffix
  32E8  56            		ld	d,(hl)		;de=size of each dimension
  32E9  2B            		dec	hl
  32EA  5E            		ld	e,(hl)
  32EB  2B            		dec	hl
  32EC  E3            		ex	(sp),hl		;push array address, pop suffix
  32ED  E7            		rst	CPHLDE
  32EE  D2D703        		jp	nc,BSERR
                      	
  32F1  D5            		push	de		;size
  32F2  ED5B50FF      		ld	de,(TMP)	;multiplied sizes
  32F6  CD6B24        		call	MULINT2		;hl = multiplied sizes * suffix
  32F9  C1            		pop	bc		;size
  32FA  EB            		ex	de,hl
  32FB  E1            		pop	hl		;array address
  32FC  E3            		ex	(sp),hl		;push array address, pop pointer
  32FD  19            		add	hl,de		;pointer += multiplied size * suffix
  32FE  E5            		push	hl		;pointer
  32FF  2A50FF        		ld	hl,(TMP)	;multiplied sizes
  3302  50            		ld	d,b		;size
  3303  59            		ld	e,c
  3304  CD6B24        		call	MULINT2		;hl = multiplied size * size
  3307  2250FF        		ld	(TMP),hl
  330A  E1            		pop	hl		;pointer
  330B  E3            		ex	(sp),hl		;push poniter, pop array address
  330C  E5            		push	hl		;array address
                      	
  330D  08            		ex	af,af'		;dimensions
  330E  3D            		dec	a
  330F  47            		ld	b,a
  3310  08            		ex	af,af'
  3311  2A4EFF        		ld	hl,(PROGAD)
  3314  7E            		ld	a,(hl)
  3315  FE2C          		cp	','
  3317  200A          		jr	nz,NOTCMM
  3319  23            		inc	hl
  331A  224EFF        		ld	(PROGAD),hl
  331D  04            		inc	b
                      	;	dec	b
                      	;	jr	nz,GETALP
  331E  10B8          		djnz	GETALP
  3320  C3D703        		jp	BSERR
                      	
  3323                	NOTCMM:
  3323  04            		inc	b
  3324  05            		dec	b
  3325  C2D703        		jp	nz,BSERR
  3328  CD910B        		call	CHKRPAR
                      	
  332B  D1            		pop	de		;array address
  332C  E1            		pop	hl		;pointer
  332D  F1            		pop	af
  332E  08            		ex	af,af'
  332F  D1            		pop	de		;array address
  3330  C1            		pop	bc		;variable name
  3331  79            		ld	a,c
  3332  44            		ld	b,h
  3333  4D            		ld	c,l
  3334  29            		add	hl,hl		;*2
  3335  29            		add	hl,hl		;*4
  3336  07            		rlca
  3337  3801          		jr	c,NCMMSTR
  3339  09            		add	hl,bc		;*5
  333A                	NCMMSTR:
  333A  19            		add	hl,de
  333B  23            		inc	hl
  333C  EB            		ex	de,hl
  333D  C9            		ret
                      	
                      	
  333E                	DIMAUTO:
  333E  CD7033        		call	SETARNM
  3341  D5            		push	de		;array address
  3342  CD2034        		call	VARSIZE
  3345  D5            		push	de		;array address
  3346  C5            		push	bc		;element bytes
                      	
  3347  2A4EFF        		ld	hl,(PROGAD)
  334A  48            		ld	c,b		;b=0
  334B                	AUTOLP1:
  334B  C5            		push	bc		;dimensions
  334C  CD190E        		call	INT2ARG		;de=size
                      	;	ld	a,d
                      	;	or	a
                      	;	jp	nz,BSERR
                      	;	ld	a,e
                      	;	ld	e,0bh		;de=10+1
                      	;	cp	e
                      	;	jp	nc,BSERR
                      	
  334F  110B00        		ld	de,000bh
                      	
  3352  C1            		pop	bc		;dimensions
  3353  0C            		inc	c
  3354  CB51          		bit	2,c
  3356  C2D703        		jp	nz,BSERR	;over 3 dimensions
                      	
  3359  EB            		ex	de,hl
  335A  D1            		pop	de		;element bytes
  335B  E3            		ex	(sp),hl		;push size, pop array address
  335C  E5            		push	hl		;array address
  335D  D5            		push	de		;element bytes
                      	
                      	
  335E  2A4EFF        		ld	hl,(PROGAD)
  3361  7E            		ld	a,(hl)
  3362  23            		inc	hl
  3363  FE2C          		cp	','
  3365  28E4          		jr	z,AUTOLP1
  3367  FE29          		cp	')'
  3369  C2C203        		jp	nz,SNERR
  336C  CD4434        		call	MAKEARR
  336F  C9            		ret
                      	
                      	
                      	;set array name
                      	;input: bc=name, de=array address
                      	;output: de=array address (next of name)
                      	;destroy: af,hl
  3370                	SETARNM:
  3370  EB            		ex	de,hl
  3371  CDEC34        		call	CHKSTK
  3374  70            		ld	(hl),b
  3375  23            		inc	hl
  3376  71            		ld	(hl),c
  3377  23            		inc	hl
  3378  EB            		ex	de,hl
  3379  C9            		ret
                      	
                      	
                      	;check variable name
                      	;input: hl=program address
                      	;output: bc=name, hl=next address
                      	;destroy: af
  337A                	CHKVAR:
  337A  7E            		ld	a,(hl)
  337B  23            		inc	hl
  337C  FE20          		cp	' '
  337E  28FA          		jr	z,CHKVAR
  3380  47            		ld	b,a
  3381  D641          		sub	'A'
  3383  FE1A          		cp	'Z'-'A'+1
  3385  D2C203        		jp	nc,SNERR
                      	;	call	GETNAME
                      	;	ret
                      	
                      	
                      	;get variable name
                      	;input: hl=2nd character address, b=1st character
                      	;output: bc=name, hl=next address
                      	;destroy: af
  3388                	GETNAME:
  3388  0E00          		ld	c,00h
  338A  2B            		dec	hl
  338B                	GETNMLP1:
  338B  23            		inc	hl
  338C  7E            		ld	a,(hl)
  338D  FE20          		cp	' '
  338F  28FA          		jr	z,GETNMLP1
  3391  FE24          		cp	'$'
  3393  2813          		jr	z,NAMESTR
  3395  CDA60B        		call	ALPNUM
  3398  D0            		ret	nc
  3399  4F            		ld	c,a
  339A                	GETNMLP2:
  339A  23            		inc	hl
  339B  7E            		ld	a,(hl)
  339C  FE20          		cp	' '
  339E  28FA          		jr	z,GETNMLP2
  33A0  CDA60B        		call	ALPNUM
  33A3  38F5          		jr	c,GETNMLP2
  33A5  FE24          		cp	'$'
  33A7  C0            		ret	nz
  33A8                	NAMESTR:
  33A8  23            		inc	hl
  33A9  CBF9          		set	7,c
  33AB  C9            		ret
                      	
                      	
                      	;search for variable
                      	;input: bc=variable name
                      	;output: de=variable address, c-flag(1=not found)
                      	;destroy: af,hl
  33AC                	SRCHVAR:
  33AC  2A5EFF        		ld	hl,(FNPAR)
  33AF  7D            		ld	a,l
  33B0  B8            		cp	b
  33B1  2006          		jr	nz,SRCHVMAIN
  33B3  7C            		ld	a,h
  33B4  B9            		cp	c
  33B5  1160FF        		ld	de,FNARG
  33B8  C8            		ret	z
                      	
  33B9                	SRCHVMAIN:
  33B9  ED5B56FF      		ld	de,(VARAD)
  33BD                	SRCHVLP:
  33BD  2A58FF        		ld	hl,(ARRAD)
  33C0  2B            		dec	hl
  33C1  E7            		rst	CPHLDE
  33C2  D8            		ret	c		;not found
  33C3  1A            		ld	a,(de)
  33C4  13            		inc	de
  33C5  B8            		cp	b		;
  33C6  1A            		ld	a,(de)
  33C7  13            		inc	de
  33C8  2002          		jr	nz,VARNEXT	;
  33CA  B9            		cp	c
  33CB  C8            		ret	z		;found
  33CC                	VARNEXT:
  33CC  07            		rlca			;c-flag=1 if string
  33CD  3F            		ccf
  33CE  210400        		ld	hl,6-2
  33D1  ED5A          		adc	hl,de
  33D3  EB            		ex	de,hl
  33D4  18E7          		jr	SRCHVLP
                      	
                      	
                      	;make variable
                      	;input: bc=variable name, de=variable address
                      	;output: de=de+2
                      	;destroy: af,bc,hl
  33D6                	MAKEVAR:
  33D6  C5            		push	bc		;variable name
  33D7  D5            		push	de		;variable address
                      	
  33D8  110600        		ld	de,0006h
  33DB  CB79          		bit	7,c
  33DD  2001          		jr	nz,MAKEVSTR	;numeric=7, string=6
  33DF  1C            		inc	e
  33E0                	MAKEVSTR:
  33E0  2A5AFF        		ld	hl,(FREEAD)
  33E3  ED4B58FF      		ld	bc,(ARRAD)
  33E7  B7            		or	a
  33E8  ED42          		sbc	hl,bc
  33EA  44            		ld	b,h
  33EB  4D            		ld	c,l
                      	
  33EC  2A5AFF        		ld	hl,(FREEAD)
                      	
  33EF  19            		add	hl,de
  33F0  D5            		push	de		;numeric=7, string=6
  33F1  CDEC34        		call	CHKSTK
  33F4  D1            		pop	de		;numeric=7, string=6
  33F5  225AFF        		ld	(FREEAD),hl
  33F8  2A58FF        		ld	hl,(ARRAD)
  33FB  19            		add	hl,de
  33FC  2258FF        		ld	(ARRAD),hl
                      	
  33FF  78            		ld	a,b
  3400  B1            		or	c
  3401  280B          		jr	z,NOLDDR
  3403  2A5AFF        		ld	hl,(FREEAD)
  3406  E5            		push	hl		;
                      	;	or	a
  3407  ED52          		sbc	hl,de
  3409  2B            		dec	hl
  340A  D1            		pop	de		;
  340B  1B            		dec	de
  340C  EDB8          		lddr
  340E                	NOLDDR:
  340E  E1            		pop	hl		;variable address
  340F  C1            		pop	bc		;variable name
  3410  70            		ld	(hl),b
  3411  23            		inc	hl
  3412  71            		ld	(hl),c
  3413  23            		inc	hl
  3414  E5            		push	hl		;variable address
                      	
  3415  EB            		ex	de,hl
  3416  21AB0E        		ld	hl,ZERO
  3419  CD2034        		call	VARSIZE
  341C  EDB0          		ldir
  341E  D1            		pop	de		;variable address
  341F  C9            		ret
                      	
                      	
                      	;get variable element size
                      	;input: bc=variable name
                      	;output: bc=5(numeric) or 4(string)
                      	;destroy: f
  3420                	VARSIZE:
  3420  CB79          		bit	7,c
  3422  010500        		ld	bc,0005h
  3425  C8            		ret	z
  3426  0D            		dec	c
  3427  C9            		ret
                      	
                      	
                      	;search for array variable
                      	;input: bc=variable name
                      	;output: de=array address, c-flag(1=not found)
                      	;destroy: af,hl
  3428                	SRCHARR:
  3428  ED5B58FF      		ld	de,(ARRAD)
  342C                	SRCHALP:
  342C  2A5AFF        		ld	hl,(FREEAD)
  342F  2B            		dec	hl
  3430  E7            		rst	CPHLDE
  3431  D8            		ret	c		;not found
  3432  1A            		ld	a,(de)
  3433  13            		inc	de
  3434  B8            		cp	b		;
  3435  1A            		ld	a,(de)
  3436  13            		inc	de
  3437  2002          		jr	nz,ARRNEXT	;
  3439  B9            		cp	c
  343A  C8            		ret	z		;found
  343B                	ARRNEXT:
  343B  EB            		ex	de,hl
  343C  5E            		ld	e,(hl)
  343D  23            		inc	hl
  343E  56            		ld	d,(hl)
  343F  23            		inc	hl
  3440  19            		add	hl,de
  3441  EB            		ex	de,hl
  3442  18E8          		jr	SRCHALP
                      	
                      	
                      	;make array
                      	;input: c=dimensions, hl=program address
                      	;pushed: size*[1,255], array address, element bytes
                      	;destroy:
  3444                	MAKEARR:
  3444  224EFF        		ld	(PROGAD),hl
  3447  E1            		pop	hl		;return address
  3448  2250FF        		ld	(TMP),hl
  344B  D1            		pop	de		;element bytes
  344C  E1            		pop	hl		;array address
  344D  23            		inc	hl
  344E  23            		inc	hl
  344F  71            		ld	(hl),c		;dimensions
  3450  23            		inc	hl
  3451  EB            		ex	de,hl
                      	
  3452  41            		ld	b,c
  3453                	MKALP:
  3453  E3            		ex	(sp),hl		;push element bytes, pop size
  3454  EB            		ex	de,hl
  3455  73            		ld	(hl),e
  3456  23            		inc	hl
  3457  72            		ld	(hl),d
  3458  23            		inc	hl
  3459  E3            		ex	(sp),hl		;push array address, pop element bytes
  345A  C5            		push	bc		;dimensions
  345B  CD6B24        		call	MULINT2		;element bytes *= each dimension size
  345E  C1            		pop	bc		;dimensions
  345F  7A            		ld	a,d
  3460  B3            		or	e
  3461  C2D703        		jp	nz,BSERR	;for compatibility with N60-BASIC
  3464  D1            		pop	de		;array address
  3465  10EC          		djnz	MKALP
                      	
  3467  E5            		push	hl		;element bytes
  3468  EB            		ex	de,hl
  3469  60            		ld	h,b
  346A  69            		ld	l,c
  346B  29            		add	hl,hl
  346C  23            		inc	hl
  346D  19            		add	hl,de
  346E  DAD103        		jp	c,OMERR
                      	
  3471  E5            		push	hl		;dimensions*2 + element bytes + 1
  3472  ED5B5AFF      		ld	de,(FREEAD)
  3476  13            		inc	de		;+2(total bytes)
  3477  13            		inc	de
  3478  13            		inc	de		;+2(name)
  3479  13            		inc	de
  347A  19            		add	hl,de
  347B  DAD103        		jp	c,OMERR
  347E  CDEC34        		call	CHKSTK
  3481  225AFF        		ld	(FREEAD),hl
                      	
  3484  79            		ld	a,c		;dimensions
  3485  D1            		pop	de		;dimensions*2 + element bytes + 1
  3486  E1            		pop	hl		;element bytes
  3487  E3            		ex	(sp),hl		;push element bytes, pop array address
                      	
  3488  73            		ld	(hl),e
  3489  23            		inc	hl
  348A  72            		ld	(hl),d
  348B  23            		inc	hl
  348C  23            		inc	hl
  348D  09            		add	hl,bc
  348E  09            		add	hl,bc
                      	
  348F  70            		ld	(hl),b		;b=0
  3490  54            		ld	d,h
  3491  5D            		ld	e,l
  3492  13            		inc	de
  3493  C1            		pop	bc		;element bytes
  3494  0B            		dec	bc
  3495  EDB0          		ldir
  3497  2A50FF        		ld	hl,(TMP)	;return address
  349A  E9            		jp	(hl)
                      	
                      	
                      	;put into variable
                      	;input: bc=variable name, hl=program address, de=variable address
                      	;output: hl=next program address
                      	;destroy: FAC1,FAC2,af,bc,de
  349B                	VARIN:
  349B  CD603F        		call	SKIPSP
  349E  FED2          		cp	EQ_		;0d2h
  34A0  C2C203        		jp	nz,SNERR
                      	
  34A3  D5            		push	de		;variable address
  34A4  23            		inc	hl
  34A5  CB79          		bit	7,c
  34A7  2814          		jr	z,VARNUM
                      	
                      	;string
  34A9  CD8A26        		call	STRARG
  34AC  47            		ld	b,a
  34AD  7A            		ld	a,d
  34AE  FEFA          		cp	0fah		;fa00h=work area start address
  34B0  78            		ld	a,b
  34B1  EB            		ex	de,hl
  34B2  D42326        		call	nc,MAKESTR
  34B5  212DFF        		ld	hl,STRDSC1
  34B8  010400        		ld	bc,0004h
  34BB  1809          		jr	VARINOK
                      	
  34BD                	VARNUM:
  34BD  CD5F0B        		call	NARGMO
  34C0  2166FF        		ld	hl,FAC1
  34C3  010500        		ld	bc,0005h
  34C6                	VARINOK:
  34C6  D1            		pop	de		;variable address
  34C7  EDB0          		ldir
  34C9  2A4EFF        		ld	hl,(PROGAD)
  34CC  C9            		ret
                      	
                      	
                      	;NEW command
  34CD                	C_NEW:
  34CD  CD673F        		call	CHKCLN
  34D0  C2C203        		jp	nz,SNERR
  34D3  214204        		ld	hl,EDIT
  34D6  E5            		push	hl
                      	
  34D7                	NEWRESSTK:
                      	;destroy: af,bc,de,hl
  34D7  21F934        		ld	hl,RESSTK
  34DA  E5            		push	hl
                      	;	jp	NEW
                      	
                      	;destroy: af,hl
  34DB                	NEW:
  34DB  2A29FF        		ld	hl,(BASICAD)
  34DE  AF            		xor	a
  34DF  77            		ld	(hl),a
  34E0  23            		inc	hl
  34E1  77            		ld	(hl),a
  34E2  23            		inc	hl
  34E3  77            		ld	(hl),a
  34E4  23            		inc	hl
  34E5  2256FF        		ld	(VARAD),hl
  34E8  C9            		ret
                      	
                      	
                      	;check free size
                      	;output: de=free size
                      	;destroy: f,hl
  34E9                	CHKFRE:
  34E9  2A5AFF        		ld	hl,(FREEAD)
                      	
                      	;check stack size
                      	;hl <= stack - 003bh?
                      	;input: hl=address
                      	;output: de=free size
                      	;destroy: f
  34EC                	CHKSTK:
  34EC  EB            		ex	de,hl
  34ED  21C6FF        		ld	hl,0-003bh+1
  34F0  39            		add	hl,sp
  34F1  ED52          		sbc	hl,de		;c-flag=1
  34F3  DAD103        		jp	c,OMERR
  34F6  EB            		ex	de,hl
  34F7  C9            		ret
                      	
                      	
                      	;reset stack and variables
                      	;destroy: af,bc,de,hl
  34F8                	_RESSTK:ds	RESSTK-_RESSTK
  34F9                		org	RESSTK
                      	
  34F9  C1            		pop	bc		;return address
  34FA  ED7B5BFA      		ld	sp,(STACK)
  34FE  C5            		push	bc		;return address
  34FF  3EFF          		ld	a,0ffh
  3501  3255FF        		ld	(STOPAD+1),a
  3504  2A56FF        		ld	hl,(VARAD)
  3507  2258FF        		ld	(ARRAD),hl
  350A  225AFF        		ld	(FREEAD),hl
  350D  CDC9FF        		call	HOOKRES
  3510                	RSTRZ:
  3510  2A29FF        		ld	hl,(BASICAD)
  3513  225CFF        		ld	(DATAAD),hl
  3516  C9            		ret
                      	
                      	
                      	;RESTORE command
  3517                	C_RSTR:
  3517  CD673F        		call	CHKCLN
  351A  224EFF        		ld	(PROGAD),hl
  351D  28F1          		jr	z,RSTRZ
  351F  CD6B07        		call	GETLN
  3522  224EFF        		ld	(PROGAD),hl
  3525  CDFA04        		call	SRCHLN
  3528  D2D403        		jp	nc,ULERR
  352B  ED435CFF      		ld	(DATAAD),bc
  352F  C9            		ret
                      	
                      	
                      	;STOP command
  3530                	C_STOP:
  3530  CD673F        		call	CHKCLN
  3533  C2C203        		jp	nz,SNERR
  3536  F1            		pop	af		;cancel return address
                      	
  3537                	STOP1:
  3537  7C            		ld	a,h
  3538  FEFA          		cp	0fah
  353A  300F          		jr	nc,STOPNC
  353C                	STOP2:
  353C  2254FF        		ld	(STOPAD),hl
  353F                	STOP3:
  353F  2A8FFD        		ld	hl,(SCREEN2)	;l=(SCREEN2),h=(SCREEN3)
  3542  225EFE        		ld	(STOPSC2),hl	;(STOPSC2)=l,(STOPSC3)=h
  3545  2A5DFA        		ld	hl,(LINENUM)
  3548  2252FF        		ld	(STOPLN),hl
  354B                	STOPNC:
  354B  FB            		ei
  354C  AF            		xor	a
  354D  3218FA        		ld	(STOPFLG),a
                      	
  3550  CD6109        		call	PRTNLX
  3553  CD6D13        		call	CHGTXT
  3556  215F35        		ld	hl,BREAK
  3559  CDCF30        		call	PUTS
  355C  C33604        		jp	PRTLNUM
                      	
  355F                	BREAK:
  355F  07427265616B00		db	07h, "Break", 00h
                      	
                      	
                      	;END command
  3566                	C_END:
  3566  F1            		pop	af		;cancel stack
  3567  C34204        		jp	EDIT
                      	
                      	
                      	;CONT command
  356A                	C_CONT:
  356A  F1            		pop	af		;cancel return address
                      	
  356B  7C            		ld	a,h
  356C  FEFA          		cp	0fah
  356E  DAEF03        		jp	c,CNERR
                      	
  3571  2A54FF        		ld	hl,(STOPAD)
  3574  7C            		ld	a,h
  3575  FEFA          		cp	0fah
  3577  D24204        		jp	nc,EDIT		;if direct command mode
                      	
  357A  9F            		sbc	a,a		;c-flag=1
  357B  3255FF        		ld	(STOPAD+1),a	;a=ffh
                      	
  357E  EB            		ex	de,hl
  357F  2A52FF        		ld	hl,(STOPLN)
  3582  225DFA        		ld	(LINENUM),hl
  3585  2A5EFE        		ld	hl,(STOPSC2)	;l=(STOPSC2),h=(STOPSC3)
  3588  7D            		ld	a,l
  3589  CD0C14        		call	CHGACT
  358C  7C            		ld	a,h
  358D  CDED13        		call	CHGDSP
  3590  EB            		ex	de,hl
                      	
  3591  C30A07        		jp	INTPRT
                      	
                      	
                      	;CLEAR command
  3594                	C_CLR:
  3594  CD673F        		call	CHKCLN
  3597  CAF934        		jp	z,RESSTK
  359A  CD190E        		call	INT2ARG
  359D  CB7A          		bit	7,d
  359F  C2CB03        		jp	nz,FCERR
  35A2  D5            		push	de		;1st parameter
  35A3  ED5B27FF      		ld	de,(STREND)
  35A7  7E            		ld	a,(hl)
  35A8  FE2C          		cp	','
  35AA  2007          		jr	nz,CLRNZ
  35AC  CD5E0B        		call	NARGMOINC
  35AF  CDBD0C        		call	FTOI
  35B2  1B            		dec	de
                      	
  35B3                	CLRNZ:
  35B3  2A8DFD        		ld	hl,(USREND)
  35B6  E7            		rst	CPHLDE
  35B7  DACB03        		jp	c,FCERR
  35BA  EB            		ex	de,hl
  35BB  C1            		pop	bc		;1st parameter
                      	
                      	;input: bc=1st parameter, hl=2nd parameter-1
  35BC                	CLRMAIN:
  35BC  E5            		push	hl		;2nd parameter-1
  35BD  B7            		or	a
  35BE  ED42          		sbc	hl,bc
                      	;	jp	c,OMERR
  35C0  380A          		jr	c,CLRC
  35C2  EB            		ex	de,hl
  35C3  2A56FF        		ld	hl,(VARAD)
  35C6  013800        		ld	bc,0038h
  35C9  09            		add	hl,bc
  35CA  EB            		ex	de,hl
  35CB  E7            		rst	CPHLDE
  35CC                	CLRC:
  35CC  DAD103        		jp	c,OMERR
  35CF  225BFA        		ld	(STACK),hl
  35D2  E1            		pop	hl		;2nd parameter-1
  35D3  2227FF        		ld	(STREND),hl
  35D6  223DFF        		ld	(STRAD),hl
  35D9  C3F934        		jp	RESSTK
                      	
                      	
                      	;NEXT command
  35DC                	C_NEXT:
  35DC  F1            		pop	af		;cancel return address
  35DD  0600          		ld	b,00h
  35DF                	NEXTLP:
  35DF  CD673F        		call	CHKCLN
  35E2  C47A33        		call	nz,CHKVAR
  35E5  224EFF        		ld	(PROGAD),hl
                      	
  35E8                	NEXTVLP:
  35E8  CDCE07        		call	SRCHSTK
  35EB  CABF03        		jp	z,NFERR		;not found or gosub identifier found
  35EE  33            		inc	sp		;identifier
                      	
  35EF  D1            		pop	de		;variable address
                      	
  35F0  78            		ld	a,b
  35F1  B7            		or	a
  35F2  2813          		jr	z,NEXTOK
                      	
  35F4  1B            		dec	de
  35F5  1A            		ld	a,(de)
  35F6  B9            		cp	c
  35F7  2007          		jr	nz,NEXTNZ
  35F9  1B            		dec	de
  35FA  1A            		ld	a,(de)
  35FB  13            		inc	de
  35FC  13            		inc	de
  35FD  B8            		cp	b
  35FE  2807          		jr	z,NEXTOK
  3600                	NEXTNZ:
  3600  211000        		ld	hl,0010h	;STEP(6)+TO(6)+line number(2)+program address(2)
  3603  39            		add	hl,sp
  3604  F9            		ld	sp,hl
  3605  18E1          		jr	NEXTVLP
                      	
  3607                	NEXTOK:
  3607  CD3D39        		call	POPF1		;STEP value
  360A  CD1F39        		call	PUSHF1		;STEP value
                      	
  360D  D5            		push	de		;variable address
  360E  EB            		ex	de,hl
  360F  CD8036        		call	SETADDF
  3612  D1            		pop	de		;variable address
  3613  D5            		push	de		;variable address
  3614  2166FF        		ld	hl,FAC1
  3617  CD300C        		call	SETF
                      	
  361A  D1            		pop	de		;variable address
                      	
  361B  CD4C39        		call	POPF2		;STEP value
  361E  CD3D39        		call	POPF1		;TO value
  3621  CD1F39        		call	PUSHF1		;TO value
  3624  CD2E39        		call	PUSHF2		;STEP value
                      	
  3627  D5            		push	de		;variable address
                      	
  3628  2A70FF        		ld	hl,(FAC2+3)
  362B  7C            		ld	a,h
  362C  B7            		or	a		;z-flag
  362D  7D            		ld	a,l
  362E  07            		rlca			;c-flag
  362F  EB            		ex	de,hl		;variable address
  3630  CD360C        		call	SETF2		;no change in z,c-flag
  3633  2822          		jr	z,STEP0		;if STEP value = 0
  3635  DC6E39        		call	c,EXFAC		;if STEP value < 0
  3638  CD223F        		call	CMPF
  363B  381F          		jr	c,NEXTEND	;for-next loop end
                      	
  363D                	NEXTCONT:
  363D  210E00        		ld	hl,000eh	;variable address(2)+STEP(6)+TO(6)
  3640  39            		add	hl,sp
  3641  5E            		ld	e,(hl)
  3642  23            		inc	hl
  3643  56            		ld	d,(hl)
  3644  ED535DFA      		ld	(LINENUM),de
  3648  23            		inc	hl
  3649  5E            		ld	e,(hl)
  364A  23            		inc	hl
  364B  56            		ld	d,(hl)
  364C  ED534EFF      		ld	(PROGAD),de
  3650  3E81          		ld	a,FOR_
  3652  F5            		push	af		;identifier
  3653  33            		inc	sp
  3654  C3E706        		jp	INTPEND
                      	
  3657                	STEP0:
  3657  CD223F        		call	CMPF
  365A  20E1          		jr	nz,NEXTCONT
                      	
  365C                	NEXTEND:
  365C  211200        		ld	hl,0012h	;variable address(2)+STEP(6)+TO(6)+line number(2)+program address(2)
  365F  39            		add	hl,sp
  3660  F9            		ld	sp,hl
                      	
  3661  2A4EFF        		ld	hl,(PROGAD)
  3664  7E            		ld	a,(hl)
  3665  23            		inc	hl
  3666  FE2C          		cp	','
  3668  C2E706        		jp	nz,INTPEND
  366B  47            		ld	b,a		;not variable name
  366C  C3DF35        		jp	NEXTLP
                      	
                      	
                      	;+ operator
  366F                	O_PLS:
  366F  3A25FF        		ld	a,(ARGTYP)
  3672  B7            		or	a
  3673  281A          		jr	z,ADDF
                      	
  3675                	PLSSTR:
  3675  D603          		sub	03h		;string and string
  3677  CA2C26        		jp	z,ADDSTR
  367A  C3E303        		jp	TMERR
                      	
                      	
                      	;FAC1=FAC1+1
                      	;destroy: FAC2,af,bc,de,hl
  367D                	INCF1:
  367D  21A10E        		ld	hl,PLSONE
                      	
                      	;set FAC2 and add
                      	;input: FAC1, hl=float address
  3680                	SETADDF:
  3680  CD360C        		call	SETF2
  3683  180A          		jr	ADDF
                      	
                      	
                      	;- operator
  3685                	O_MNS:
  3685  CD680B        		call	CHKNUM
                      	;	call	SUBF
                      	;	ret
                      	
                      	
                      	;FAC1 = FAC1 - FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1
                      	;destroy: FAC2,af,b,de,hl
  3688                	SUBF:
  3688  2170FF        		ld	hl,FAC2+3
  368B                	CHGSGNADD:
  368B  7E            		ld	a,(hl)
  368C  EE80          		xor	80h
  368E  77            		ld	(hl),a
                      	;	call	ADDF
                      	;	ret
                      	
                      	
                      	;FAC1 = FAC1 + FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  368F                	ADDF:
  368F  2A70FF        		ld	hl,(FAC2+3)	;l=(FAC2+3),h=(FAC2+4)
  3692  7C            		ld	a,h
  3693  B7            		or	a
  3694  C8            		ret	z		;FAC2=0
                      	
  3695  E5            		push	hl
  3696  CBFD          		set	7,l
  3698  2270FF        		ld	(FAC2+3),hl
                      	
  369B  2A69FF        		ld	hl,(FAC1+3)	;l=(FAC1+3),h=(FAC1+4)
  369E  E5            		push	hl
  369F  CBFD          		set	7,l
  36A1  2269FF        		ld	(FAC1+3),hl
                      	
  36A4  94            		sub	h
  36A5  3814          		jr	c,ADD1GT2	;|FAC1| > |FAC2|
  36A7  2005          		jr	nz,ADD1LT2	;|FAC1| < |FAC2|
                      	
  36A9  CD223F        		call	CMPF
  36AC  380D          		jr	c,ADD1GT2	;|FAC1| > |FAC2|
                      	
  36AE                	ADD1LT2:
  36AE  CD6E39        		call	EXFAC
                      	
  36B1  D1            		pop	de		;e=(FAC1+3),d=(FAC1+4)
  36B2  E1            		pop	hl		;l=(FAC2+3),h=(FAC2+4)
                      	
  36B3  7A            		ld	a,d
  36B4  B7            		or	a
  36B5  2006          		jr	nz,ADDCHKSGN
  36B7  2269FF        		ld	(FAC1+3),hl
  36BA  C9            		ret
                      	
  36BB                	ADD1GT2:
  36BB  E1            		pop	hl		;l=(FAC1+3),h=(FAC1+4)
  36BC  D1            		pop	de		;e=(FAC2+3),d=(FAC2+4)
                      	
  36BD                	ADDCHKSGN:
  36BD  7C            		ld	a,h
  36BE  92            		sub	d
  36BF  47            		ld	b,a		;
                      	
  36C0  7D            		ld	a,l
  36C1  F5            		push	af		;sign
                      	
  36C2  AB            		xor	e
  36C3  07            		rlca
  36C4  F5            		push	af		;c-flag=0:same sign
  36C5  3009          		jr	nc,SAMESGN
                      	
  36C7  CD6E39        		call	EXFAC
  36CA  CDEA24        		call	NEGINT4
  36CD  CD6E39        		call	EXFAC
                      	
  36D0                	SAMESGN:
  36D0  0E00          		ld	c,00h		;guard/round/sticky bit
  36D2  2A6DFF        		ld	hl,(FAC2)
  36D5  ED5B6FFF      		ld	de,(FAC2+2)
                      	
  36D9                	ADDFLP1:
  36D9  78            		ld	a,b
  36DA  D608          		sub	08h
  36DC  3818          		jr	c,EXPLT8
  36DE  47            		ld	b,a
                      	
  36DF  7D            		ld	a,l
  36E0  E63F          		and	3fh
  36E2  2004          		jr	nz,SETSBIT
  36E4  0C            		inc	c
  36E5  0D            		dec	c
  36E6  2802          		jr	z,NOSBIT
  36E8                	SETSBIT:
  36E8  0E20          		ld	c,20h		;set sticky bit
  36EA                	NOSBIT:
  36EA  AD            		xor	l
  36EB  B1            		or	c
  36EC  4F            		ld	c,a
  36ED  6C            		ld	l,h
  36EE  63            		ld	h,e
  36EF  5A            		ld	e,d
  36F0  F1            		pop	af		;same sign?
  36F1  F5            		push	af
  36F2  9F            		sbc	a,a		;00h or ffh
  36F3  57            		ld	d,a
  36F4  18E3          		jr	ADDFLP1
                      	
  36F6                	EXPLT8:
  36F6  C608          		add	a,08h
  36F8  2813          		jr	z,SAMEEXP
                      	
  36FA                	ADDFLP2:
  36FA  F1            		pop	af		;same sign?
  36FB  F5            		push	af
  36FC  CB1A          		rr	d
  36FE  CB1B          		rr	e
  3700  CB1C          		rr	h
  3702  CB1D          		rr	l
                      	
  3704  79            		ld	a,c
  3705  CB19          		rr	c
  3707  E620          		and	20h		;sticky bit
  3709  B1            		or	c
                      	;	and	0e0h
  370A  4F            		ld	c,a
  370B  10ED          		djnz	ADDFLP2
                      	
  370D                	SAMEEXP:
  370D  226DFF        		ld	(FAC2),hl
  3710  ED536FFF      		ld	(FAC2+2),de
                      	
  3714  EB            		ex	de,hl
                      	
  3715  2A66FF        		ld	hl,(FAC1)
                      	;	ld	de,(FAC2)
  3718  19            		add	hl,de
  3719  2266FF        		ld	(FAC1),hl
  371C  2A68FF        		ld	hl,(FAC1+2)
  371F  ED5B6FFF      		ld	de,(FAC2+2)
  3723  ED5A          		adc	hl,de
  3725  2268FF        		ld	(FAC1+2),hl
                      	
  3728  17            		rla
  3729  E1            		pop	hl		;l-bit0=same sign?
  372A  AD            		xor	l
  372B  0F            		rrca
  372C  301A          		jr	nc,SEARCH1
                      	
  372E  216AFF        		ld	hl,FAC1+4
  3731  34            		inc	(hl)
  3732  CACE03        		jp	z,OVERR
                      	
                      	;	scf			;c-flag=1
  3735  2D            		dec	l		;dec hl,FAC1+3
  3736  CB1E          		rr	(hl)
  3738  2D            		dec	l		;dec hl,FAC1+2
  3739  CB1E          		rr	(hl)
  373B  2D            		dec	l		;dec hl,FAC1+1
  373C  CB1E          		rr	(hl)
  373E  2D            		dec	l		;dec hl,FAC1
  373F  CB1E          		rr	(hl)
                      	
  3741  79            		ld	a,c
  3742  CB19          		rr	c
  3744  E620          		and	20h		;sticky bit
  3746  B1            		or	c
                      	;	and	0e0h
  3747  4F            		ld	c,a
                      	
  3748                	SEARCH1:
  3748  2A66FF        		ld	hl,(FAC1)
  374B  ED5B68FF      		ld	de,(FAC1+2)
                      	;	ld	a,h
                      	;	or	l
                      	;	or	d
                      	;	or	e
                      	;	or	c
                      	;	jp	z,MULFZERO
                      	
  374F                	ADDFLP3:
  374F  CB7A          		bit	7,d
  3751  2014          		jr	nz,CHKROUND
  3753  CB21          		sla	c
  3755  ED6A          		adc	hl,hl
  3757  CB13          		rl	e
  3759  CB12          		rl	d
  375B  3A6AFF        		ld	a,(FAC1+4)
  375E  3D            		dec	a
  375F  326AFF        		ld	(FAC1+4),a
  3762  20EB          		jr	nz,ADDFLP3
  3764  C33338        		jp	MULFZERO	;pop af/jp SETZERO
                      	
                      	;round to the nearest even
  3767                	CHKROUND:
  3767  7D            		ld	a,l
  3768  0F            		rrca
  3769  79            		ld	a,c
  376A  8F            		adc	a,a
  376B  3015          		jr	nc,ADDSGN	;guard bit=0
  376D  2813          		jr	z,ADDSGN	;round bit=0 and sticky bit=0 and l=even
                      	
                      	;round up
  376F  23            		inc	hl
  3770  7C            		ld	a,h
  3771  B5            		or	l
  3772  200E          		jr	nz,ADDSGN
  3774  13            		inc	de
  3775  7A            		ld	a,d
  3776  B3            		or	e
  3777  2009          		jr	nz,ADDSGN
                      	
  3779  216AFF        		ld	hl,FAC1+4
  377C  34            		inc	(hl)
  377D  CACE03        		jp	z,OVERR
                      	;	ld	d,80h
  3780  63            		ld	h,e		;e=0
  3781  6B            		ld	l,e		;e=0
                      	
  3782                	ADDSGN:
  3782  F1            		pop	af		;sign
  3783  AA            		xor	d
  3784  E680          		and	80h
  3786  AA            		xor	d
  3787  57            		ld	d,a
                      	
                      	;set 4-byte integer in FAC1
                      	;input: de-hl
  3788                	SETI4:
  3788  2266FF        		ld	(FAC1),hl
  378B  ED5368FF      		ld	(FAC1+2),de
  378F  C9            		ret
                      	
                      	
                      	;FAC1 = FAC1 * 10
                      	;input: FAC1
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  3790                	MULF10:
  3790  219837        		ld	hl,TEN
  3793  CD360C        		call	SETF2
  3796  1808          		jr	MULF
                      	
  3798                	TEN:
  3798  0000002084    		db	00h, 00h, 00h, 20h, 84h
                      	
                      	
                      	;* operator
  379D                	O_MUL:
  379D  CD680B        		call	CHKNUM
                      	;	call	MULF
                      	;	ret
                      	
                      	
                      	;FAC1 = FAC1 * FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  37A0                	MULF:
                      	
                      	;result=bc-de-de'-hl'
                      	
  37A0  3A6AFF        		ld	a,(FAC1+4)
  37A3  B7            		or	a
  37A4  C8            		ret	z
                      	
  37A5  2171FF        		ld	hl,FAC2+4
  37A8  7E            		ld	a,(hl)
  37A9  B7            		or	a
  37AA  CA2A0C        		jp	z,SETZERO
                      	
  37AD  2D            		dec	l		;dec hl,FAC2+3
  37AE  7E            		ld	a,(hl)
  37AF  CBFE          		set	7,(hl)
  37B1  2E69          		ld	l,FAC1+3-(FAC1+3)/256*256	;hl=FAC1+3
  37B3  AE            		xor	(hl)
  37B4  F5            		push	af		;sign
  37B5  CBFE          		set	7,(hl)
                      	
  37B7  010000        		ld	bc,0000h
  37BA  50            		ld	d,b
  37BB  59            		ld	e,c
                      	
  37BC  D9            		exx
  37BD  E5            		push	hl
  37BE  D5            		push	de
  37BF  C5            		push	bc
                      	
  37C0  2A66FF        		ld	hl,(FAC1)
  37C3  ED5B68FF      		ld	de,(FAC1+2)
                      	;	or	a		;c-flag=0
                      	
  37C7  0620          		ld	b,20h
  37C9                	MULFLP:
                      	;shift result and FAC1
  37C9  D9            		exx
  37CA  CB18          		rr	b
  37CC  CB19          		rr	c
  37CE  CB1A          		rr	d
  37D0  CB1B          		rr	e
  37D2  D9            		exx
  37D3  CB1A          		rr	d
  37D5  CB1B          		rr	e
  37D7  CB1C          		rr	h
  37D9  CB1D          		rr	l
  37DB  300E          		jr	nc,MULFNC1
                      	
                      	;add
  37DD  D9            		exx
  37DE  2A6DFF        		ld	hl,(FAC2)
  37E1  19            		add	hl,de
  37E2  EB            		ex	de,hl
  37E3  2A6FFF        		ld	hl,(FAC2+2)
  37E6  ED4A          		adc	hl,bc
  37E8  44            		ld	b,h
  37E9  4D            		ld	c,l
  37EA  D9            		exx
  37EB                	MULFNC1:
  37EB  10DC          		djnz	MULFLP
                      	
  37ED  D9            		exx
  37EE  216AFF        		ld	hl,FAC1+4
  37F1  300D          		jr	nc,MULFNC2
                      	
                      	;shift result
  37F3  CB18          		rr	b
  37F5  CB19          		rr	c
  37F7  CB1A          		rr	d
  37F9  CB1B          		rr	e
  37FB  D9            		exx
  37FC  CB1A          		rr	d
                      	;	rr	e
                      	;	rr	h
                      	;	rr	l
  37FE  D9            		exx
  37FF  34            		inc	(hl)
                      	
  3800                	MULFNC2:
  3800  35            		dec	(hl)		;;
                      	
                      	;round to the nearest even
  3801  D9            		exx
  3802  7A            		ld	a,d
  3803  8F            		adc	a,a		;check d-bit7
  3804  3041          		jr	nc,NOROUNDUP
  3806  B3            		or	e
  3807  B4            		or	h
  3808  B5            		or	l
  3809  C1            		pop	bc
  380A  D1            		pop	de
  380B  E1            		pop	hl
  380C  D9            		exx
  380D  2004          		jr	nz,ROUNDUP
  380F  7B            		ld	a,e
  3810  0F            		rrca
  3811  300E          		jr	nc,MULFEND
                      	
  3813                	ROUNDUP:
  3813  13            		inc	de
  3814  7A            		ld	a,d
  3815  B3            		or	e
  3816  2009          		jr	nz,MULFEND
  3818  03            		inc	bc
  3819  78            		ld	a,b
  381A  B1            		or	c
  381B  2004          		jr	nz,MULFEND
                      	;	ld	b,80h
  381D  34            		inc	(hl)
  381E  CACE03        		jp	z,OVERR
                      	
  3821                	MULFEND:
  3821  ED5366FF      		ld	(FAC1),de
  3825  ED4368FF      		ld	(FAC1+2),bc
                      	
                      	;exponent
  3829  3A71FF        		ld	a,(FAC2+4)
  382C  86            		add	a,(hl)
  382D  3808          		jr	c,MULFC
  382F  D680          		sub	80h		;;not 81h
  3831  3009          		jr	nc,MULEXP
                      	
  3833                	MULFZERO:
  3833  F1            		pop	af		;cancel
  3834  C32A0C        		jp	SETZERO
                      	
  3837                	MULFC:
  3837  D680          		sub	80h		;;not 81h
  3839                	MULFCHKOV:
  3839  D2CE03        		jp	nc,OVERR
  383C                	MULEXP:
  383C  77            		ld	(hl),a		;exponent
  383D  28F4          		jr	z,MULFZERO
  383F  2D            		dec	l		;dec hl,FAC1+3
  3840  F1            		pop	af		;sign
  3841  07            		rlca
  3842  7E            		ld	a,(hl)
  3843  17            		rla
  3844  0F            		rrca
  3845  77            		ld	(hl),a
  3846  C9            		ret
                      	
  3847                	NOROUNDUP:
  3847  C1            		pop	bc
  3848  D1            		pop	de
  3849  E1            		pop	hl
  384A  D9            		exx
  384B  18D4          		jr	MULFEND
                      	
                      	
                      	;FAC1 = FAC1 * 0.1
                      	;input: FAC1
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  384D                	DIVF10:
  384D  215638        		ld	hl,EM1
  3850  CD360C        		call	SETF2
  3853  C3A037        		jp	MULF
                      	
                      	;0.1
  3856                	EM1:
  3856  CDCCCC4C7D    		db	0cdh, 0cch, 0cch, 4ch, 7dh
                      	
                      	
                      	;/ operator
  385B                	O_DIV:
  385B  CD680B        		call	CHKNUM
                      	;	call	DIVF
                      	;	ret
                      	
                      	
                      	;FAC1 = FAC1 / FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1
                      	;destroy: FAC2,af,bc,de,hl
  385E                	DIVF:
  385E  3A71FF        		ld	a,(FAC2+4)
  3861  B7            		or	a
  3862  CADD03        		jp	z,DIV0ERR
                      	
  3865  216AFF        		ld	hl,FAC1+4
  3868  7E            		ld	a,(hl)
  3869  B7            		or	a
  386A  C8            		ret	z
                      	
  386B  2D            		dec	l		;dec hl, FAC1+3
  386C  7E            		ld	a,(hl)
  386D  CBFE          		set	7,(hl)
  386F  2E70          		ld	l,FAC2+3-(FAC2+3)/256*256	;hl<-FAC2+3
  3871  AE            		xor	(hl)
  3872  CBFE          		set	7,(hl)
  3874  F5            		push	af		;sign
                      	
  3875  210000        		ld	hl,0000h
  3878  54            		ld	d,h
  3879  5D            		ld	e,l
                      	
  387A  D9            		exx			;
  387B  E5            		push	hl
  387C  D5            		push	de
                      	
  387D  CD0025        		call	CMPINT4
  3880  3007          		jr	nc,DIVFNC
  3882  216AFF        		ld	hl,FAC1+4
  3885  35            		dec	(hl)
  3886  CD413F        		call	SLAF1
                      	
  3889                	DIVFNC:
  3889  0620          		ld	b,20h
  388B                	DIVFLP:
  388B  3805          		jr	c,DIVFC1
  388D  CD0025        		call	CMPINT4
  3890  381A          		jr	c,DIVFC2
  3892                	DIVFC1:
  3892  2A66FF        		ld	hl,(FAC1)
  3895  ED5B6DFF      		ld	de,(FAC2)
  3899  B7            		or	a
  389A  ED52          		sbc	hl,de
  389C  2266FF        		ld	(FAC1),hl
  389F  2A68FF        		ld	hl,(FAC1+2)
  38A2  ED5B6FFF      		ld	de,(FAC2+2)
  38A6  ED52          		sbc	hl,de
  38A8  2268FF        		ld	(FAC1+2),hl
  38AB  B7            		or	a		;reset c-flag
  38AC                	DIVFC2:
  38AC  3F            		ccf
  38AD  D9            		exx			;
  38AE  ED6A          		adc	hl,hl
  38B0  CB13          		rl	e
  38B2  CB12          		rl	d
  38B4  D9            		exx			;
                      	
  38B5  CD413F        		call	SLAF1
  38B8  10D1          		djnz	DIVFLP
                      	
  38BA  17            		rla			;store c-flag
  38BB  CD0025        		call	CMPINT4		;no change in a
  38BE  D1            		pop	de
  38BF  E1            		pop	hl
  38C0  D9            		exx
                      	
  38C1  1F            		rra
  38C2  3809          		jr	c,DIVFUP
  38C4  07            		rlca
  38C5  381B          		jr	c,DIVFNOUP
                      	
                      	;round to the nearest even
  38C7  2004          		jr	nz,DIVFUP
  38C9  7D            		ld	a,l
  38CA  0F            		rrca
  38CB  3015          		jr	nc,DIVFNOUP
                      	
                      	;round up
  38CD                	DIVFUP:
  38CD  23            		inc	hl
  38CE  7C            		ld	a,h
  38CF  B5            		or	l
  38D0  2010          		jr	nz,DIVFNOUP
  38D2  13            		inc	de
  38D3  7A            		ld	a,d
  38D4  B3            		or	e
  38D5  200B          		jr	nz,DIVFNOUP
  38D7  216AFF        		ld	hl,FAC1+4
  38DA  34            		inc	(hl)
  38DB  CACE03        		jp	z,OVERR
  38DE  EB            		ex	de,hl		;hl<-0
  38DF  110080        		ld	de,8000h
                      	
  38E2                	DIVFNOUP:
  38E2  2266FF        		ld	(FAC1),hl
  38E5  ED5368FF      		ld	(FAC1+2),de
                      	
  38E9  3A71FF        		ld	a,(FAC2+4)
  38EC  47            		ld	b,a
  38ED  216AFF        		ld	hl,FAC1+4
  38F0  7E            		ld	a,(hl)
  38F1  90            		sub	b
  38F2  3806          		jr	c,DIVF1LT2
                      	
                      	;FAC1>=FAC2
  38F4  C681          		add	a,81h
  38F6  3F            		ccf
  38F7  C33938        		jp	MULFCHKOV
                      	
                      	
                      	;FAC1<FAC2
  38FA                	DIVF1LT2:
  38FA  F23338        		jp	p,MULFZERO
  38FD  C681          		add	a,81h
  38FF  C33C38        		jp	MULEXP
                      	
                      	
                      	;continued from CHKSGN
  3902                	CHKSGN2:
  3902  3A69FF        		ld	a,(FAC1+3)
  3905  07            		rlca
  3906  9F            		sbc	a,a		;00h or ffh
  3907  D8            		ret	c		;ffh
  3908  3C            		inc	a
  3909  C9            		ret			;01h
                      	
                      	
                      	;SGN() function
  390A                	F_SGN:
  390A  CD680B        		call	CHKNUM
  390D  EF            		rst	CHKSGN
  390E  C8            		ret	z
  390F  3C            		inc	a
  3910  CA3B0C        		jp	z,SETMNS1
  3913  C33F22        		jp	SETPLS1
                      	
                      	
                      	;ABS() function
  3916                	F_ABS:
  3916  CD680B        		call	CHKNUM
  3919                	ABS:
  3919  2169FF        		ld	hl,FAC1+3
  391C  CBBE          		res	7,(hl)
  391E  C9            		ret
                      	
                      	
                      	;push FAC1
                      	;input: FAC1
                      	;output: sp=sp-6
                      	;destroy: af,hl
  391F                	PUSHF1:
  391F  F1            		pop	af		;return address
  3920  2A69FF        		ld	hl,(FAC1+3)
  3923  E5            		push	hl
  3924  2A67FF        		ld	hl,(FAC1+1)
  3927  E5            		push	hl
  3928  2A65FF        		ld	hl,(FAC1-1)
  392B  E5            		push	hl
  392C  F5            		push	af		;
  392D  C9            		ret
                      	
                      	
                      	;push FAC2
                      	;input: FAC2
                      	;output: sp=sp-6
                      	;destroy: af,hl
  392E                	PUSHF2:
  392E  F1            		pop	af		;return address
  392F  2A70FF        		ld	hl,(FAC2+3)
  3932  E5            		push	hl
  3933  2A6EFF        		ld	hl,(FAC2+1)
  3936  E5            		push	hl
  3937  2A6CFF        		ld	hl,(FAC2-1)
  393A  E5            		push	hl
  393B  F5            		push	af		;
  393C  C9            		ret
                      	
                      	
                      	;pop FAC1
                      	;input: none
                      	;output: FAC1,sp=sp+6
                      	;destroy: af,hl
  393D                	POPF1:
  393D  F1            		pop	af		;return address
  393E  E1            		pop	hl
  393F  2265FF        		ld	(FAC1-1),hl
  3942  E1            		pop	hl
  3943  2267FF        		ld	(FAC1+1),hl
  3946  E1            		pop	hl
  3947  2269FF        		ld	(FAC1+3),hl
  394A  F5            		push	af		;
  394B  C9            		ret
                      	
                      	
                      	;pop FAC2
                      	;input: none
                      	;output: FAC2,sp=sp+6
                      	;destroy: af,hl
  394C                	POPF2:
  394C  F1            		pop	af		;return address
  394D  E1            		pop	hl
  394E  226CFF        		ld	(FAC2-1),hl
  3951  E1            		pop	hl
  3952  226EFF        		ld	(FAC2+1),hl
  3955  E1            		pop	hl
  3956  2270FF        		ld	(FAC2+3),hl
  3959  F5            		push	af		;
  395A  C9            		ret
                      	
                      	
                      	;copy FAC1 to FAC2
                      	;input: FAC1
                      	;output: FAC2
                      	;destroy: hl
  395B                	CPYFAC:
  395B  2A65FF        		ld	hl,(FAC1-1)
  395E  226CFF        		ld	(FAC2-1),hl
  3961  2A67FF        		ld	hl,(FAC1+1)
  3964  226EFF        		ld	(FAC2+1),hl
  3967  2A69FF        		ld	hl,(FAC1+3)
  396A  2270FF        		ld	(FAC2+3),hl
  396D  C9            		ret
                      	
                      	
                      	;exchange FAC1 and FAC2
                      	;input: FAC1,FAC2
                      	;output: FAC1,FAC2
                      	;destroy: hl
  396E                	EXFAC:
  396E  F5            		push	af
  396F  CD2E39        		call	PUSHF2
  3972  CD5B39        		call	CPYFAC
  3975  CD3D39        		call	POPF1
  3978  F1            		pop	af
  3979  C9            		ret
                      	
                      	
                      	;print 1-byte integer in device (unsigned)
                      	;input: a
                      	;destroy: af,bc,de,hl
  397A                	_PUTI1:	ds	PUTI1-_PUTI1
  397A                		org	PUTI1
                      	
  397A  2600          		ld	h,00h
  397C  6F            		ld	l,a
  397D  C3A13A        		jp	PUTI2
                      	
                      	
                      	;INT() function
                      	;(round toward minus infinity)
  3980                	F_INT:
  3980  CD680B        		call	CHKNUM
  3983                	INT:
  3983  CD5B39        		call	CPYFAC
  3986  CDEE0C        		call	GETINT
  3989  CD223F        		call	CMPF
  398C  C8            		ret	z
  398D  D8            		ret	c
  398E  21A60E        		ld	hl,MNSONE
  3991  C38036        		jp	SETADDF
                      	
                      	
                      	;check BASIC mode
                      	;output: a=mode-1, z-flag(1=mode 5)
                      	;destroy: f
  3994                	_CHKMOD:
  3994                		ds	CHKMOD-_CHKMOD
  3995                		org	CHKMOD
                      	
  3995  3A65FE        		ld	a,(MODE)
  3998  FE04          		cp	04h
  399A  C9            		ret
                      	
                      	
                      	;convert string to float
                      	;input: a=max length, hl=program address
                      	;output: FAC1, hl=next address (except for VAL())
                      	;destroy: FAC2, af,bc,de
  399B                	ATOF:
  399B  47            		ld	b,a
  399C  CD8C3A        		call	SKIPSPB
  399F  CA2A0C        		jp	z,SETZERO
  39A2  FE26          		cp	'&'
  39A4  CA3B3A        		jp	z,ATOFHEX
  39A7  2B            		dec	hl
                      	
  39A8  CD0128        		call	ATOIF
                      	
  39AB  CD8C3A        		call	SKIPSPB
  39AE  C8            		ret	z
  39AF  0E00          		ld	c,00h		;after-dot counter
  39B1  FE2E          		cp	'.'
  39B3  280F          		jr	z,ATOFDOT
  39B5  05            		dec	b
  39B6  F620          		or	20h
  39B8  FE65          		cp	'e'
  39BA  281B          		jr	z,ATOFEXP
  39BC  2B            		dec	hl
  39BD  C9            		ret
                      	
  39BE                	ATOFLP1:
  39BE  CD2A28        		call	CTOF
  39C1  3005          		jr	nc,CHKEXP
  39C3  0C            		inc	c
  39C4                	ATOFDOT:
  39C4  10F8          		djnz	ATOFLP1
  39C6  180F          		jr	ATOFEXP
                      	
  39C8                	CHKEXP:
  39C8  CD8C3A        		call	SKIPSPB
  39CB  280A          		jr	z,ATOFEXP
  39CD  05            		dec	b
  39CE  F620          		or	20h
  39D0  FE65          		cp	'e'
  39D2  2803          		jr	z,ATOFEXP
                      	
  39D4  2B            		dec	hl
  39D5  0600          		ld	b,00h
  39D7                	ATOFEXP:
  39D7  EB            		ex	de,hl
  39D8  CD1F39        		call	PUSHF1
  39DB  EB            		ex	de,hl
                      	
  39DC  C5            		push	bc		;c=after-dot counter
  39DD  78            		ld	a,b
  39DE  B7            		or	a
  39DF  2805          		jr	z,ATOFE0
  39E1  CD0128        		call	ATOIF
  39E4  1805          		jr	CALCEXP
                      	
  39E6                	ATOFE0:
  39E6  E5            		push	hl		;program address
  39E7  CD2A0C        		call	SETZERO
  39EA  E1            		pop	hl		;program address
                      	
  39EB                	CALCEXP:
  39EB  C1            		pop	bc		;c=after-dot counter
  39EC  E5            		push	hl		;program address
  39ED  CD1F39        		call	PUSHF1
  39F0  69            		ld	l,c
  39F1  CD660C        		call	I1TOF
  39F4  CD4C39        		call	POPF2
  39F7  CD143E        		call	SUBF21
                      	
  39FA  D1            		pop	de		;program address
  39FB  CD5B39        		call	CPYFAC
  39FE  CD3D39        		call	POPF1
  3A01  D5            		push	de		;program address
                      	
  3A02  2170FF        		ld	hl,FAC2+3
  3A05  7E            		ld	a,(hl)
  3A06  F5            		push	af		;E sign
  3A07  CBBE          		res	7,(hl)
                      	
  3A09                	ATOFLP2:
  3A09  3A71FF        		ld	a,(FAC2+4)
  3A0C  B7            		or	a
  3A0D  2829          		jr	z,ATOFEND	;E0
                      	
  3A0F  3A6AFF        		ld	a,(FAC1+4)
  3A12  B7            		or	a
  3A13  2823          		jr	z,ATOFEND	;=0
                      	
  3A15  CD1F39        		call	PUSHF1
  3A18  CD3B0C        		call	SETMNS1
  3A1B  CD8F36        		call	ADDF
  3A1E  CD5B39        		call	CPYFAC
  3A21  CD3D39        		call	POPF1
                      	
  3A24  C1            		pop	bc		;b=E sign
  3A25  C5            		push	bc
  3A26  CD2E39        		call	PUSHF2
  3A29  78            		ld	a,b
  3A2A  07            		rlca
  3A2B  F5            		push	af
  3A2C  D49037        		call	nc,MULF10
  3A2F  F1            		pop	af
  3A30  DC4D38        		call	c,DIVF10
  3A33  CD4C39        		call	POPF2
                      	
  3A36  18D1          		jr	ATOFLP2
                      	
  3A38                	ATOFEND:
  3A38  F1            		pop	af
  3A39  E1            		pop	hl		;program address
  3A3A  C9            		ret
                      	
  3A3B                	ATOFHEX:
  3A3B  2B            		dec	hl
  3A3C  05            		dec	b
  3A3D  CD463A        		call	HEX
  3A40  EB            		ex	de,hl
  3A41  CD180D        		call	S2TOF
  3A44  EB            		ex	de,hl
  3A45  C9            		ret
                      	
                      	
                      	;convert hexadecimal string to integer
                      	;input: hl="&" address, b=max length-1("&")
                      	;output: de=decimal, hl=next address
                      	;destroy: af,bc
  3A46                	HEX:
  3A46  110000        		ld	de,0000h
  3A49                	HEXLP1:
  3A49  23            		inc	hl
  3A4A  7E            		ld	a,(hl)
  3A4B  FE20          		cp	' '
  3A4D  2003          		jr	nz,CHKH
  3A4F  10F8          		djnz	HEXLP1
  3A51  C9            		ret
                      	
  3A52                	CHKH:
  3A52  F620          		or	20h
  3A54  FE68          		cp	'h'
  3A56  C2C203        		jp	nz,SNERR
  3A59  05            		dec	b
  3A5A  0E05          		ld	c,05h
                      	
  3A5C                	HEXLP2:
  3A5C  23            		inc	hl
  3A5D  7E            		ld	a,(hl)
  3A5E  FE20          		cp	' '
  3A60  281F          		jr	z,HEXEND
  3A62  FE93          		cp	DEF_		;93h
  3A64  281F          		jr	z,HEXDEF
  3A66  D630          		sub	'0'
  3A68  FE0A          		cp	'9'-'0'+1
  3A6A  3809          		jr	c,HEX0F
  3A6C  F620          		or	20h
  3A6E  D631          		sub	'a'-'0'
  3A70  FE06          		cp	'f'-'a'+1
  3A72  D0            		ret	nc		;not hex
  3A73  C60A          		add	a,0ah
  3A75                	HEX0F:
  3A75  0D            		dec	c
  3A76  CACE03        		jp	z,OVERR
  3A79  EB            		ex	de,hl
  3A7A  29            		add	hl,hl		;*2
  3A7B  29            		add	hl,hl		;*4
  3A7C  29            		add	hl,hl		;*8
  3A7D  29            		add	hl,hl		;*16
  3A7E  85            		add	a,l		;no carry
  3A7F  6F            		ld	l,a
  3A80  EB            		ex	de,hl
  3A81                	HEXEND:
  3A81  10D9          		djnz	HEXLP2
  3A83  23            		inc	hl
  3A84  C9            		ret
                      	
  3A85                	HEXDEF:
  3A85  53            		ld	d,e
  3A86  1EDE          		ld	e,0deh
  3A88  3E0F          		ld	a,0fh
  3A8A  18E9          		jr	HEX0F
                      	
                      	
                      	;skip space and decrement b
                      	;input: hl=program address, b=length
                      	;output: a=data, hl=next address, b=remained length, z-flag(1:b=0)
                      	;destroy: f
  3A8C                	SKIPSPB:
  3A8C  04            		inc	b
  3A8D                	SKIPSPBLP:
  3A8D  05            		dec	b
  3A8E  C8            		ret	z
  3A8F  7E            		ld	a,(hl)
  3A90  23            		inc	hl
  3A91  FE20          		cp	' '
  3A93  C0            		ret	nz
  3A94  18F7          		jr	SKIPSPBLP
                      	
                      	
                      	;print "in *****"
                      	;input: hl
                      	;destory: af,bc,de,hl
  3A96                	_INLNUM:
  3A96                		ds	INLNUM-_INLNUM
  3A99                		org	INLNUM
                      	
  3A99  E5            		push	hl		;
  3A9A  218B03        		ld	hl,ERRIN
  3A9D  CDCF30        		call	PUTS
  3AA0  E1            		pop	hl		;
                      	;	jp	PUTI2
                      	
                      	
                      	;print 2-byte integer in device (unsigned)
                      	;input: hl
                      	;destory: af,bc,de,hl
  3AA1                	_PUTI2:	ds	PUTI2-_PUTI2
  3AA1                		org	PUTI2
                      	
  3AA1  11CE30        		ld	de,PUTSINC
  3AA4  D5            		push	de
                      	;	jp	I2TOA
                      	
                      	
                      	;convert 2-byte integer (unsigned) to string
                      	;input: hl
                      	;output: FAC3, hl=FAC3
                      	;destroy: af,bc,de
  3AA5                	_I2TOA:	ds	I2TOA-_I2TOA
  3AA5                		org	I2TOA
                      	
  3AA5  CD680C        		call	I2TOF
  3AA8  C3AC3A        		jp	FTOA
                      	
                      	
                      	;convert float to string
                      	;input: FAC1
                      	;output: FAC3, hl=FAC3
                      	;destroy: FAC1,FAC2,af,bc,de
  3AAB                	_FTOA:	ds	FTOA-_FTOA
  3AAC                		org	FTOA
                      	
  3AAC  2172FF        		ld	hl,FAC3
  3AAF  3620          		ld	(hl),' '
  3AB1  EF            		rst	CHKSGN
  3AB2  CA633B        		jp	z,FTOAZERO	;a=0
  3AB5  3D            		dec	a
  3AB6  2802          		jr	z,FTOAPLS	;if FAC1>0
  3AB8  362D          		ld	(hl),'-'
  3ABA                	FTOAPLS:
  3ABA  CD1939        		call	ABS
                      	
  3ABD                	FTOA2:
  3ABD  216C3B        		ld	hl,E8
  3AC0  CD1F3F        		call	SETCMPF
  3AC3  3070          		jr	nc,LARGE	;FAC1 >= 1e8
  3AC5  21803B        		ld	hl,EM2
  3AC8  CD1F3F        		call	SETCMPF
  3ACB  3856          		jr	c,SMALL		;FAC1 < 1e-2
                      	
  3ACD  0609          		ld	b,09h
  3ACF                	FTOALP1:
  3ACF  C5            		push	bc
  3AD0  21713B        		ld	hl,E7
  3AD3  CD1F3F        		call	SETCMPF
  3AD6  3007          		jr	nc,FTOAOK
  3AD8  CD9037        		call	MULF10
  3ADB  C1            		pop	bc
  3ADC  10F1          		djnz	FTOALP1
  3ADE  C5            		push	bc
                      	
  3ADF                	FTOAOK:
  3ADF  3A6AFF        		ld	a,(FAC1+4)
  3AE2  D697          		sub	97h
  3AE4  47            		ld	b,a
  3AE5  3A66FF        		ld	a,(FAC1)
  3AE8                	FTOALP2:
  3AE8  07            		rlca
  3AE9  10FD          		djnz	FTOALP2
  3AEB  DC7D36        		call	c,INCF1		;round up
                      	
  3AEE  CD870C        		call	FTOI4
                      	
  3AF1  21853B        		ld	hl,INTE7
  3AF4  1173FF        		ld	de,FAC3+1
  3AF7  C1            		pop	bc
  3AF8  48            		ld	c,b		;
  3AF9  05            		dec	b
  3AFA                	FTOALP3:
  3AFA  05            		dec	b
  3AFB  FA073B        		jp	m,FTOADOT
  3AFE  CDD424        		call	DIVINT4
  3B01  C630          		add	a,'0'
  3B03  12            		ld	(de),a
  3B04  13            		inc	de
  3B05  18F3          		jr	FTOALP3
                      	
  3B07                	FTOADOT:
  3B07  CD2725        		call	CHKINT4
  3B0A  2812          		jr	z,FTOAEND
                      	
  3B0C  3E2E          		ld	a,'.'
  3B0E  12            		ld	(de),a
  3B0F  13            		inc	de
                      	
  3B10  79            		ld	a,c		;
  3B11  B7            		or	a
  3B12                	FTOALP4:
  3B12  C4D424        		call	nz,DIVINT4
  3B15  C630          		add	a,'0'
  3B17  12            		ld	(de),a
  3B18  13            		inc	de
  3B19  CD2725        		call	CHKINT4
  3B1C  20F4          		jr	nz,FTOALP4
                      	
  3B1E                	FTOAEND:
  3B1E  12            		ld	(de),a		;a=0
  3B1F  2172FF        		ld	hl,FAC3
  3B22  C9            		ret
                      	
  3B23                	SMALL:
  3B23  0600          		ld	b,00h
  3B25                	SMALLLP:
  3B25  04            		inc	b
  3B26  C5            		push	bc
  3B27  CD9037        		call	MULF10
  3B2A  217B3B        		ld	hl,E0
  3B2D  CD1F3F        		call	SETCMPF
  3B30  C1            		pop	bc
  3B31  38F2          		jr	c,SMALLLP
  3B33  1810          		jr	LARSMA
                      	
  3B35                	LARGE:
  3B35  0600          		ld	b,00h
  3B37                	LARGELP:
  3B37  04            		inc	b
  3B38  C5            		push	bc
  3B39  CD4D38        		call	DIVF10
  3B3C  21763B        		ld	hl,E2
  3B3F  CD1F3F        		call	SETCMPF
  3B42  C1            		pop	bc
  3B43  30F2          		jr	nc,LARGELP
                      	
  3B45                	LARSMA:
  3B45  78            		ld	a,b
  3B46  F5            		push	af		;
  3B47  CDBD3A        		call	FTOA2
                      	
  3B4A                	LARLP2:
  3B4A  23            		inc	hl
  3B4B  7E            		ld	a,(hl)
  3B4C  B7            		or	a
  3B4D  20FB          		jr	nz,LARLP2
                      	
  3B4F  3645          		ld	(hl),'E'
  3B51  23            		inc	hl
  3B52  362B          		ld	(hl),'+'
  3B54  F1            		pop	af		;
  3B55  3802          		jr	c,LARPLS
  3B57  362D          		ld	(hl),'-'
                      	
  3B59                	LARPLS:
  3B59  23            		inc	hl
  3B5A  010A2F        		ld	bc,2f0ah	;b='0'-1, c=10
  3B5D                	LARLP3:
  3B5D  04            		inc	b
  3B5E  91            		sub	c
  3B5F  30FC          		jr	nc,LARLP3
  3B61  81            		add	a,c
  3B62  70            		ld	(hl),b
                      	
  3B63                	FTOAZERO:
  3B63  23            		inc	hl
  3B64  C630          		add	a,'0'
  3B66  77            		ld	(hl),a
  3B67  23            		inc	hl
  3B68  EB            		ex	de,hl
  3B69  AF            		xor	a
  3B6A  18B2          		jr	FTOAEND
                      	
                      	
                      	;99999999.5
  3B6C                	E8:
  3B6C  F01FBC3E9B    		db	0f0h, 1fh, 0bch, 3eh, 9bh
                      	
                      	;9999999.95
  3B71                	E7:
  3B71  F37F961898    		db	0f3h, 7fh, 96h, 18h, 98h
                      	
                      	;9.99999995
  3B76                	E2:
  3B76  F3FFFF1F84    		db	0f3h, 0ffh, 0ffh, 1fh, 84h
                      	
                      	;0.999999995
  3B7B                	E0:
  3B7B  EBFFFF7F80    		db	0ebh, 0ffh, 0ffh, 7fh, 80h
                      	
                      	;0.00999999995
  3B80                	EM2:
  3B80  300AD7237A    		db	30h, 0ah, 0d7h, 23h, 7ah
                      	
  3B85                	INTE7:
  3B85  80969800      		db	80h, 96h, 98h, 00h	;10^7
  3B89  40420F00      		db	40h, 42h, 0fh, 00h	;10^6
  3B8D  A0860100      		db	0a0h,86h, 01h, 00h	;10^5
  3B91  10270000      		db	10h, 27h, 00h, 00h	;10^4
  3B95  E8030000      		db	0e8h,03h, 00h, 00h	;10^3
  3B99  64000000      		db	64h, 00h, 00h, 00h	;10^2
  3B9D  0A000000      		db	0ah, 00h, 00h, 00h	;10^1
  3BA1  01000000      		db	01h, 00h, 00h, 00h	;10^0
                      	
                      	
                      	;RND() function
  3BA5                	_F_RND:	ds	RNDPLS-9-_F_RND
  3BA6                		org	RNDPLS-9
  3BA6                	F_RND:
  3BA6  CD680B        		call	CHKNUM
  3BA9  EF            		rst	CHKSGN
  3BAA  2815          		jr	z,RND0		;rnd(0)
  3BAC  3C            		inc	a
  3BAD  2806          		jr	z,RNDMNS	;rnd(-x)
                      	
                      	;rnd(+x)
  3BAF                	_RNDPLS:ds	RNDPLS-_RNDPLS
  3BAF                		org	RNDPLS
                      	
  3BAF  2151FA        		ld	hl,RSEED
  3BB2  CD2D0C        		call	SETF1
  3BB5                	RNDMNS:
  3BB5  CD1525        		call	DECINT4
  3BB8  21D53B        		ld	hl,RNDFCT
  3BBB  CD360C        		call	SETF2
  3BBE  CDD93B        		call	MULRND
  3BC1                	RND0:
  3BC1  2A51FA        		ld	hl,(RSEED)
  3BC4  ED5B53FA      		ld	de,(RSEED+2)
  3BC8  CDA60C        		call	I4TOF
  3BCB  216AFF        		ld	hl,FAC1+4
  3BCE  7E            		ld	a,(hl)
  3BCF  B7            		or	a
  3BD0  C8            		ret	z
  3BD1  D620          		sub	20h
  3BD3  77            		ld	(hl),a
  3BD4  C9            		ret
                      	
                      	
  3BD5                	RNDFCT:
  3BD5  65520F00      		db	65h, 52h, 0fh, 00h
                      	
                      	
                      	;RSEED = (FAC1 (integer) * FAC2 (integer)) & ff,ff,ff,ff,ffh
                      	; for RND() function
                      	;input: FAC1,FAC2 (not zero)
                      	;output: RSEED
                      	;destroy: FAC1,af,b,de,hl
  3BD9                	MULRND:
  3BD9  21AB0E        		ld	hl,ZERO
  3BDC  1151FA        		ld	de,RSEED
  3BDF  CD300C        		call	SETF
  3BE2  AF            		xor	a
  3BE3  326AFF        		ld	(FAC1+4),a
                      	
  3BE6  D9            		exx			;
  3BE7  E5            		push	hl
  3BE8  D5            		push	de
  3BE9  C5            		push	bc
  3BEA  D9            		exx			;
                      	
  3BEB  2A6DFF        		ld	hl,(FAC2)
  3BEE  ED5B6FFF      		ld	de,(FAC2+2)
                      	
  3BF2  0620          		ld	b,20h
  3BF4                	MULRLP1:
  3BF4  CB3A          		srl	d
  3BF6  CB1B          		rr	e
  3BF8  CB1C          		rr	h
  3BFA  CB1D          		rr	l
  3BFC  D9            		exx			;
  3BFD  3010          		jr	nc,MULRNC
                      	
  3BFF  1166FF        		ld	de,FAC1
  3C02  2151FA        		ld	hl,RSEED
  3C05  B7            		or	a
  3C06  0605          		ld	b,05h
  3C08                	MULRLP2:
  3C08  1A            		ld	a,(de)
  3C09  8E            		adc	a,(hl)
  3C0A  77            		ld	(hl),a
  3C0B  1C            		inc	e		;inc de
  3C0C  2C            		inc	l		;inc hl
  3C0D  10F9          		djnz	MULRLP2
                      	
  3C0F                	MULRNC:
  3C0F  CD413F        		call	SLAF1
  3C12  216AFF        		ld	hl,FAC1+4
  3C15  CB16          		rl	(hl)
  3C17  D9            		exx			;
  3C18  10DA          		djnz	MULRLP1
                      	
  3C1A  D9            		exx			;
  3C1B  C1            		pop	bc
  3C1C  D1            		pop	de
  3C1D  E1            		pop	hl
  3C1E  D9            		exx			;
  3C1F  C9            		ret
                      	
                      	
                      	;EXP() function
                      	;exp(x)=2^n * e^a, n=[x/log2], a=x-n*log2
  3C20                	F_EXP:
  3C20  CD680B        		call	CHKNUM
  3C23                	EXP:
  3C23  CD1F39        		call	PUSHF1		;x
  3C26  21933C        		ld	hl,LOG2
  3C29  CD360C        		call	SETF2
  3C2C  CD5E38        		call	DIVF		;x/log2
                      	
  3C2F  2A69FF        		ld	hl,(FAC1+3)
  3C32  7C            		ld	a,h		;(FAC1+4)
  3C33  FE89          		cp	89h
  3C35  3053          		jr	nc,EXPLARGE	;|x/log2|>=256
                      	
  3C37  CD8339        		call	INT		;n=[x/log2]
  3C3A  CDBD0C        		call	FTOI
  3C3D  D5            		push	de		;n
  3C3E  21933C        		ld	hl,LOG2
  3C41  CD360C        		call	SETF2
  3C44  CDA037        		call	MULF		;n*log2
  3C47  D1            		pop	de		;n
  3C48  CD4C39        		call	POPF2		;x
  3C4B  D5            		push	de		;n
  3C4C  CD143E        		call	SUBF21		;a=x-n*log2
                      	
                      	;1+a(1+a/2(1+a/3(1+...(1+a/10))))))))))
  3C4F  CD5B39        		call	CPYFAC
  3C52  CD3F22        		call	SETPLS1
                      	
  3C55  0E0A          		ld	c,0ah
  3C57                	EXPLP:
  3C57  CD2E39        		call	PUSHF2		;a
  3C5A  C5            		push	bc
  3C5B  CDA037        		call	MULF		;a*y
  3C5E  CD5B39        		call	CPYFAC
  3C61  E1            		pop	hl
  3C62  E5            		push	hl
  3C63  CD660C        		call	I1TOF
  3C66  CD6E39        		call	EXFAC
  3C69  CD5E38        		call	DIVF		;a*y/b
  3C6C  CD7D36        		call	INCF1		;a*y/b+1
  3C6F  C1            		pop	bc
  3C70  CD4C39        		call	POPF2		;a
  3C73  0D            		dec	c
  3C74  20E1          		jr	nz,EXPLP
                      	
  3C76  D1            		pop	de		;-256<=n<=255
                      	;	ld	a,(FAC1+4)	;=81h?
  3C77  3E81          		ld	a,81h
  3C79  83            		add	a,e
  3C7A  326AFF        		ld	(FAC1+4),a	;exponent
  3C7D  CB7A          		bit	7,d
  3C7F  2004          		jr	nz,EXPNZ
  3C81  D0            		ret	nc		;0<=n<=126
  3C82                	EXPOV:
  3C82  C3CE03        		jp	OVERR		;127<=n<=255
  3C85                	EXPNZ:
  3C85  3D            		dec	a
  3C86  F0            		ret	p		;-128=<n<=-1
  3C87                	EXPZERO:
  3C87  C32A0C        		jp	SETZERO		;-256=<n<=-129
                      	
  3C8A                	EXPLARGE:
  3C8A  CB7D          		bit	7,l		;(FAC1+3)
  3C8C  28F4          		jr	z,EXPOV		;x/log2>=256
  3C8E  CD3D39        		call	POPF1
  3C91  18F4          		jr	EXPZERO		;x/log2<=-256
                      	
                      	;log(2)
  3C93                	LOG2:
  3C93  F817723180    		db	0f8h, 17h, 72h, 31h, 80h
                      	
                      	
                      	;LOG() function
                      	;log(x)=log(a*2^n)=log(a)+n*log(2)
                      	;a'=(a-1)/(a+1)
                      	;log(a)=2*(a'+a'^3/3+a'^5/5+...)=2a'(1+1/3*a'^2(1+3/5*a'^2(...(1+19/21*a'^2))))))))))
  3C98                	F_LOG:
  3C98  CD680B        		call	CHKNUM
  3C9B                	LOG:
  3C9B  EF            		rst	CHKSGN
  3C9C  3D            		dec	a
  3C9D  C2CB03        		jp	nz,FCERR	;x<=0
                      	
  3CA0  216AFF        		ld	hl,FAC1+4
  3CA3  7E            		ld	a,(hl)
  3CA4  D681          		sub	81h
  3CA6  F5            		push	af		;n
  3CA7  3681          		ld	(hl),81h	;a
  3CA9  CD1F39        		call	PUSHF1		;a
  3CAC  CD7D36        		call	INCF1
  3CAF  CD4C39        		call	POPF2		;a
  3CB2  CD1F39        		call	PUSHF1		;a+1
  3CB5  CD3B0C        		call	SETMNS1
  3CB8  CD8F36        		call	ADDF		;a-1
  3CBB  CD4C39        		call	POPF2		;a+1
  3CBE  CD5E38        		call	DIVF		;a'=(a-1)/(a+1)
  3CC1  CD1F39        		call	PUSHF1		;a'
  3CC4  CD5B39        		call	CPYFAC
  3CC7  CDA037        		call	MULF		;a'^2
  3CCA  CD5B39        		call	CPYFAC		;a'^2
  3CCD  CD3F22        		call	SETPLS1		;y
                      	
  3CD0  0E12          		ld	c,12h
  3CD2                	LOGLP:
  3CD2  CD2E39        		call	PUSHF2		;a'^2
  3CD5  C5            		push	bc
  3CD6  CDA037        		call	MULF		;y*a'^2
  3CD9  CD5B39        		call	CPYFAC
  3CDC  E1            		pop	hl		;l=c
  3CDD  E5            		push	hl
  3CDE  2C            		inc	l
  3CDF  CD660C        		call	I1TOF
  3CE2  CD6E39        		call	EXFAC
  3CE5  CD5E38        		call	DIVF		;y*a'^2/(c+1)
  3CE8  CD5B39        		call	CPYFAC
  3CEB  E1            		pop	hl
  3CEC  2D            		dec	l
  3CED  E5            		push	hl
  3CEE  CD660C        		call	I1TOF		;c-1
  3CF1  CDA037        		call	MULF		;y*a'^2*(c-1)/(c+1)
  3CF4  CD7D36        		call	INCF1		;y=1+y*a'^2*(c-1)/(c+1)
  3CF7  C1            		pop	bc
  3CF8  CD4C39        		call	POPF2		;a'^2
  3CFB  0D            		dec	c
  3CFC  20D4          		jr	nz,LOGLP
                      	
  3CFE  CD4C39        		call	POPF2		;a'
  3D01  CDA037        		call	MULF		;a'*y
  3D04  216AFF        		ld	hl,FAC1+4
  3D07  7E            		ld	a,(hl)
  3D08  B7            		or	a
  3D09  2804          		jr	z,LOGZ
  3D0B  34            		inc	(hl)		;2*a'*y
  3D0C  CACE03        		jp	z,OVERR
  3D0F                	LOGZ:
  3D0F  C1            		pop	bc		;b=n
  3D10  CD1F39        		call	PUSHF1		;2*a'*y
  3D13  CD110D        		call	S1TOF
  3D16  21933C        		ld	hl,LOG2
  3D19  CD360C        		call	SETF2
  3D1C  CDA037        		call	MULF		;n*log(2)
  3D1F  CD4C39        		call	POPF2		;2*a'*y
  3D22  C38F36        		jp	ADDF		;n*log(2)+2*a'*y
                      	
                      	
                      	;^ operator
  3D25                	O_POW:
  3D25  CD680B        		call	CHKNUM
                      	
  3D28  2A70FF        		ld	hl,(FAC2+3)
  3D2B  7C            		ld	a,h		;(FAC2+4)
  3D2C  B7            		or	a
  3D2D  CA3F22        		jp	z,SETPLS1	;x^0
                      	
  3D30  EF            		rst	CHKSGN
  3D31  2812          		jr	z,POWZERO
  3D33  3C            		inc	a
  3D34  2815          		jr	z,POWNEG
                      	
                      	;x^y=exp(ylog(x))
  3D36                	POWPOS:
  3D36  CD2E39        		call	PUSHF2		;y
  3D39  CD9B3C        		call	LOG		;log(x)
  3D3C  CD4C39        		call	POPF2		;y
  3D3F  CDA037        		call	MULF		;ylog(x)
  3D42  C3233C        		jp	EXP
                      	
                      	;0^y
  3D45                	POWZERO:
  3D45  7D            		ld	a,l		;(FAC2+3)
  3D46  07            		rlca
  3D47  D0            		ret	nc		;0^(positive)
  3D48  C3DD03        		jp	DIV0ERR		;0^(negative)
                      	
                      	;(negative)^y
  3D4B                	POWNEG:
  3D4B  7C            		ld	a,h		;(FAC2+4)
  3D4C  FEA1          		cp	0a1h
  3D4E  D2CB03        		jp	nc,FCERR
                      	
  3D51  CD1F39        		call	PUSHF1
  3D54  CD2E39        		call	PUSHF2
  3D57  CD3D39        		call	POPF1
                      	
  3D5A  CDEE0C        		call	GETINT
  3D5D  CD223F        		call	CMPF
  3D60  C2CB03        		jp	nz,FCERR	;y=not integer
  3D63  CD870C        		call	FTOI4
  3D66  3A66FF        		ld	a,(FAC1)	;even/odd
  3D69  47            		ld	b,a
                      	
  3D6A  CD3D39        		call	POPF1
  3D6D  C5            		push	bc		;
  3D6E  CD1939        		call	ABS
  3D71  CD363D        		call	POWPOS
  3D74  F1            		pop	af		;
  3D75  0F            		rrca
  3D76  D0            		ret	nc		;y=even
  3D77  C32D0D        		jp	NEGABSNZ	;y=odd
                      	
                      	
                      	;COS() function
                      	;cos(x)=sin(pi/2-|x|)
  3D7A                	F_COS:
  3D7A  CD680B        		call	CHKNUM
  3D7D                	COS:
  3D7D  CD280D        		call	NEGABS
  3D80  21883D        		ld	hl,PIDIV2
  3D83  CD8036        		call	SETADDF		;pi/2-|x|
  3D86  1808          		jr	SIN
                      	
                      	;pi/2
  3D88                	PIDIV2:
  3D88  A2DA0F4981    		db	0a2h, 0dah, 0fh, 49h, 81h
                      	
                      	
                      	;SIN() function
                      	;x-x^3/3!+x^5/5!-...=x(1-x^2/(2*3)(1-x^2/(4*5)(...(1-x^2/(12*13)))))))))))
  3D8D                	F_SIN:
  3D8D  CD680B        		call	CHKNUM
  3D90                	SIN:
  3D90  CD1F39        		call	PUSHF1		;x
  3D93  211A3E        		ld	hl,PI2
  3D96  CD360C        		call	SETF2
  3D99  CD5E38        		call	DIVF		;x/2pi
  3D9C  CDEE0C        		call	GETINT		;int(x/2pi)
  3D9F  211A3E        		ld	hl,PI2
  3DA2  CD360C        		call	SETF2
  3DA5  CDA037        		call	MULF		;int(x/2pi)*2pi
  3DA8  CD4C39        		call	POPF2		;x
  3DAB  CD143E        		call	SUBF21		;x'=x-int(x/2pi)*2pi
                      	
  3DAE  CDFF3D        		call	SINRANGE	;[-pi,+pi]
  3DB1  CDFF3D        		call	SINRANGE	;[-pi/2,+pi/2]
                      	
  3DB4  CD1F39        		call	PUSHF1		;x'
  3DB7  CD5B39        		call	CPYFAC
  3DBA  CDA037        		call	MULF		;x'^2
                      	
  3DBD  CD5B39        		call	CPYFAC
  3DC0  CD3F22        		call	SETPLS1		;y=1
                      	
  3DC3  060C          		ld	b,0ch
  3DC5                	SINLP:
  3DC5  CD2E39        		call	PUSHF2		;x'^2
  3DC8  C5            		push	bc
  3DC9  CDA037        		call	MULF		;x'^2*y
  3DCC  C1            		pop	bc
  3DCD  C5            		push	bc
  3DCE  CD1F39        		call	PUSHF1		;x'^2*y
                      	
  3DD1  78            		ld	a,b
  3DD2  04            		inc	b
  3DD3  CD5A24        		call	MULINT1		;hl=b(b+1)
  3DD6  CD680C        		call	I2TOF		;hl->FAC1
                      	
  3DD9  CD5B39        		call	CPYFAC
  3DDC  CD3D39        		call	POPF1		;x'^2*y
  3DDF  CD5E38        		call	DIVF		;x'^2/b/(b+1)*y
  3DE2  CD280D        		call	NEGABS		;-x'^2/b/(b+1)*y (y>0)
  3DE5  CD7D36        		call	INCF1		;y=1-x'^2/b/(b+1)*y
                      	
  3DE8  C1            		pop	bc
  3DE9  CD4C39        		call	POPF2		;x'^2
  3DEC  05            		dec	b
  3DED  10D6          		djnz	SINLP
                      	
  3DEF  CD4C39        		call	POPF2		;x'
  3DF2  CDA037        		call	MULF
                      	
                      	;if |sin(x)|>1
  3DF5  3A6AFF        		ld	a,(FAC1+4)
  3DF8  D681          		sub	81h
  3DFA  C0            		ret	nz
  3DFB  3266FF        		ld	(FAC1),a	;=0
  3DFE  C9            		ret
                      	
                      	;[-pi/2,+pi/2]
  3DFF                	SINRANGE:
  3DFF  21883D        		ld	hl,PIDIV2	;pi/2
  3E02  CD1F3F        		call	SETCMPF
  3E05  3009          		jr	nc,RANGENC
  3E07  2170FF        		ld	hl,FAC2+3
  3E0A  CBFE          		set	7,(hl)		;-pi/2
  3E0C  CD223F        		call	CMPF
  3E0F  D0            		ret	nc
  3E10                	RANGENC:
  3E10  2171FF        		ld	hl,FAC2+4
  3E13  34            		inc	(hl)		;+-pi
                      	
                      	;FAC1=FAC2-FAC1
  3E14                	SUBF21:
  3E14  2169FF        		ld	hl,FAC1+3
  3E17  C38B36        		jp	CHGSGNADD
                      	
                      	;pi*2
  3E1A                	PI2:
  3E1A  A2DA0F4983    		db	0a2h, 0dah, 0fh, 49h, 83h
                      	
                      	
                      	;SQR() function
                      	;y_n+1=(y_n + x/y_n)/2
  3E1F                	F_SQR:
  3E1F  CD680B        		call	CHKNUM
  3E22  EF            		rst	CHKSGN
  3E23  C8            		ret	z		;sqr(0)=0
  3E24  3C            		inc	a
  3E25  CACB03        		jp	z,FCERR		;sqr(-x)
                      	
  3E28  CD1F39        		call	PUSHF1
  3E2B  216AFF        		ld	hl,FAC1+4
  3E2E  7E            		ld	a,(hl)
  3E2F  D681          		sub	81h
  3E31  1F            		rra			;=sra a,c-flag=bit7
  3E32  C681          		add	a,81h
  3E34  77            		ld	(hl),a		;exponent of y_0 = (exponent of x)/2
                      	
  3E35  0605          		ld	b,05h
  3E37                	SQRLP:
  3E37  CD5B39        		call	CPYFAC
  3E3A  CD3D39        		call	POPF1		;x
  3E3D  CD1F39        		call	PUSHF1		;x
  3E40  C5            		push	bc
  3E41  CD2E39        		call	PUSHF2		;;y
  3E44  CD5E38        		call	DIVF		;x/y
  3E47  CD4C39        		call	POPF2		;;y
  3E4A  CD8F36        		call	ADDF		;x/y+y
  3E4D  216AFF        		ld	hl,FAC1+4
  3E50  35            		dec	(hl)		;y=(x/y+y)/2
  3E51  C1            		pop	bc
  3E52  10E3          		djnz	SQRLP
  3E54  CD4C39        		call	POPF2
  3E57  C9            		ret
                      	
                      	
                      	;TAN() function
                      	;tan(x)=sin(x)/cos(x)
  3E58                	F_TAN:
  3E58  CD680B        		call	CHKNUM
  3E5B  CD1F39        		call	PUSHF1		;x
  3E5E  CD7D3D        		call	COS		;cos(x)
  3E61  CD5B39        		call	CPYFAC
  3E64  CD3D39        		call	POPF1		;x
  3E67  CD2E39        		call	PUSHF2		;cos(x)
  3E6A  CD903D        		call	SIN		;sin(x)
  3E6D  CD4C39        		call	POPF2		;cos(x)
  3E70  C35E38        		jp	DIVF		;sin(x)/cos(x)
                      	
                      	
                      	;input: bc=X, de=Y
                      	;output: a=color
                      	;destroy: f,bc,de,hl
  3E73                	POINT:
  3E73  CD9539        		call	CHKMOD
  3E76  CA3263        		jp	z,POINT66
  3E79  3A92FD        		ld	a,(SCREEN1)
  3E7C  3D            		dec	a
  3E7D  281A          		jr	z,POINT2
  3E7F  F2893E        		jp	p,POINTG
                      	
                      	;screen mode 1
  3E82                	POINT1:
  3E82  CD8E3F        		call	GXY2AD60
  3E85  7E            		ld	a,(hl)
  3E86  D61F          		sub	1fh
  3E88  C9            		ret
                      	
                      	;graphic mode (screen mode 3,4)
  3E89                	POINTG:
  3E89  CD4514        		call	GXY2GAD60
  3E8C  7E            		ld	a,(hl)
  3E8D  A2            		and	d
  3E8E  07            		rlca
  3E8F                	POINTLP:
  3E8F  0F            		rrca
  3E90  CB0A          		rrc	d
  3E92  30FB          		jr	nc,POINTLP
  3E94                	POINTOK:
  3E94  CB0A          		rrc	d
  3E96  D0            		ret	nc		;screen mode 4
  3E97  3C            		inc	a		;screen mode 3
  3E98  C9            		ret
                      	
                      	;screen mode 2
  3E99                	POINT2:
  3E99  C5            		push	bc		;x
  3E9A  CD8E3F        		call	GXY2AD60
  3E9D  C1            		pop	bc		;x
  3E9E  CD6E2C        		call	MASK2
  3EA1  46            		ld	b,(hl)		;
  3EA2  24            		inc	h
  3EA3  24            		inc	h
  3EA4  A6            		and	(hl)
  3EA5  C8            		ret	z
                      	
  3EA6  78            		ld	a,b		;
  3EA7  0F            		rrca
  3EA8  0F            		rrca
  3EA9  7E            		ld	a,(hl)
  3EAA  17            		rla
  3EAB  17            		rla
  3EAC  17            		rla
  3EAD  E607          		and	07h
  3EAF  3C            		inc	a
  3EB0  C9            		ret
                      	
                      	
                      	;SCREEN() function
                      	;not called but jumped
  3EB1                	F_SCRN:
  3EB1  CD820B        		call	CHKLPAR
  3EB4  CD320E        		call	INT1ARG2
  3EB7  CD910B        		call	CHKRPAR
  3EBA  61            		ld	h,c
  3EBB  6B            		ld	l,e
  3EBC  24            		inc	h
  3EBD  2C            		inc	l
  3EBE  CDCD11        		call	XY2AD
  3EC1  CD9539        		call	CHKMOD
  3EC4  CA2963        		jp	z,F_SCRN66
  3EC7  6E            		ld	l,(hl)
  3EC8  CD660C        		call	I1TOF
  3ECB  C3AD18        		jp	FNCRTN
                      	
                      	
                      	;FN() function
                      	;not called but jumped
  3ECE                	F_FN:
  3ECE  CD7A33        		call	CHKVAR
  3ED1  E5            		push	hl		;program address
  3ED2  CBF8          		set	7,b
  3ED4  CDAC33        		call	SRCHVAR
  3ED7  DAF203        		jp	c,UFERR
  3EDA  E1            		pop	hl		;program address
  3EDB  D5            		push	de		;function address
  3EDC  CD530B        		call	FNCNUM
  3EDF  C1            		pop	bc		;function address
  3EE0  E5            		push	hl		;program address
                      	
                      	;push old FN() argument
  3EE1  2A63FF        		ld	hl,(FNARG+3)
  3EE4  E5            		push	hl
  3EE5  2A61FF        		ld	hl,(FNARG+1)
  3EE8  E5            		push	hl
  3EE9  3A60FF        		ld	a,(FNARG)
  3EEC  F5            		push	af
  3EED  2A5EFF        		ld	hl,(FNPAR)
  3EF0  E5            		push	hl		;old FN() parameter
                      	
  3EF1  C5            		push	bc		;function address
  3EF2  2166FF        		ld	hl,FAC1
  3EF5  1160FF        		ld	de,FNARG
  3EF8  CD300C        		call	SETF
  3EFB  E1            		pop	hl		;function address
                      	
  3EFC  5E            		ld	e,(hl)
  3EFD  23            		inc	hl
  3EFE  56            		ld	d,(hl)
  3EFF  23            		inc	hl
  3F00  7E            		ld	a,(hl)
  3F01  23            		inc	hl
  3F02  66            		ld	h,(hl)
  3F03  6F            		ld	l,a
  3F04  225EFF        		ld	(FNPAR),hl
                      	
  3F07  EB            		ex	de,hl
  3F08  CD6017        		call	ARG
                      	
  3F0B  E1            		pop	hl		;old FN() parameter
  3F0C  225EFF        		ld	(FNPAR),hl
                      	
                      	;pop old FN() argument
  3F0F  F1            		pop	af
  3F10  3260FF        		ld	(FNARG),a
  3F13  E1            		pop	hl
  3F14  2261FF        		ld	(FNARG+1),hl
  3F17  E1            		pop	hl
  3F18  2263FF        		ld	(FNARG+3),hl
  3F1B  E1            		pop	hl		;program address
  3F1C  C3B018        		jp	CLRSTRD
                      	
                      	
                      	;set FAC2 and compare
                      	;input: FAC1,hl=float address
                      	;output: c-flag, z-flag, FAC2
                      	;destroy: af,bc,de,hl
  3F1F                	SETCMPF:
  3F1F  CD360C        		call	SETF2
                      	;	jp	CMPF
                      	
                      	
                      	;compare FAC2 and FAC1
                      	;input: FAC1,FAC2
                      	;output: c-flag,z-flag
                      	;destroy: af,b,de,hl
  3F22                	CMPF:
  3F22  1169FF        		ld	de,FAC1+3
  3F25  2170FF        		ld	hl,FAC2+3
  3F28  B4            		or	h		;h>0, reset z-flag
  3F29  7E            		ld	a,(hl)
  3F2A  07            		rlca
  3F2B  1A            		ld	a,(de)
  3F2C  380E          		jr	c,CMPFNEG
  3F2E  07            		rlca
  3F2F  D8            		ret	c
                      	
  3F30                	CMPFPOS:
  3F30  13            		inc	de
  3F31  23            		inc	hl
  3F32  0605          		ld	b,05h
  3F34                	CMPFLP:
  3F34  1A            		ld	a,(de)
  3F35  BE            		cp	(hl)
  3F36  C0            		ret	nz
  3F37  2B            		dec	hl
  3F38  1B            		dec	de
  3F39  10F9          		djnz	CMPFLP
  3F3B  C9            		ret
                      	
  3F3C                	CMPFNEG:
  3F3C  07            		rlca
  3F3D  D0            		ret	nc
                      	
                      	;FAC1<0, FAC2<0
  3F3E  EB            		ex	de,hl
  3F3F  18EF          		jr	CMPFPOS
                      	
                      	
                      	;shift left arithmetic for FAC1
                      	;input: FAC1
                      	;output: FAC1,c-flag
                      	;destroy: f,hl
  3F41                	SLAF1:
  3F41  2166FF        		ld	hl,FAC1
  3F44  CB26          		sla	(hl)
  3F46  23            		inc	hl
  3F47  CB16          		rl	(hl)
  3F49  23            		inc	hl
  3F4A  CB16          		rl	(hl)
  3F4C  23            		inc	hl
  3F4D  CB16          		rl	(hl)
  3F4F  C9            		ret
                      	
                      	
                      	;jump subroutine in table
                      	;input: de=table address, a=data(00h-7fh or 80h-ffh)
                      	;output: de=jump address, a=(hl)
                      	;destroy: f
  3F50                	JPTBL:
  3F50  EB            		ex	de,hl
  3F51  87            		add	a,a
  3F52  85            		add	a,l
  3F53  6F            		ld	l,a
  3F54  3001          		jr	nc,JPTBLNC
  3F56  24            		inc	h
  3F57                	JPTBLNC:
  3F57  7E            		ld	a,(hl)
  3F58  23            		inc	hl
  3F59  66            		ld	h,(hl)
  3F5A  6F            		ld	l,a
                      	
  3F5B  EB            		ex	de,hl
  3F5C  7E            		ld	a,(hl)
  3F5D  D5            		push	de
  3F5E  C9            		ret
                      	
                      	
                      	;skip space
                      	;input: hl=program address-1
                      	;output: a=data, hl=next address
                      	;destroy: f
  3F5F                	SKIPSPINC:
  3F5F  23            		inc	hl
  3F60                	SKIPSP:
  3F60  7E            		ld	a,(hl)
  3F61  FE20          		cp	' '
  3F63  C0            		ret	nz
  3F64  18F9          		jr	SKIPSPINC
                      	
                      	
                      	;check colon and line end
                      	;input: hl=program address
                      	;output: a=(hl), z-flag(1= 00h or ":")
                      	;destroy: af
  3F66                	CHKCLNINC:
  3F66  23            		inc	hl
  3F67                	CHKCLN:
  3F67  7E            		ld	a,(hl)
  3F68  B7            		or	a
  3F69  C8            		ret	z
  3F6A  FE3A          		cp	':'
  3F6C  C8            		ret	z
  3F6D  FE20          		cp	' '
  3F6F  C0            		ret	nz
  3F70  18F4          		jr	CHKCLNINC
                      	
                      	
                      	;check comma or argument
                      	;input: hl=program address
                      	;output: a=(hl), f(z=1:comma), hl=next address
  3F72                	CHKCMM:
  3F72  CD673F        		call	CHKCLN		;a=(hl)
  3F75  CAF803        		jp	z,MOERR
  3F78  23            		inc	hl
  3F79  FE20          		cp	' '
  3F7B  28F5          		jr	z,CHKCMM
  3F7D  FE2C          		cp	','
  3F7F  C8            		ret	z
  3F80  2B            		dec	hl
  3F81  C9            		ret
                      	
                      	
                      	;check colon and comma
                      	;input: hl=program address
                      	;output: a=(hl), z-flag(1= 00h or ":" ), hl=hl+1(comma)
                      	;destroy: af
  3F82                	CHKCLCM:
  3F82  CD673F        		call	CHKCLN
  3F85  C8            		ret	z
  3F86  FE2C          		cp	','
  3F88  C2C203        		jp	nz,SNERR
  3F8B  23            		inc	hl
  3F8C  B7            		or	a		;reset z-flag
  3F8D  C9            		ret
                      	
                      	
                      	;get VRAM attirbute address (screen mode 1,2)
                      	;hl=(VRAM)+X/8+Y/12*32
                      	;input: bc=graphic X, de=graphic Y
                      	;output: hl=VRAM address, d=Y mod 12
                      	;destroy: af,bc,e
                      	;GXY2AD:
                      	;	call	CHKMOD
                      	;	jp	z,GXY2AD66
  3F8E                	GXY2AD60:
  3F8E  CDEC2B        		call	CHKGXY
  3F91  CDBA3F        		call	DIV12
  3F94  EB            		ex	de,hl
  3F95  57            		ld	d,a
  3F96  29            		add	hl,hl		;*2
  3F97  29            		add	hl,hl		;*4
  3F98  29            		add	hl,hl		;*8
  3F99  29            		add	hl,hl		;*16
  3F9A  29            		add	hl,hl		;*32
  3F9B  3A91FD        		ld	a,(VRAM)
  3F9E  47            		ld	b,a
  3F9F  CB39          		srl	c
  3FA1  CB39          		srl	c
  3FA3  CB39          		srl	c
  3FA5  09            		add	hl,bc
  3FA6  C9            		ret
                      	
                      	
                      	;bc=a*32
                      	;input: a(<=16), b=0
                      	;output: bc
                      	;destroy: f
  3FA7                	MUL32:
  3FA7  87            		add	a,a		;*2
  3FA8  87            		add	a,a		;*4
  3FA9  87            		add	a,a		;*8
  3FAA  87            		add	a,a		;*16
  3FAB  CB10          		rl	b
  3FAD  87            		add	a,a		;*32
  3FAE  CB10          		rl	b
  3FB0  4F            		ld	c,a
  3FB1  C9            		ret
                      	
                      	
                      	;ldir or lddr
                      	;input: bc,de,hl,z(0=ldir,1=lddr)
                      	;output: bc=0,de,hl
                      	;destroy: f
  3FB2                	LDIDR:
  3FB2  2803          		jr	z,LDIDRZ
  3FB4  EDB0          		ldir
  3FB6  C9            		ret
  3FB7                	LDIDRZ:
  3FB7  EDB8          		lddr
  3FB9  C9            		ret
                      	
                      	
                      	;de=de/12
                      	;input: de<192
                      	;output: de=int(de/12), a=de mod 12
                      	;destroy: f,b=0,l
  3FBA                	DIV12:
  3FBA  7B            		ld	a,e
  3FBB  5A            		ld	e,d		;d=0
  3FBC  2E60          		ld	l,01100000b
  3FBE  0604          		ld	b,04h
  3FC0                	DIV12LP:
  3FC0  BD            		cp	l
  3FC1  3801          		jr	c,DIV12C
  3FC3  95            		sub	l
  3FC4                	DIV12C:
  3FC4  3F            		ccf
  3FC5  CB13          		rl	e
  3FC7  CB3D          		srl	l
  3FC9  10F5          		djnz	DIV12LP
  3FCB  C9            		ret
                      	
                      	
                      	;calculate line status address and bit (connection to next line)
                      	;input: l=y+1
                      	;output: hl=line status address, a=bit
                      	;destroy: f
  3FCC                	CALCLINE:
  3FCC  C5            		push	bc
  3FCD  7D            		ld	a,l
  3FCE  21B4FD        		ld	hl,LINEST-1
  3FD1                	CALCLLP1:
  3FD1  23            		inc	hl
  3FD2  D608          		sub	08h
  3FD4  30FB          		jr	nc,CALCLLP1
  3FD6  C609          		add	a,09h
  3FD8  47            		ld	b,a
  3FD9  3E80          		ld	a,80h
  3FDB                	CALCLLP2:
  3FDB  07            		rlca
  3FDC  10FD          		djnz	CALCLLP2
  3FDE  C1            		pop	bc
  3FDF  C9            		ret
                      	
                      	
                      	;check external ROM (4000=CD? 6000=CD?)
                      	;input: hl=4003h or 6003h
                      	;output: a=mode-1, z-flag(0=found, 1=not found)
                      	;destroy: f,bc,de
  3FE0                	CHKEXTCD:
  3FE0  1643          		ld	d,'C'
  3FE2  01            		db	01h		;ld bc,
                      	
                      	;check external ROM (4000=AB? 6000=AB?)
                      	;input: hl=4003h or 6003h
                      	;output: a=mode-1, z-flag(0=found, 1=not found)
                      	;destroy: f,bc,de
  3FE3                	CHKEXTAB:
  3FE3  1641          		ld	d,'A'
  3FE5  5A            		ld	e,d
  3FE6  1C            		inc	e		;de="AB" or "CD"
  3FE7  E5            		push	hl
  3FE8  46            		ld	b,(hl)
  3FE9  2D            		dec	l
  3FEA  4E            		ld	c,(hl)
  3FEB  2D            		dec	l
  3FEC  7E            		ld	a,(hl)
  3FED  2D            		dec	l
  3FEE  66            		ld	h,(hl)
  3FEF  6F            		ld	l,a
  3FF0  E7            		rst	CPHLDE
  3FF1  2006          		jr	nz,NOABCD	;"AB" "CD" not found
  3FF3  60            		ld	h,b
  3FF4  69            		ld	l,c
  3FF5  CDA207        		call	JPHL
  3FF8  F6            		db	0f6h		;or afh, reset z-flag
                      	
  3FF9                	NOABCD:
  3FF9  BF            		cp	a		;set z-flag
  3FFA  3A65FE        		ld	a,(MODE)
  3FFD  E1            		pop	hl
  3FFE  C9            		ret
                      	
                      	
                      	;60 ROM end
  3FFF                	_4000H:	ds	4000h-_4000H
                      	
                      	
                      	;check exteral ROM (6000-) and select mode
                      	;output: z(1=mode 5), a=mode-1(if z=0)
  4000                	CHKEXT6000:
  4000  2165FE        		ld	hl,MODE
  4003  34            		inc	(hl)
  4004  34            		inc	(hl)		;mode1->mode3, mode2->mode4
  4005  210360        		ld	hl,6003h
  4008  CDE33F        		call	CHKEXTAB
  400B  C0            		ret	nz		;AB found, skip menu
  400C  CDE03F        		call	CHKEXTCD
  400F  3E11          		ld	a,11h
  4011  3264FE        		ld	(PORTF0H),a
  4014  D3F0          		out	(0f0h),a	;0000-7fff:BASIC ROM
  4016  CD4A60        		call	SELMOD
  4019  F5            		push	af		;a=mode-1, z=mode 5?
  401A  FE02          		cp	02h
  401C  3824          		jr	c,CHKEXT6END	;mode1,2
  401E  3A3BFB        		ld	a,(DRIVES)
  4021  B7            		or	a
  4022  281E          		jr	z,CHKEXT6END
                      	
  4024                	FILELP:
  4024  213F41        		ld	hl,HOWMANYFILES
  4027  CDCF30        		call	PUTS
  402A  CD0529        		call	INPT1
  402D  D7            		rst	ANADAT
  402E  3805          		jr	c,FILEOK
  4030  57            		ld	d,a		;if return, a=0
  4031  1E03          		ld	e,03h
  4033  1803          		jr	CHKFILE
                      	
  4035                	FILEOK:
  4035  CDD427        		call	ATOI2
  4038                	CHKFILE:
  4038  210F00        		ld	hl,000fh
  403B  E7            		rst	CPHLDE
  403C  38E6          		jr	c,FILELP
                      	
  403E  7B            		ld	a,e
  403F  3231FB        		ld	(FILES),a
                      	
  4042                	CHKEXT6END:
  4042  F1            		pop	af		;a=mode-1, z=mode 5?
  4043  C9            		ret
                      	
                      	
                      	;set command/function table for mode3,4,5
  4044                	SETTBL:
                      	
                      	;CLOAD(a3)
  4044  218450        		ld	hl,C_CLDEX
  4047  22A7FA        		ld	(CMDTBL+(0a3h-80h)*2),hl
                      	;CSAVE(a4)
  404A  215A50        		ld	hl,C_CSVEX
  404D  22A9FA        		ld	(CMDTBL+(0a4h-80h)*2),hl
                      	;HEX$(e5)
  4050  210B46        		ld	hl,F_HEX
  4053  2207FB        		ld	(FNCTBL+(0e5h-FNC1ST)*2),hl
                      	;PAD(f2)
  4056  214245        		ld	hl,F_PAD
  4059  2221FB        		ld	(FNCTBL+(0f2h-FNC1ST)*2),hl
                      	
                      	;RENUM(ab)-PUT(ae)
  405C  214E41        		ld	hl,CMDLSTEX
  405F  11B7FA        		ld	de,CMDTBL+(0abh-80h)*2
  4062  010800        		ld	bc,0008h
  4065  EDB0          		ldir
                      	
  4067  3A3BFB        		ld	a,(DRIVES)
  406A  B7            		or	a
  406B  2825          		jr	z,SETTBLZ1
                      	
                      	;BLOAD(af)-KILL(bd)
                      	;	ld	hl,CMDLSTEX+(0afh-0abh)*2
                      	;	ld	de,CMDTBL+(0afh-80h)*2
  406D  0E1E          		ld	c,0+(0bdh-0afh+1)*2		;b=0
  406F  EDB0          		ldir
                      	;DSKI$(f3)-MKS$(f9)
                      	;	ld	hl,FNCLSTEX
  4071  1123FB        		ld	de,FNCTBL+(0f3h-FNC1ST)*2
  4074  0E0E          		ld	c,0+(0f9h-0f3h+1)*2		;b=0
  4076  EDB0          		ldir
                      	;END(80)
  4078  213B45        		ld	hl,C_ENDEX
  407B  2261FA        		ld	(CMDTBL-(80h-80h)*2),hl
                      	
                      	;function key F2(load),F7(save)
  407E  1145FB        		ld	de,FKEYTBL+8
  4081  2146FB        		ld	hl,FKEYTBL+8+1
  4084  0E06          		ld	c,06h		;b=0
  4086  EDB0          		ldir
  4088  116DFB        		ld	de,FKEYTBL+8*6
  408B  216EFB        		ld	hl,FKEYTBL+8*6+1
  408E  0E06          		ld	c,06h		;b=0
  4090  EDB0          		ldir
                      	
  4092                	SETTBLZ1:
  4092  2A8DFD        		ld	hl,(USREND)
  4095  062E          		ld	b,2eh
  4097                	SETTBLLP1:
  4097  71            		ld	(hl),c		;c=0
  4098  2B            		dec	hl
  4099  10FC          		djnz	SETTBLLP1
  409B  E5            		push	hl
  409C  DDE1          		pop	ix
  409E  DD23          		inc	ix
                      	;	ld	a,(DRIVES)
                      	;	or	a
  40A0  2862          		jr	z,SETTBLZ2
                      	
                      	
                      	;disk work
                      	;
                      	;----------------------	(ff3dh)
                      	;string area
                      	;			(fd8dh)
                      	;---------------------
                      	;buffer#m info		9bytes	m=files
                      	;---------------------
                      	;buffer#m data		256bytes
                      	;---------------------
                      	;...
                      	;---------------------	buffer pointer
                      	;buffer#0 info		9 bytes
                      	; +0: file open mode (01h=input, 02h=output, 04h=random, 08h=append, 10h=kill, 80h=binary save)
                      	; +1: first cluster
                      	; +2: cluster
                      	; +3: sector in cluster(0-8)
                      	; +4: drive-1
                      	; +5: end position
                      	; +6: position
                      	; +7: file status (bit1=to next sector, bit3=write)
                      	; +8: characters until line end
                      	;---------------------	(fb37h)
                      	;buffer#0 data		256bytes
                      	;---------------------	(fb35h)
                      	;buffer pointer table	2*(files+1)bytes
                      	;---------------------
                      	;FAT#n info		6bytes	n=drives
                      	;---------------------
                      	;FAT#n copy		70bytes
                      	;---------------------
                      	;empty?			1byte
                      	;---------------------
                      	;...
                      	;---------------------	FAT pointer-3
                      	;FAT#1 info		6bytes
                      	; -3: check sum
                      	; -2: need to over write FAT(ffh) or not(00h)
                      	; -1: drive attribute (=ID sector and 70h)
                      	; +0: last accessed track (ffh=removed)
                      	; +1: temporary
                      	; +2: unused clusters
                      	;---------------------
                      	;FAT#1 copy		70bytes
                      	;---------------------
                      	;empty?			1byte
                      	;---------------------	(fffch)
                      	;FAT pointer table	2*drives bytes
                      	;---------------------
                      	;IX area		46bytes
                      	;---------------------
                      	;BASIC work or VRAM
                      	;(fa00h, e000h, c000h, or a000h)
                      	
                      	
                      	;set FAT pointer table
                      	;	ld	a,(DRIVES)
  40A2  47            		ld	b,a
  40A3  3ED2          		ld	a,0d2h
  40A5  90            		sub	b
  40A6  90            		sub	b
  40A7  6F            		ld	l,a
  40A8  22FCFF        		ld	(FATPTBL),hl	;=end-46-2*drives
  40AB  54            		ld	d,h
  40AC  5D            		ld	e,l
                      	
  40AD                	SETTBLLP2:
  40AD  7B            		ld	a,e
  40AE  D64A          		sub	4dh-3
  40B0  5F            		ld	e,a
  40B1  3001          		jr	nc,SETTBLNC1
  40B3  15            		dec	d
  40B4                	SETTBLNC1:
  40B4  73            		ld	(hl),e
  40B5  23            		inc	hl
  40B6  72            		ld	(hl),d
  40B7  23            		inc	hl
                      	
  40B8  EB            		ex	de,hl
  40B9  36FF          		ld	(hl),0ffh	;last accessed track (ff=no open files)
  40BB  2B            		dec	hl
  40BC  2B            		dec	hl
  40BD  3600          		ld	(hl),00h	;not need to overwrite FAT
  40BF  2B            		dec	hl
  40C0  3653          		ld	(hl),'S'	;FAT check sum
  40C2  EB            		ex	de,hl
                      	
  40C3  10E8          		djnz	SETTBLLP2
                      	
  40C5  D5            		push	de		;
                      	
  40C6  AF            		xor	a
  40C7  CDF251        		call	SETFATP
                      	
                      	;hook
  40CA  212741        		ld	hl,HOOKTBL
  40CD  3EC3          		ld	a,0c3h		;jp
  40CF  0E0C          		ld	c,0+(HOOKTBLEND-HOOKTBL)/2	;b=0
  40D1                	SETTBLLP3:
  40D1  5E            		ld	e,(hl)
  40D2  23            		inc	hl
  40D3  56            		ld	d,(hl)
  40D4  23            		inc	hl
  40D5  12            		ld	(de),a
  40D6  13            		inc	de
  40D7  EDA0          		ldi
  40D9  EDA0          		ldi
  40DB  EAD140        		jp	pe,SETTBLLP3
                      	
  40DE  E1            		pop	hl		;
                      	
                      	;set buffer pointer table
  40DF  3A31FB        		ld	a,(FILES)
  40E2  3C            		inc	a
  40E3  47            		ld	b,a
  40E4  87            		add	a,a		;c-flag=0
  40E5  5F            		ld	e,a
  40E6  51            		ld	d,c		;=0
                      	;	or	a
  40E7  ED52          		sbc	hl,de
  40E9  2235FB        		ld	(BUFPTBL),hl
  40EC  54            		ld	d,h
  40ED  5D            		ld	e,l
  40EE  15            		dec	d
  40EF  ED5337FB      		ld	(BUF0),de
  40F3                	SETTBLLP4:
  40F3  7B            		ld	a,e
  40F4  D609          		sub	09h
  40F6  5F            		ld	e,a
  40F7  3001          		jr	nc,SETTBLNC2
  40F9  15            		dec	d
  40FA                	SETTBLNC2:
  40FA  73            		ld	(hl),e
  40FB  23            		inc	hl
  40FC  72            		ld	(hl),d
  40FD  23            		inc	hl
  40FE  15            		dec	d
  40FF  10F2          		djnz	SETTBLLP4
  4101  14            		inc	d
  4102  1D            		dec	e
  4103  EB            		ex	de,hl
                      	
  4104                	SETTBLZ2:
  4104  228DFD        		ld	(USREND),hl
  4107  012C01        		ld	bc,300
  410A  CDBC35        		call	CLRMAIN
  410D  CDAE12        		call	PRTFKEY
  4110  CD9539        		call	CHKMOD
  4113  C2C100        		jp	nz,PRTSYS60
                      	
                      	;TALK(be)-DELETE(c1)
  4116  218241        		ld	hl,CMDLST66
  4119  11DDFA        		ld	de,CMDTBL+(0beh-80h)*2
  411C  010800        		ld	bc,0+(0c2h-0beh)*2
  411F  EDB0          		ldir
                      	
  4121  210463        		ld	hl,SYSNAME66
  4124  C3C400        		jp	PRTSYS
                      	
                      	
  4127                	HOOKTBL:
  4127  8DFFF456      		dw	HOOKERR, ERRCLRB
  412B  93FFD656      		dw	HOOKEDT, REMOVE
  412F  AEFF3952      		dw	HOOKPRT, FNUMPRT
  4133  BAFF7F52      		dw	HOOKINP, FNUMINP
  4137  CFFFB85A      		dw	HOOKPUT, PUTDSK
  413B  C9FFCC59      		dw	HOOKRES, CHKROPT
  413F                	HOOKTBLEND:
                      	
                      	
  413F                	HOWMANYFILES:
  413F  486F77204D616E		db	"How Many Files", 00h
                      	
  414E                	CMDLSTEX:
                      	;ab-af
  414E  C203724A8E4EA0		dw				C_RENM,	C_CRCL,	C_GET,	C_PUT,	C_BLD
                      	;b0-bd
  4158  B85DE859E35940		dw	C_BSV,	C_FLS,	C_LFLS,	C_LOAD,	C_MRG,	C_NAME,	C_SAVE,	C_FLD
  4168  F258DE586155AD		dw	C_LSET,	C_RSET,	C_OPEN,	C_CLOS,	C_DSKO,	C_KILL
                      	
  4174                	FNCLSTEX:
                      	;f3-f9
  4174  2E5C4D5D305D5B		dw				F_DSKI,	F_LOF,	F_LOC,	F_EOF,	F_DSKF
  417E  90598259      		dw	F_CVS,	F_MKS
                      	
  4182                	CMDLST66:
                      	;be-bf
  4182  41766F76      		dw							C_TALK,	C_MON
                      	;c0-c1
  4186  D273B67E      		dw	C_KANJ,	C_DEL
                      	
  418A                	CMDNAMEEX:
  418A  D2454E554D    		db							'R'+80h,"ENUM"
  418F  C34952434C45C7		db	'C'+80h,"IRCLE",'G'+80h,"ET",	'P'+80h,"UT",	'B'+80h,"LOAD"
                      	
  41A0  C253415645C649		db	'B'+80h,"SAVE",	'F'+80h,"ILES",	'L'+80h,"FILES",'L'+80h,"OAD"
  41B4  CD45524745CE41		db	'M'+80h,"ERGE",	'N'+80h,"AME",	'S'+80h,"AVE",	'F'+80h,"IELD"
                      	
  41C6  CC534554D25345		db	'L'+80h,"SET",	'R'+80h,"SET",	'O'+80h,"PEN",	'C'+80h,"LOSE"
  41D7  C4534B4F24CB49		db	'D'+80h,"SKO$",	'K'+80h,"ILL",	'T'+80h,"ALK",	'M'+80h,"ON"
                      	
  41E7  CB414E4A49C445		db	'K'+80h,"ANJI",	'D'+80h,"ELETE"
                      	
                      	
  41F2                	FNCNAMEEX:
  41F2  D04144C4534B49		db					'P'+80h,"AD",	'D'+80h,"SKI$"
  41FA  CC4F46CC4F43C5		db	'L'+80h,"OF",	'L'+80h,"OC",	'E'+80h,"OF",	'D'+80h,"SKF"
                      	
  4207  C35653CD4B5324		db	'C'+80h,"VS",	'M'+80h,"KS$",	80h
                      	
                      	
                      	;error ID for extended BASIC
  420F                	ERRIDEX:
  420F  464F4945424E  		db	"FO", "IE", "BN"
  4215  4646424D414F49		db	"FF", "BM", "AO", "IO", "FE", "DF", "EF", "NM"
  4225  44534154444E54		db	"DS", "AT", "DN", "TS", "RD", "SP", "CF", "FW"
                      	
                      	
  4235                	FOERR:
  4235  1E2A          		ld	e,2ah
  4237  01            		db	01h		;ld bc,****
  4238                	IEERR:
  4238  1E2C          		ld	e,2ch
  423A  01            		db	01h		;ld bc,****
  423B                	BNERR:
  423B  1E2E          		ld	e,2eh
  423D  01            		db	01h		;ld bc,****
  423E                	FFERR:
  423E  1E30          		ld	e,30h
  4240  01            		db	01h		;ld bc,****
  4241                	BMERR:
  4241  1E32          		ld	e,32h
  4243  01            		db	01h		;ld bc,****
  4244                	AOERR:
  4244  1E34          		ld	e,34h
  4246  01            		db	01h		;ld bc,****
  4247                	IOERR:
  4247  1E36          		ld	e,36h
  4249  01            		db	01h		;ld bc,****
  424A                	FEERR:
  424A  1E38          		ld	e,38h
  424C  01            		db	01h		;ld bc,****
  424D                	DFERR:
  424D  1E3A          		ld	e,3ah
  424F  01            		db	01h		;ld bc,****
  4250                	EFERR:
  4250  1E3C          		ld	e,3ch
  4252  01            		db	01h		;ld bc,****
  4253                	NMERR:
  4253  1E3E          		ld	e,3eh
  4255  01            		db	01h		;ld bc,****
  4256                	DSERR:
  4256  1E40          		ld	e,40h
  4258  01            		db	01h		;ld bc,****
  4259                	ATERR:
  4259  1E42          		ld	e,42h
  425B  01            		db	01h		;ld bc,****
  425C                	DNERR:
  425C  1E44          		ld	e,44h
  425E  01            		db	01h		;ld bc,****
  425F                	TSERR:
  425F  1E46          		ld	e,46h
  4261  01            		db	01h		;ld bc,****
  4262                	RDERR:
  4262  1E48          		ld	e,48h
  4264  01            		db	01h		;ld bc,****
  4265                	SPERR:
  4265  1E4A          		ld	e,4ah
  4267  01            		db	01h		;ld bc,****
  4268                	CFERR:
  4268  1E4C          		ld	e,4ch
  426A  01            		db	01h		;ld bc,****
  426B                	FWERR:
  426B  1E4E          		ld	e,4eh
                      	
  426D  C3FD03        		jp	ERROR
                      	
                      	
                      	;read/write/check disk
                      	;input:
                      	; a=the number of sector, b=track, c=sector, de=address
                      	; ix=work address, (ix+00h)=drive-1, (ix+1bh)=error count
                      	; c-flag=0,z-flag=0: read
                      	; c-flag=0,z-flag=1: check
                      	; c-flag=1: write
                      	;output: c-flag(1=error), (de=de+data size)
                      	;destroy: f,(de)
                      	;destroy: af,(de),hl if error count>=10 (FAT error)
  4270                	_DISK:	ds	DISK-_DISK
  4274                		org	DISK
  4274  C30C43        		jp	DSKMAIN
                      	
                      	
  4277                	CNVIL66:
  4277  78            		ld	a,b
  4278  FEAB          		cp	CMDLAST+1
  427A  2810          		jr	z,IL661
  427C  FEC2          		cp	CLAST66+1
  427E  2812          		jr	z,IL662
  4280  FEF2          		cp	FNCLAST+1
  4282  2816          		jr	z,IL663
  4284  FEFA          		cp	FLAST66+1
  4286  DA9405        		jp	c,ILLP3
  4289  C38705        		jp	ILNC
                      	
  428C                	IL661:
  428C  218A41        		ld	hl,CMDNAMEEX
  428F  C39405        		jp	ILLP3
  4292                	IL662:
  4292  21E402        		ld	hl,FNCNAME
  4295  06C2          		ld	b,TAB_
  4297  C39405        		jp	ILLP3
  429A                	IL663:
  429A  21F241        		ld	hl,FNCNAMEEX
  429D  C39405        		jp	ILLP3
                      	
                      	
                      	;checck drive number
                      	;input: a=drive-1(0-3)
                      	;output: a(0-1=internal,2-5=external), c-flag(1=error)
                      	;destroy: hl
  42A0                	CHKDRV:
  42A0  213BFB        		ld	hl,DRIVES
  42A3  BE            		cp	(hl)
  42A4  3F            		ccf
  42A5  D8            		ret	c
  42A6  2A75FE        		ld	hl,(DRVBIT)
  42A9  CB65          		bit	4,l		;internal FDD driveA
  42AB  2001          		jr	nz,CHKDRVNZ
  42AD  3C            		inc	a
  42AE                	CHKDRVNZ:
  42AE  B7            		or	a
  42AF  C8            		ret	z
  42B0  CB6D          		bit	5,l		;internal FDD dirveB
  42B2  C0            		ret	nz
  42B3  3C            		inc	a
  42B4  C9            		ret			;c-flag=0
                      	
                      	
                      	;initialize FDD (set DRVBIT)
                      	;output: a=the number of drives, z-flag(1=no drive)
                      	;destroy: f,hl,(de)
  42B5                	_INIDSK:ds	INIDSK-_INIDSK
  42B9                		org	INIDSK
                      	
                      	;for no FDD
  42B9  C5            		push	bc
  42BA  2175FE        		ld	hl,DRVBIT
  42BD  3600          		ld	(hl),00h	;bit4=drvieA,bit5=drvieB, bit6,7,0,1=external
                      	
                      	;check if 6601 or not
  42BF  CD3145        		call	FDSTBY
  42C2  01D000        		ld	bc,00d0h
  42C5  11FF00        		ld	de,00ffh
  42C8  ED51          		out	(c),d
  42CA  04            		inc	b
  42CB  ED59          		out	(c),e
  42CD  ED78          		in	a,(c)
  42CF  BB            		cp	e
  42D0  201D          		jr	nz,INIDSKEX
  42D2  05            		dec	b
  42D3  ED78          		in	a,(c)
  42D5  BA            		cp	d
  42D6  2017          		jr	nz,INIDSKEX
                      	
                      	;initialize internal FDD
  42D8  CD2845        		call	MOTORABON
  42DB  CD5544        		call	SPECIFY
  42DE                	DRIVEA:
  42DE  AF            		xor	a		;drive
  42DF  CD6B44        		call	RECALIB
  42E2  3802          		jr	c,DRIVEB
  42E4  CBE6          		set	4,(hl)		;DRVBIT
  42E6                	DRIVEB:
  42E6  3E01          		ld	a,01h		;drive
  42E8  CD6B44        		call	RECALIB
  42EB  3802          		jr	c,INIDSKEX
  42ED  CBEE          		set	5,(hl)		;DRVBIT
                      	
                      	;initialize external FDD
  42EF                	INIDSKEX:
  42EF  CDAE50        		call	INIEFD		;FDOFF
  42F2  3001          		jr	nc,INIDSKNC1
  42F4  AF            		xor	a
  42F5                	INIDSKNC1:
  42F5  E6F0          		and	0f0h		;bit7-4: external FDD connection
  42F7  07            		rlca
  42F8  07            		rlca
  42F9  B6            		or	(hl)		;DRVBIT
  42FA  77            		ld	(hl),a
                      	
                      	;count drives
  42FB  0600          		ld	b,00h
  42FD                	INIDSKLP:
  42FD  87            		add	a,a
  42FE  3001          		jr	nc,INIDSKNC2
  4300  04            		inc	b
  4301                	INIDSKNC2:
  4301  20FA          		jr	nz,INIDSKLP
                      	
  4303  3E04          		ld	a,04h
  4305  B8            		cp	b
  4306  3801          		jr	c,INIDSKC
  4308  78            		ld	a,b
  4309                	INIDSKC:
  4309  C1            		pop	bc
  430A  B7            		or	a		;z-flag=1 if no drives
  430B  C9            		ret
                      	
                      	
                      	;continued from DISK
  430C                	DSKMAIN:
  430C  F5            		push	af
  430D  E5            		push	hl
  430E  D5            		push	de
  430F  C5            		push	bc
                      	
  4310  F5            		push	af		;
  4311  3EFF          		ld	a,0ffh
  4313  3804          		jr	c,SETRWC2	;write=ffh
  4315  2001          		jr	nz,SETRWC1	;read=00h
  4317  3C            		inc	a		;check=01h
  4318                	SETRWC1:
  4318  3C            		inc	a
  4319                	SETRWC2:
  4319  2170FE        		ld	hl,RDWRCHK
  431C  77            		ld	(hl),a
  431D  F1            		pop	af		;
  431E  B7            		or	a
  431F  2864          		jr	z,DSKMAINZ
  4321  23            		inc	hl
  4322  77            		ld	(hl),a		;RMSECT
                      	
  4323  78            		ld	a,b
  4324  FE28          		cp	28h
  4326  3061          		jr	nc,DSKERR	;if track>39
  4328  23            		inc	hl
  4329  77            		ld	(hl),a		;TRACK
                      	
  432A  79            		ld	a,c
  432B  FE11          		cp	11h
  432D  305A          		jr	nc,DSKERR	;if sector>16
  432F  3274FE        		ld	(SECTOR),a
                      	
  4332  DD7E00        		ld	a,(ix+00h)
  4335  CDA042        		call	CHKDRV
  4338  384F          		jr	c,DSKERR
  433A  3273FE        		ld	(DRIVE),a
  433D  FE02          		cp	02h
  433F  D2C450        		jp	nc,RDWREFD
                      	
  4342  CD0445        		call	MOTORON
                      	;	ld	a,(DRIVE)
                      	;	call	RECALIB
                      	;	jr	c,DSKERR
  4345  CD3145        		call	FDSTBY
  4348  CD7F44        		call	SEEK
  434B  383C          		jr	c,DSKERR
  434D                	DSKLP:
  434D  2171FE        		ld	hl,RMSECT
  4350  7E            		ld	a,(hl)
  4351  B7            		or	a
  4352  2821          		jr	z,DSKEND
  4354  0604          		ld	b,04h
  4356  B8            		cp	b
  4357  3001          		jr	nc,GE4SECT	;(RMSECT)>=4
  4359  47            		ld	b,a		;(RMSECT)<4
  435A                	GE4SECT:
  435A  90            		sub	b
  435B  77            		ld	(hl),a
  435C  78            		ld	a,b
  435D  3278FE        		ld	(NSECT),a
  4360  3A70FE        		ld	a,(RDWRCHK)
  4363  3C            		inc	a		;ffh=write
  4364  CCD643        		call	z,WT4SECT	;z-flag is set
  4367  C4B143        		call	nz,RD4SECT
  436A  381D          		jr	c,DSKERR
  436C  2174FE        		ld	hl,SECTOR
  436F  7E            		ld	a,(hl)
  4370  C604          		add	a,04h
  4372  77            		ld	(hl),a
  4373  18D8          		jr	DSKLP
                      	
  4375                	DSKEND:
  4375  CD3645        		call	FDOFF
  4378  C1            		pop	bc
  4379  E1            		pop	hl		;de=address
  437A  3A70FE        		ld	a,(RDWRCHK)
  437D  3D            		dec	a		;01h=check
  437E  2001          		jr	nz,NOCHECK	;de changes (read/write)
  4380  EB            		ex	de,hl		;pop de (check)
  4381                	NOCHECK:
  4381  E1            		pop	hl
  4382  F1            		pop	af
  4383  B7            		or	a		;reset c-flag: ok
  4384  C9            		ret
                      	
  4385                	DSKMAINZ:
  4385  C1            		pop	bc
  4386  D1            		pop	de
  4387  18F8          		jr	NOCHECK
                      	
                      	
  4389                	DSKERR:
  4389  CD3645        		call	FDOFF
  438C  C1            		pop	bc
  438D  D1            		pop	de
  438E                	DSKERR2:
  438E  E1            		pop	hl
  438F  DD341B        		inc	(ix+1bh)	;error count
  4392  DD7E1B        		ld	a,(ix+1bh)
  4395  FE0A          		cp	0ah
  4397  3003          		jr	nc,ERRJMP
  4399  F1            		pop	af
  439A  37            		scf			;set c-flag: error
  439B  C9            		ret
                      	
  439C                	ERRJMP:
  439C  F1            		pop	af
  439D  F1            		pop	af		;cancel return address for DISK2
  439E  F1            		pop	af		;cancel stack for DISK2
  439F  F1            		pop	af		;cancel stack for DISK2
                      	
  43A0  78            		ld	a,b
  43A1  FE12          		cp	12h
  43A3  2007          		jr	nz,ERRJMPNZ
  43A5  79            		ld	a,c
  43A6  D60E          		sub	0eh
  43A8  FE03          		cp	10h-0eh+1
  43AA  3803          		jr	c,ERRFAT
  43AC                	ERRJMPNZ:
  43AC  C34742        		jp	IOERR
                      	
                      	;FAT error
  43AF                	ERRFAT:
  43AF  37            		scf
  43B0  C9            		ret
                      	
                      	
                      	
                      	;input: de
                      	;output: de=de+data size, c-flag(1=error), z-flag=1
                      	;destroy: af,bc,hl
  43B1                	RD4SECT:
  43B1  CDFB44        		call	SETBSIZ
  43B4  CDEC43        		call	RWDATA
  43B7  D8            		ret	c		;error
  43B8  EB            		ex	de,hl
  43B9  0ED0          		ld	c,FDBUF
  43BB  3A78FE        		ld	a,(NSECT)
  43BE                	RDATALP:
  43BE  F5            		push	af		;
  43BF  2B            		dec	hl
  43C0  24            		inc	h
  43C1  06FF          		ld	b,0ffh
  43C3  3A70FE        		ld	a,(RDWRCHK)
  43C6  B7            		or	a
  43C7  2005          		jr	nz,CHECK
  43C9  EDBA          		indr			;8MSB=ff-01
  43CB  EDAA          		ind			;8MSB=00
  43CD  24            		inc	h
  43CE                	CHECK:
  43CE  23            		inc	hl
  43CF  0C            		inc	c
  43D0  F1            		pop	af		;
  43D1  3D            		dec	a
  43D2  20EA          		jr	nz,RDATALP
  43D4  EB            		ex	de,hl
  43D5  C9            		ret
                      	
                      	
                      	;write 4 sectors
                      	;input: de
                      	;output: de=de+data size, c-flag(1=error), z-flag=1
                      	;destroy: af,bc,hl
  43D6                	WT4SECT:
  43D6  CDFB44        		call	SETBSIZ
  43D9  EB            		ex	de,hl
  43DA  0ED0          		ld	c,FDBUF
  43DC  3A78FE        		ld	a,(NSECT)
  43DF                	WDATALP:
  43DF  2B            		dec	hl
  43E0  24            		inc	h
  43E1  0600          		ld	b,00h
  43E3  EDBB          		otdr			;8MSB=ff-00!!
  43E5  23            		inc	hl
  43E6  24            		inc	h
  43E7  0C            		inc	c
  43E8  3D            		dec	a
  43E9  20F4          		jr	nz,WDATALP
  43EB  EB            		ex	de,hl
                      	;	call	RWDATA
                      	;	ret
                      	
                      	
                      	;read data or write data
                      	;output: c-flag(1=error), z-flag=1
                      	;destroy: af,b,hl
  43EC                	RWDATA:
  43EC  AF            		xor	a
  43ED  3277FE        		ld	(RETRY),a
  43F0                	RWDTLP:
  43F0  CDC344        		call	FDCRDY
  43F3  CDCA44        		call	DRVRDY
  43F6  3A70FE        		ld	a,(RDWRCHK)
  43F9  3C            		inc	a		;00=read,01=check,ff=write
  43FA  3E46          		ld	a,46h		;46h=read data command
  43FC  2001          		jr	nz,SETCMD
  43FE  3D            		dec	a		;45h=write data command
  43FF                	SETCMD:
  43FF  CDE944        		call	WRTFDC
  4402  F3            		di
  4403  3A73FE        		ld	a,(DRIVE)	;drvie/head
  4406  CDE944        		call	WRTFDC
  4409  3A72FE        		ld	a,(TRACK)	;track
  440C  CDE944        		call	WRTFDC
  440F  AF            		xor	a		;head
  4410  CDE944        		call	WRTFDC
  4413  3A74FE        		ld	a,(SECTOR)	;sector
  4416  215144        		ld	hl,SETCMDTBL
  4419  0605          		ld	b,05h
  441B                	SETCMDLP:
  441B  CDE944        		call	WRTFDC
  441E  7E            		ld	a,(hl)
  441F  23            		inc	hl
  4420  10F9          		djnz	SETCMDLP
                      	
  4422  3A70FE        		ld	a,(RDWRCHK)
  4425  3C            		inc	a		;00=read,01=check,ff=write
  4426  3EF2          		ld	a,0f2h		;read
  4428  2002          		jr	nz,SETDMA
  442A  3EF0          		ld	a,0f0h		;write
  442C                	SETDMA:
  442C  D3B1          		out	(FDCNTL),a
  442E  FB            		ei
  442F  CDD144        		call	INTRPT
  4432  CD3145        		call	FDSTBY
  4435  2179FE        		ld	hl,STATBF
  4438  0607          		ld	b,07h
  443A                	STATLP:
  443A  CDDB44        		call	READFDC
  443D  77            		ld	(hl),a
  443E  23            		inc	hl
  443F  10F9          		djnz	STATLP
  4441  3A79FE        		ld	a,(STATBF)
  4444  E6C0          		and	11000000b
  4446  C8            		ret	z		;NT
  4447  2177FE        		ld	hl,RETRY
  444A  34            		inc	(hl)
  444B  7E            		ld	a,(hl)
  444C  C6F6          		add	a,0-0ah
  444E  30A0          		jr	nc,RWDTLP	;if retry<10
  4450  C9            		ret			;c-flag=1,z-flag=1
                      	
  4451                	SETCMDTBL:
  4451  01            		db	01h		;sector length (128*2^n byte/sector)
  4452  10            		db	10h		;EOT (End Of Track)
  4453  14            		db	14h		;GPL (GaP Length)
  4454  FF            		db	0ffh		;DTL (DaTa Length)
                      	
                      	
                      	;FDC specify command
                      	;destroy: af
  4455                	SPECIFY:
  4455  CDC344        		call	FDCRDY
  4458  CDCA44        		call	DRVRDY
  445B  3E03          		ld	a,03h		;specify
  445D  CDE944        		call	WRTFDC
  4460  3EBF          		ld	a,0bfh		;step rate time=5ms/10ms,
                      					;head unload time=240ms/480ms
  4462  CDE944        		call	WRTFDC
  4465  3E26          		ld	a,26h		;head load time=38ms/76ms, DMA mode
  4467  CDE944        		call	WRTFDC
  446A  C9            		ret
                      	
                      	
                      	;FDC recalibrate command
                      	;input: a=drive
                      	;output: c-flag(1=error)
                      	;destroy: af,b
  446B                	RECALIB:
  446B  F5            		push	af
  446C  CDC344        		call	FDCRDY
  446F  CDCA44        		call	DRVRDY
  4472  3E07          		ld	a,07h		;recalibrate command
  4474  CDE944        		call	WRTFDC
  4477  F1            		pop	af		;drive/head
  4478  CDE944        		call	WRTFDC
  447B  0600          		ld	b,00h		;track
  447D  1818          		jr	SENSE
                      	
                      	
                      	;FDC seek command
                      	;output: c-flag(1=error)
                      	;destroy: af,b
  447F                	SEEK:
  447F  CDC344        		call	FDCRDY
  4482  CDCA44        		call	DRVRDY
  4485  3E0F          		ld	a,0fh		;seek command
  4487  CDE944        		call	WRTFDC
  448A  3A73FE        		ld	a,(DRIVE)	;drive/head
  448D  CDE944        		call	WRTFDC
  4490  3A72FE        		ld	a,(TRACK)	;track
  4493  CDE944        		call	WRTFDC
  4496  47            		ld	b,a		;track
                      	;	jr	SENSE
                      	
                      	
                      	;FDC sense command
                      	;input: b=track
                      	;output: c-flag(1=error)
                      	;destroy: af
  4497                	SENSE:
  4497  CDD144        		call	INTRPT
  449A  CDC344        		call	FDCRDY
  449D  3E08          		ld	a,08h		;sense interrupt status command
  449F  CDE944        		call	WRTFDC
  44A2  CDDB44        		call	READFDC		;st0
  44A5  3279FE        		ld	(STATBF),a
  44A8  CDDB44        		call	READFDC		;track
  44AB  327AFE        		ld	(STATBF+1),a
                      	;error check
  44AE  3A79FE        		ld	a,(STATBF)
  44B1  E6D0          		and	11010000b	;bit6-7:interrupt code, bit4=fault
  44B3  200C          		jr	nz,SENSEER
  44B5  3A79FE        		ld	a,(STATBF)
  44B8  E620          		and	00100000b	;seek End
  44BA  28DB          		jr	z,SENSE
  44BC  3A7AFE        		ld	a,(STATBF+1)	;track
  44BF  B8            		cp	b
  44C0  C8            		ret	z
  44C1                	SENSEER:
  44C1  37            		scf
  44C2  C9            		ret
                      	
                      	
                      	;wait for FDC ready
                      	;destroy: af
  44C3                	FDCRDY:
  44C3  DBDC          		in	a,(FDCSTAT)
  44C5  E610          		and	00010000b
  44C7  20FA          		jr	nz,FDCRDY
  44C9  C9            		ret
                      	
                      	
                      	;wait for drives ready
                      	;destroy: af
  44CA                	DRVRDY:
  44CA  DBDC          		in	a,(FDCSTAT)
  44CC  E60F          		and	00001111b
  44CE  20FA          		jr	nz,DRVRDY
  44D0  C9            		ret
                      	
                      	
                      	;wait for FDC interrupt
                      	;destroy: af
  44D1                	INTRPT:
  44D1  3EFE          		ld	a,0feh
  44D3  D3B3          		out	(B2CNTL),a	;use b2-bit0?
  44D5  DBB2          		in	a,(FDCINT)	;bit0=1:interrupt
  44D7  0F            		rrca
  44D8  30F7          		jr	nc,INTRPT
  44DA  C9            		ret
                      	
                      	
                      	;read data from FDC
                      	;destroy: f
                      	;output: a
  44DB                	READFDC:
  44DB  DBDC          		in	a,(FDCSTAT)
                      	;	and	11000000b
                      	;	cp	11000000b	;RQM=1,DIO=1(output)
                      	;	jr	nz,READFDC
  44DD  07            		rlca
  44DE  30FB          		jr	nc,READFDC	;wait for RQM=1
  44E0  07            		rlca
  44E1  3803          		jr	c,READOK	;DIO=1(output)
  44E3  3EFF          		ld	a,0ffh
  44E5  C9            		ret
  44E6                	READOK:
  44E6  DBDD          		in	a,(FDCDATA)
  44E8  C9            		ret
                      	
                      	
                      	;write data to FDC
                      	;destroy: none
  44E9                	WRTFDC:
  44E9  F5            		push	af
  44EA                	WRTFDCLP:
  44EA  DBDC          		in	a,(FDCSTAT)
                      	;	and	11000000b
                      	;	cp	10000000b	;RQM=1,DIO=0(input)
                      	;	jr	nz,WRTFDCLP
  44EC  07            		rlca
  44ED  30FB          		jr	nc,WRTFDCLP	;wait for RQM=1
  44EF  07            		rlca
  44F0  3005          		jr	nc,WRTOK	;DIO=0(input)
  44F2  CDDB44        		call	READFDC
  44F5  18F3          		jr	WRTFDCLP
  44F7                	WRTOK:
  44F7  F1            		pop	af
  44F8  D3DD          		out	(FDCDATA),a
  44FA  C9            		ret
                      	
                      	
                      	;set FD buffer size
                      	;destroy: af
  44FB                	SETBSIZ:
  44FB  3A78FE        		ld	a,(NSECT)
  44FE  D610          		sub	10h
  4500  2F            		cpl
  4501  D3DA          		out	(BUFSIZ),a
  4503  C9            		ret
                      	
                      	
                      	;motor on
                      	;input: a=drive (0 or 1)
                      	;destroy: af
  4504                	MOTORON:
  4504  B7            		or	a
  4505  280B          		jr	z,AON
  4507  3D            		dec	a
  4508  C0            		ret	nz
  4509                	BON:
  4509  DBD4          		in	a,(MOTORST)	;motor status
  450B  E602          		and	02h
  450D  C8            		ret	z		;on status
  450E  E6FD          		and	0fdh		;driveB on (bit1=0)
  4510  1807          		jr	ABON
  4512                	AON:
  4512  DBD4          		in	a,(MOTORST)	;motor status
  4514  E601          		and	01h
  4516  C8            		ret	z		;on status
  4517  E6FE          		and	0feh		;driveA on (bit0=0)
  4519                	ABON:
  4519  D3D6          		out	(MOTOR),a	;motor on
                      	
  451B  3E08          		ld	a,08h
  451D  D3DE          		out	(ADJUST),a	;compensation?
                      	
  451F  C5            		push	bc
  4520  010030        		ld	bc,3000h	;about 0.6sec
  4523  CDE825        		call	WAITLP
  4526  C1            		pop	bc
  4527  C9            		ret
                      	
                      	;destroy: af
  4528                	MOTORABON:
  4528  DBD4          		in	a,(MOTORST)	;motor status
  452A  E603          		and	03h
  452C  C8            		ret	z		;A,B=on
  452D  E6FC          		and	0fch
  452F  18E8          		jr	ABON
                      	
                      	
                      	;set FDD stand-by mode (change to internal FDD)
                      	;destroy: a
  4531                	FDSTBY:
  4531  3EF3          		ld	a,0f3h
  4533  D3B1          		out	(FDCNTL),a
  4535  C9            		ret
                      	
                      	
                      	;set FDD off (change to external FDD)
  4536                	FDOFF:
                      	;destroy: a
  4536  3EF7          		ld	a,0f7h
  4538  D3B1          		out	(FDCNTL),a
  453A  C9            		ret
                      	
                      	
                      	;END command (extended)
  453B                	C_ENDEX:
  453B  F1            		pop	af		;cancel stack
  453C  CDD559        		call	CLOSALL
  453F  C34204        		jp	EDIT
                      	
                      	
                      	;PAD() function
  4542                	F_PAD:
  4542  CDDF5C        		call	SETIX
  4545  CD4C07        		call	FNCI1		;a=0
  4548  83            		add	a,e
  4549  2811          		jr	z,PAD0		;e=0?
  454B  DD6E2B        		ld	l,(ix+2bh)	;X
  454E  1D            		dec	e
  454F  CA660C        		jp	z,I1TOF
  4552  1D            		dec	e
  4553  C2CB03        		jp	nz,FCERR
  4556  DD6E2C        		ld	l,(ix+2ch)	;Y
  4559  C3660C        		jp	I1TOF
                      	
                      	;PC-6051 and uPD7001C signals
                      	;Dsub2	6051	PSG
                      	;1	/SENSE	A0
                      	;2	EOC	A1
                      	;3	SO	A2
                      	;4	-	A3
                      	;5	5V	-
                      	;6	/SCK	A4(in)/B0(out) (select by B7)
                      	;7	SI	A5(in)/B1(out) (select by B7) A0=X, A3=Y
                      	;8	/CS	B4
                      	;9	GND	-
                      	
                      	;portA(input): 1-1-SI-/SCK-1-SO-EOC-/SENSE
                      	;portB(output):0-0-0-/CS-0-0-SI-/SCK
                      	
  455C                	PAD0:
  455C  CDF245        		call	STARTTP		;SI=0, output:d
  455F  CDE745        		call	IFMODE		;latch SI=0 to check /SENSE
  4562  CDE745        		call	ADCMODE
                      	
                      	;??? need wait to get correct /SENSE
  4565  0640          		ld	b,40h
  4567                	PAD0LP:
  4567  10FE          		djnz	PAD0LP
                      	
  4569  CDA545        		call	GETADC		;check /SENSE, select X
  456C  382A          		jr	c,ENDTP		;if /SENSE=1
                      	
  456E  CD0446        		call	SETSI1
  4571  CDA545        		call	GETADC		;get X, select Y
                      	
  4574  CD0046        		call	SETSI0
  4577  CDA545        		call	GETADC		;get Y, select X
                      	
  457A  CD0446        		call	SETSI1
  457D  CDA545        		call	GETADC		;get X, select Y
  4580  4B            		ld	c,e
                      	
  4581  CD0046        		call	SETSI0
  4584  CDA545        		call	GETADC		;get Y, latch SI
                      	
  4587  CDE745        		call	ADCMODE
  458A  CDCE45        		call	CHKSENSE
  458D  3809          		jr	c,ENDTP		;if /SENSE=1
                      	
  458F  DD712B        		ld	(ix+2bh),c	;X
  4592  DD732C        		ld	(ix+2ch),e	;Y
                      	
  4595  CD3F22        		call	SETPLS1
                      	;	jr	ENDTP
                      	
                      	;end touch panel process
                      	;input: d=PSG register 7 value
                      	;destroy: af,de
  4598                	ENDTP:
  4598  3E0F          		ld	a,0fh		;parallel port B
  459A  1ED1          		ld	e,0d1h		;bit7: pin6,7=input
                      					;bit6: select input=joystick port 1
                      					;bit5: joystick port 1 pin8=low
                      					;bit4: joystick port 2 pin8=/CS=high
                      					;bit3: joystick port 1 pin7=low
                      					;bit2: joystick port 1 pin6=low
                      					;bit1: joystick port 2 pin7=SI=low(X)
                      					;bit0: joystick port 2 pin6=/SCK=high
  459C  CDC51B        		call	SETPSG
                      	
  459F  3E07          		ld	a,07h		;set back parallel ports
  45A1  5A            		ld	e,d
  45A2  C3861E        		jp	SETPSGEI
                      	
                      	
                      	;get ADC(uPD7001c) value
                      	;output: e=data, c-flag(1=no touch)
                      	;destroy: af,b
  45A5                	GETADC:
  45A5  CDCE45        		call	CHKSENSE
  45A8  F5            		push	af		;c-flag
                      	
  45A9  3E0F          		ld	a,0fh		;parallel port B
  45AB  D3A0          		out	(0a0h),a
  45AD  DBA2          		in	a,(0a2h)
                      	
  45AF  0608          		ld	b,08h
  45B1                	ADCLP:
  45B1  E6FE          		and	0feh		;portB-bit0=/SCK -> low
  45B3  D3A1          		out	(0a1h),a
                      	
  45B5  3E0E          		ld	a,0eh		;parallel port A
  45B7  D3A0          		out	(0a0h),a
  45B9  DBA2          		in	a,(0a2h)	;portA-bit2=SO
  45BB  0F            		rrca
  45BC  0F            		rrca
  45BD  0F            		rrca
  45BE  CB13          		rl	e
                      	
  45C0  3E0F          		ld	a,0fh		;parallel port B
  45C2  D3A0          		out	(0a0h),a
  45C4  DBA2          		in	a,(0a2h)
  45C6  F601          		or	01h		;portB-bit0=/SCK -> high
  45C8  D3A1          		out	(0a1h),a
  45CA  10E5          		djnz	ADCLP
                      	
  45CC  F1            		pop	af		;c-flag
  45CD  C9            		ret
                      	
                      	
                      	;check touch pad sense signal
                      	;output: c-flag(0=touch, 1=no)
                      	;destroy: af
  45CE                	CHKSENSE:
  45CE  CDDC45        		call	WAITEOC
  45D1  CDE745        		call	IFMODE
  45D4  3E0E          		ld	a,0eh		;parallel port A
  45D6  D3A0          		out	(0a0h),a
  45D8  DBA2          		in	a,(0a2h)
  45DA  0F            		rrca			;port B bit0=Dsub-pin1=/SENSE
  45DB  C9            		ret
                      	
                      	
                      	;go to ADC mode and wait for EOC=1
                      	;destroy: af
  45DC                	WAITEOC:
  45DC  3E0E          		ld	a,0eh		;parallel port A
  45DE  D3A0          		out	(0a0h),a
  45E0                	EOCLP:
  45E0  DBA2          		in	a,(0a2h)
  45E2  E602          		and	02h		;portA bit1=Dsub-pin2=EOC
  45E4  28FA          		jr	z,EOCLP
  45E6  C9            		ret
                      	
                      	
                      	;ADC mode -> interface mode
                      	;or
                      	;interface mode -> ADC mode
                      	;destroy: af
  45E7                	IFMODE:
  45E7                	ADCMODE:
  45E7  3E0F          		ld	a,0fh		;parallel port B
  45E9  D3A0          		out	(0a0h),a
  45EB  DBA2          		in	a,(0a2h)
  45ED  EE10          		xor	10h		;portB-bit4=/CS -> high
  45EF  D3A1          		out	(0a1h),a
  45F1  C9            		ret
                      	
                      	
                      	;start touch panel process
                      	;output: d=PSG register 7 value
                      	;destroy: af
  45F2                	STARTTP:
  45F2  F3            		di
                      	
  45F3  3E07          		ld	a,07h
  45F5  D3A0          		out	(0a0h),a
  45F7  DBA2          		in	a,(0a2h)
  45F9  57            		ld	d,a
  45FA  E6BF          		and	0bfh		;parallel port A=in
  45FC  F680          		or	80h		;parallel port B=out
  45FE  D3A1          		out	(0a1h),a
                      	;	jp	SETSI0
                      	
                      	
                      	;set SI=0, /SCK=1, /CS=1(ADC mode)
                      	;destroy: af,e
  4600                	SETSI0:
  4600  1E11          		ld	e,11h		;bit7: pin6,7=output
                      					;bit6: select input=joystick port 2
                      					;bit5: joystick port 1 pin8=low
                      					;bit4: joystick port 2 pin8=/CS=high
                      					;bit3: joystick port 1 pin7=low
                      					;bit2: joystick port 1 pin6=low
                      					;bit1: joystick port 2 pin7=SI=low(X)
                      					;bit0: joystick port 2 pin6=/SCK=high
  4602  1802          		jr	SETSI
                      	
                      	
                      	;set SI=0, /SCK=1, /CS=1(ADC mode)
                      	;destroy: af,e
  4604                	SETSI1:
  4604  1E13          		ld	e,13h
  4606                	SETSI:
  4606  3E0F          		ld	a,0fh		;parallel port B
  4608  C3C51B        		jp	SETPSG
                      	
                      	
                      	;HEX$() function
  460B                	F_HEX:
  460B  CD680B        		call	CHKNUM
  460E  CDBD0C        		call	FTOI
                      	
  4611  2172FF        		ld	hl,FAC3
  4614  0E00          		ld	c,00h		;length
  4616  7A            		ld	a,d
  4617  CD2D46        		call	CNVHEX2
  461A  7B            		ld	a,e
  461B  CD2D46        		call	CNVHEX2
  461E  2003          		jr	nz,HEXNZ	;if c<>0
  4620  3630          		ld	(hl),'0'
  4622  0C            		inc	c
  4623                	HEXNZ:
  4623  79            		ld	a,c
  4624  2172FF        		ld	hl,FAC3
  4627  CD2326        		call	MAKESTR
  462A  C3C527        		jp	INKYEND
                      	
                      	
                      	;input: a=data, c=length, hl=address
                      	;output: c=length, z-flag(1:c=0)
                      	;destroy: af
  462D                	CNVHEX2:
  462D  47            		ld	b,a
  462E  0F            		rrca
  462F  0F            		rrca
  4630  0F            		rrca
  4631  0F            		rrca
  4632  CD3646        		call	CNVHEX1
  4635  78            		ld	a,b
                      	;	call	CNVHEX1
                      	;	ret
                      	
  4636                	CNVHEX1:
  4636  E60F          		and	0fh
  4638  2003          		jr	nz,CNVHEXNZ
  463A  0C            		inc	c
  463B  0D            		dec	c
  463C  C8            		ret	z
  463D                	CNVHEXNZ:
  463D  FE0A          		cp	0ah
  463F  DE69          		sbc	a,69h
  4641  27            		daa
  4642  77            		ld	(hl),a
  4643  23            		inc	hl
  4644  0C            		inc	c
  4645  C9            		ret
                      	
                      	
                      	;CIRCLE command work area
  FEAD                	XRAD	equ	GRPX2		;x-radius (2bytes)
  FEAF                	YRAD	equ	GRPY2		;y-radius (2bytes)
  FF65                	DEDX	equ	FAC1-1		;de/dx (6bytes)
  FF6C                	DEDY	equ	FAC2-1		;de/dy (6bytes)
  FF72                	ERR	equ	FAC3		;error (6bytes)
                      	
  FF78                	STARTX	equ	0ff78h
  FF7A                	STARTY	equ	0ff7ah
  FF7C                	ENDX	equ	0ff7ch
  FF7E                	ENDY	equ	0ff7eh
  FF81                	CRCLFLG	equ	0ff81h
                      	
                      	
  4646                	CRCLFDATA:
  4646  77FFFFFF      		db	77h, 0ffh, 0ffh, 0ffh	;end quad.-start quad.=4
  464A  6677EEFF      		db	66h, 77h, 0eeh, 0ffh	;end quad.-start quad.=3
  464E  4466CCEE      		db	44h, 66h, 0cch, 0eeh	;end quad.-start quad.=2
  4652  004488CC      		db	00h, 44h, 88h, 0cch	;end quad.-start quad.=1
  4656  00000088      		db	00h, 00h, 00h, 88h	;end quad.-start quad.=0
                      	
  465A                	CRCLMAIN:
  465A  2AADFE        		ld	hl,(XRAD)
  465D  ED5BE6FF      		ld	de,(ASPECT)
  4661  CD6B24        		call	MULINT2
  4664  CD754C        		call	ROUNDI2
  4667  22AFFE        		ld	(YRAD),hl	;yrad=r*a
                      	
  466A                	CRCLMAIN2:
  466A  CD3D39        		call	POPF1		;end angle
  466D  CD4C39        		call	POPF2		;start angle
                      	
                      	
  4670  2169FF        		ld	hl,FAC1+3
  4673  7E            		ld	a,(hl)
  4674  F5            		push	af		;sign of end angle
  4675  CBBE          		res	7,(hl)
  4677  2170FF        		ld	hl,FAC2+3
  467A  7E            		ld	a,(hl)
  467B  F5            		push	af		;sign of start angle
  467C  CBBE          		res	7,(hl)
                      	
  467E  CD2E39        		call	PUSHF2		;end angle
  4681  CD223F        		call	CMPF
                      	
  4684  9F            		sbc	a,a
  4685  3C            		inc	a		;start<=end?
  4686  F5            		push	af
                      	
  4687  CD5A4B        		call	ANGL2XY
  468A  227CFF        		ld	(ENDX),hl
  468D  ED537EFF      		ld	(ENDY),de
                      	
  4691  F1            		pop	af
  4692  07            		rlca
  4693  07            		rlca
  4694  B0            		or	b
  4695  57            		ld	d,a		;bit2=start<=end?, bit10=end quad.
                      	
  4696  CD3D39        		call	POPF1		;start angle
  4699  D5            		push	de
                      	
  469A  CD5A4B        		call	ANGL2XY
  469D  2278FF        		ld	(STARTX),hl
  46A0  ED537AFF      		ld	(STARTY),de
                      	
  46A4  F1            		pop	af
  46A5  07            		rlca
  46A6  07            		rlca
  46A7  B0            		or	b
  46A8  3281FF        		ld	(CRCLFLG),a	;bit4=start<=end?, bit32=end quad., bit10=start quad.
                      	
                      	
  46AB  2AADFE        		ld	hl,(XRAD)	;"a"
  46AE  54            		ld	d,h
  46AF  5D            		ld	e,l
  46B0  CD6B24        		call	MULINT2		;a*a=aa
  46B3  E5            		push	hl		;aa
  46B4  D5            		push	de
  46B5  CD954C        		call	DEHL4
  46B8  42            		ld	b,d
  46B9  4B            		ld	c,e
  46BA  EB            		ex	de,hl
  46BB  D9            		exx			;bcde'=4aa
                      	
  46BC  2AAFFE        		ld	hl,(YRAD)	;"b"
  46BF  54            		ld	d,h
  46C0  5D            		ld	e,l
  46C1  CD6B24        		call	MULINT2		;b*b=bb
  46C4  E5            		push	hl		;bb
  46C5  D5            		push	de
  46C6  CD954C        		call	DEHL4
  46C9  29            		add	hl,hl
  46CA  CB13          		rl	e
  46CC  CB12          		rl	d
  46CE  E5            		push	hl		;8bb
  46CF  D5            		push	de
                      	
                      	;de/dx_ini=8abb
  46D0  EB            		ex	de,hl
  46D1  2AADFE        		ld	hl,(XRAD)
  46D4  CD6B24        		call	MULINT2		;a*8bb=8abb (low)
  46D7  2265FF        		ld	(DEDX),hl
  46DA  ED5367FF      		ld	(DEDX+2),de
  46DE  2AADFE        		ld	hl,(XRAD)
  46E1  D1            		pop	de		;8bb (high)
  46E2  D5            		push	de
  46E3  CD6B24        		call	MULINT2		;a*8bb=8abb (high)
  46E6  ED4B67FF      		ld	bc,(DEDX+2)
  46EA  09            		add	hl,bc
  46EB  2267FF        		ld	(DEDX+2),hl
  46EE  3001          		jr	nc,CRCLNC1
  46F0  13            		inc	de
  46F1                	CRCLNC1:
  46F1  ED5369FF      		ld	(DEDX+4),de
                      	
                      	;err_ini=bb(1-4a)
  46F5  216AFF        		ld	hl,DEDX+5
  46F8  CDBB49        		call	ERRINI
                      	
                      	;de/dy_ini=-4aa
  46FB  D9            		exx
  46FC  D5            		push	de		;4aa
                      	;	push	bc
                      	
  46FD  216CFF        		ld	hl,DEDY
  4700  CDF049        		call	NEG6
                      	
                      	;	pop	bc
  4703  E1            		pop	hl
  4704  29            		add	hl,hl
  4705  EB            		ex	de,hl
  4706  CB11          		rl	c
  4708  CB10          		rl	b
  470A  D9            		exx			;bcde'=8aa
                      	
  470B  2AADFE        		ld	hl,(XRAD)	;x=x-radius
  470E  22B1FE        		ld	(GRPX3),hl
  4711  210000        		ld	hl,0000h	;y=0
  4714  22B3FE        		ld	(GRPY3),hl
                      	
  4717                	CRCLLP1:
  4717  0601          		ld	b,01h
  4719  CD2C48        		call	CRCLPSET
  471C  2AB3FE        		ld	hl,(GRPY3)
  471F  23            		inc	hl
  4720  22B3FE        		ld	(GRPY3),hl
                      	
                      	;de/dy+=8aa
                      	;err+=de/dy
  4723  D9            		exx
  4724  216CFF        		ld	hl,DEDY
  4727  CD6A49        		call	ADD6		;exx
                      	
                      	;if err>=0 and x>0 then x=x-1:de/dx-=8bb:err-=de/dx
  472A  07            		rlca
  472B  3815          		jr	c,CRCLC1
  472D  2AB1FE        		ld	hl,(GRPX3)
  4730  7C            		ld	a,h
  4731  B5            		or	l
  4732  280E          		jr	z,CRCLC1
  4734  2B            		dec	hl
  4735  22B1FE        		ld	(GRPX3),hl
                      	
                      	;de/dx-=8bb
                      	;err-=de/dx
  4738  C1            		pop	bc		;8bb
  4739  D1            		pop	de
  473A  D5            		push	de		;8bb
  473B  C5            		push	bc
  473C  2165FF        		ld	hl,DEDX
  473F  CD9249        		call	SUB6
                      	
  4742                	CRCLC1:
                      	;if de/dx>de/dy or (de/dx=0 and y<b) then loop
  4742  1171FF        		ld	de,DEDY+5
  4745  216AFF        		ld	hl,DEDX+5
  4748  CD0B4A        		call	CMP6
  474B  38CA          		jr	c,CRCLLP1
  474D  2165FF        		ld	hl,DEDX
  4750  CD154A        		call	CHKZ6
  4753  200B          		jr	nz,CRCLNZ1
  4755  2AB3FE        		ld	hl,(GRPY3)
  4758  ED5BAFFE      		ld	de,(YRAD)
                      	;	or	a
  475C  ED52          		sbc	hl,de
  475E  38B7          		jr	c,CRCLLP1
                      	
  4760                	CRCLNZ1:
                      	;de/dx_ini=-4bb
  4760  C1            		pop	bc		;8bb
  4761  D1            		pop	de
                      	
  4762  D5            		push	de
  4763  C5            		push	bc
  4764  CB38          		srl	b		;4bb
  4766  CB19          		rr	c
  4768  CB1A          		rr	d
  476A  CB1B          		rr	e
                      	
  476C  2165FF        		ld	hl,DEDX
  476F  CDF049        		call	NEG6
                      	
  4772  C1            		pop	bc		;8bb
  4773  D1            		pop	de
  4774  D9            		exx
                      	
  4775  D5            		push	de		;8aa
  4776  C5            		push	bc
                      	
                      	
                      	;de/dy_ini=8aab
  4777  2AAFFE        		ld	hl,(YRAD)
  477A  CD6B24        		call	MULINT2		;8aa*b=8aab (low)
  477D  226CFF        		ld	(DEDY),hl
  4780  ED536EFF      		ld	(DEDY+2),de
  4784  2AAFFE        		ld	hl,(YRAD)
  4787  D1            		pop	de		;8aa (high)
  4788  D5            		push	de
  4789  CD6B24        		call	MULINT2		;8aa*b=8aab (high)
  478C  ED4B6EFF      		ld	bc,(DEDY+2)
  4790  09            		add	hl,bc
  4791  226EFF        		ld	(DEDY+2),hl
  4794  3001          		jr	nc,CRCLNC4
  4796  13            		inc	de
  4797                	CRCLNC4:
  4797  ED5370FF      		ld	(DEDY+4),de
                      	
                      	;err_ini=aa(1-4b)
  479B  2171FF        		ld	hl,DEDY+5
  479E  CDBB49        		call	ERRINI
                      	
  47A1  210000        		ld	hl,0000h	;x=0
  47A4  22B1FE        		ld	(GRPX3),hl
  47A7  2AAFFE        		ld	hl,(YRAD)	;y=y-radius
  47AA  22B3FE        		ld	(GRPY3),hl
                      	
  47AD                	CRCLLP2:
  47AD  0602          		ld	b,02h
  47AF  CD2C48        		call	CRCLPSET
  47B2  2AB1FE        		ld	hl,(GRPX3)
  47B5  23            		inc	hl
  47B6  22B1FE        		ld	(GRPX3),hl
                      	
                      	;de/dx+=8bb
                      	;err+=de/dx
  47B9  D9            		exx
  47BA  2165FF        		ld	hl,DEDX
  47BD  CD6A49        		call	ADD6		;exx
                      	
                      	;if err>=0 and y>0 then y=y-1:de/dy-=8aa:err-=de/dy
  47C0  07            		rlca
  47C1  3815          		jr	c,CRCLC2
  47C3  2AB3FE        		ld	hl,(GRPY3)
  47C6  7C            		ld	a,h
  47C7  B5            		or	l
  47C8  280E          		jr	z,CRCLC2
  47CA  2B            		dec	hl
  47CB  22B3FE        		ld	(GRPY3),hl	;y=y-1
                      	
                      	;de/dy-=8aa
                      	;err-=de/dy
  47CE  C1            		pop	bc		;8aa
  47CF  D1            		pop	de
  47D0  D5            		push	de		;8aa
  47D1  C5            		push	bc
  47D2  216CFF        		ld	hl,DEDY
  47D5  CD9249        		call	SUB6
                      	
  47D8                	CRCLC2:
                      	;if de/dx<de/dy or (de/dy=0 and x<a) then loop
  47D8  116AFF        		ld	de,DEDX+5
  47DB  2171FF        		ld	hl,DEDY+5
  47DE  CD0B4A        		call	CMP6
  47E1  38CA          		jr	c,CRCLLP2
  47E3  216CFF        		ld	hl,DEDY
  47E6  CD154A        		call	CHKZ6
  47E9  200B          		jr	nz,CRCLNZ2
  47EB  2AB1FE        		ld	hl,(GRPX3)
  47EE  ED5BADFE      		ld	de,(XRAD)
                      	;	or	a
  47F2  ED52          		sbc	hl,de
  47F4  38B7          		jr	c,CRCLLP2
                      	
  47F6                	CRCLNZ2:
  47F6  C1            		pop	bc		;8aa
  47F7  D1            		pop	de
                      	
                      	
  47F8  2A78FF        		ld	hl,(STARTX)
  47FB  ED5B7AFF      		ld	de,(STARTY)
  47FF  F1            		pop	af		;sign of start angle
  4800  CD0B48        		call	CRCLLINE
  4803  2A7CFF        		ld	hl,(ENDX)
  4806  ED5B7EFF      		ld	de,(ENDY)
  480A  F1            		pop	af		;sign of start angle
                      	;	jr	CRCLLINE
                      	
                      	;for circle command
                      	;draw line from center
                      	;input: hl=x-xcenter, de=-(y-ycenter), a=sign of angle(bit7=1:minus)
                      	;destroy: af,bc,
  480B                	CRCLLINE:
  480B  ED4BAEFD      		ld	bc,(GRPX1)	;xcenter
  480F  09            		add	hl,bc
  4810  22ADFE        		ld	(GRPX2),hl
  4813  2AB0FD        		ld	hl,(GRPY1)	;ycenter
  4816  B7            		or	a
  4817  ED52          		sbc	hl,de
  4819  22AFFE        		ld	(GRPY2),hl
  481C  19            		add	hl,de
  481D  EB            		ex	de,hl
                      	
  481E  07            		rlca
  481F  3808          		jr	c,CRCLLC	;if angle<0
  4821  ED4BADFE      		ld	bc,(GRPX2)
  4825  ED5BAFFE      		ld	de,(GRPY2)
  4829                	CRCLLC:
  4829  C31F2E        		jp	LINE
                      	
                      	
                      	;input: b(1:condition=y, 2:condition=x)
                      	;destroy: af,bc,de,hl,af'
  482C                	CRCLPSET:
  482C  CD4D27        		call	STOPESC
                      	
  482F  2A7AFF        		ld	hl,(STARTY)
  4832  ED5BB3FE      		ld	de,(GRPY3)
  4836  E5            		push	hl
  4837  D5            		push	de
  4838  2A78FF        		ld	hl,(STARTX)
  483B  ED5BB1FE      		ld	de,(GRPX3)
                      	
  483F  3A81FF        		ld	a,(CRCLFLG)
  4842  E603          		and	03h		;bit10=start quad.(3,2,1.0)
  4844  2828          		jr	z,STARTQ4
  4846  EA7F48        		jp	pe,STARTQ1
  4849  0F            		rrca
  484A  3812          		jr	c,STARTQ3
                      	
  484C                	STARTQ2:
  484C  100A          		djnz	STARTQ2X
  484E  D1            		pop	de
  484F  E1            		pop	hl
  4850  B7            		or	a
  4851  ED52          		sbc	hl,de
  4853  CB04          		rlc	h
  4855  3F            		ccf			;y<=STARTY?
  4856  1839          		jr	STARTQEND
  4858                	STARTQ2X:
  4858  19            		add	hl,de
  4859  CB04          		rlc	h
  485B  3F            		ccf			;-x<=STARTX?
  485C  1831          		jr	STARTQ1XEND
                      	
  485E                	STARTQ3:
  485E  1008          		djnz	STARTQ3X
  4860  D1            		pop	de
  4861  E1            		pop	hl
  4862  19            		add	hl,de
  4863  CB04          		rlc	h
  4865  3F            		ccf			;-y<=STARTY?
  4866  1829          		jr	STARTQEND
  4868                	STARTQ3X:
  4868  2B            		dec	hl
  4869  19            		add	hl,de
  486A  CB04          		rlc	h		;-x>=STARTX?
  486C  1821          		jr	STARTQ1XEND
                      	
  486E                	STARTQ4:
  486E  1008          		djnz	STARTQ4X
  4870  D1            		pop	de
  4871  E1            		pop	hl
  4872  2B            		dec	hl
  4873  19            		add	hl,de
  4874  CB04          		rlc	h		;-y>=STARTY?
  4876  1819          		jr	STARTQEND
  4878                	STARTQ4X:
  4878  37            		scf
  4879  ED52          		sbc	hl,de
  487B  CB04          		rlc	h		;x>=STARTX?
  487D  1810          		jr	STARTQ1XEND
                      	
                      	;1st quad.
  487F                	STARTQ1:
  487F  1009          		djnz	STARTQ1X
  4881  D1            		pop	de
  4882  E1            		pop	hl
  4883  37            		scf
  4884  ED52          		sbc	hl,de
  4886  CB04          		rlc	h		;y>=STARTY?
  4888  1807          		jr	STARTQEND
  488A                	STARTQ1X:
                      	;	or	a
  488A  ED52          		sbc	hl,de
  488C  CB04          		rlc	h
  488E  3F            		ccf			;x<=STARTX?
                      	
  488F                	STARTQ1XEND:
  488F  D1            		pop	de
  4890  E1            		pop	hl
                      	
  4891                	STARTQEND:
  4891  CB11          		rl	c		;start ok?
                      	
  4893  2A7CFF        		ld	hl,(ENDX)
  4896  ED5BB1FE      		ld	de,(GRPX3)
  489A  E5            		push	hl
  489B  D5            		push	de
  489C  2A7EFF        		ld	hl,(ENDY)
  489F  ED5BB3FE      		ld	de,(GRPY3)
                      	
  48A3  3A81FF        		ld	a,(CRCLFLG)
  48A6  E60C          		and	0ch		;bit32=start quad.(3,2,1.0)
  48A8  2828          		jr	z,ENDQ4
  48AA  EAE348        		jp	pe,ENDQ1
  48AD  E604          		and	04h
  48AF  2011          		jr	nz,ENDQ3
                      	
  48B1                	ENDQ2:
  48B1  1008          		djnz	ENDQ2Y
  48B3  D1            		pop	de
  48B4  E1            		pop	hl
  48B5  2B            		dec	hl
  48B6  19            		add	hl,de
  48B7  CB04          		rlc	h		;-x>=ENDX?
  48B9  183B          		jr	ENDQEND
  48BB                	ENDQ2Y:
  48BB  37            		scf
  48BC  ED52          		sbc	hl,de
  48BE  CB04          		rlc	h		;y>=ENDY?
  48C0  1832          		jr	ENDQ1YEND
                      	
  48C2                	ENDQ3:
  48C2  1008          		djnz	ENDQ3Y
  48C4  D1            		pop	de
  48C5  E1            		pop	hl
  48C6  19            		add	hl,de
  48C7  CB04          		rlc	h
  48C9  3F            		ccf			;-x<=ENDX?
  48CA  182A          		jr	ENDQEND
  48CC                	ENDQ3Y:
  48CC  2B            		dec	hl
  48CD  19            		add	hl,de
  48CE  CB04          		rlc	h		;-y>=ENDY?
  48D0  1822          		jr	ENDQ1YEND
                      	
  48D2                	ENDQ4:
  48D2  1009          		djnz	ENDQ4Y
  48D4  D1            		pop	de
  48D5  E1            		pop	hl
                      	;	or	a
  48D6  ED52          		sbc	hl,de
  48D8  CB14          		rl	h
  48DA  3F            		ccf			;x<=ENDX?
  48DB  1819          		jr	ENDQEND
  48DD                	ENDQ4Y:
  48DD  19            		add	hl,de
  48DE  CB04          		rlc	h
  48E0  3F            		ccf			;-y<=ENDY?
  48E1  1811          		jr	ENDQ1YEND
                      	
  48E3                	ENDQ1:
  48E3  1009          		djnz	ENDQ1Y
  48E5  D1            		pop	de
  48E6  E1            		pop	hl
  48E7  37            		scf
  48E8  ED52          		sbc	hl,de
  48EA  CB04          		rlc	h		;x>=ENDX?
  48EC  1808          		jr	ENDQEND
  48EE                	ENDQ1Y:
  48EE  B7            		or	a
  48EF  ED52          		sbc	hl,de
  48F1  CB04          		rlc	h
  48F3  3F            		ccf			;y<=ENDY?
  48F4                	ENDQ1YEND:
  48F4  D1            		pop	de
  48F5  E1            		pop	hl
  48F6                	ENDQEND:
  48F6  CB11          		rl	c		;bit1=start ok, bit0=end ok
                      	
  48F8  3A81FF        		ld	a,(CRCLFLG)	;bit4=start<=end?, bit32=end quad., bit10=start quad.
  48FB  47            		ld	b,a
  48FC  0F            		rrca
  48FD  0F            		rrca
  48FE  90            		sub	b
  48FF  E603          		and	03h		;end quadrant-start quadrant
  4901  87            		add	a,a
  4902  87            		add	a,a
  4903  2004          		jr	nz,CRCLPNZ
  4905  A8            		xor	b
  4906  E6EF          		and	0efh		;copy b-bit4
  4908  A8            		xor	b
  4909                	CRCLPNZ:
  4909  A9            		xor	c
  490A  E6FC          		and	0fch		;copy c-bit1,0
  490C  A9            		xor	c
  490D  5F            		ld	e,a
  490E  1600          		ld	d,00h
  4910  214646        		ld	hl,CRCLFDATA
  4913  19            		add	hl,de
                      	
  4914  78            		ld	a,b		;(CRCLFLG)
  4915  E603          		and	03h		;start quad.
  4917  47            		ld	b,a
  4918  7E            		ld	a,(hl)
  4919  04            		inc	b
  491A                	CRCLPLP:
  491A  07            		rlca
  491B  10FD          		djnz	CRCLPLP
  491D  08            		ex	af,af'
                      	
  491E  2AAEFD        		ld	hl,(GRPX1)	;xcenter
  4921  ED5BB1FE      		ld	de,(GRPX3)	;x
  4925  B7            		or	a
  4926  ED52          		sbc	hl,de
  4928  E5            		push	hl		;xcenter-x
  4929  19            		add	hl,de
  492A  19            		add	hl,de
  492B  44            		ld	b,h
  492C  4D            		ld	c,l
                      	
  492D  2AB0FD        		ld	hl,(GRPY1)	;ycenter
  4930  ED5BB3FE      		ld	de,(GRPY3)	;y
  4934  B7            		or	a
  4935  ED52          		sbc	hl,de
  4937  E5            		push	hl		;ycenter-y
  4938  19            		add	hl,de
  4939  19            		add	hl,de
  493A  EB            		ex	de,hl
                      	
  493B  D5            		push	de		;ycenter+y
  493C  C5            		push	bc		;xcenter+x
                      	
  493D  08            		ex	af,af'
  493E  67            		ld	h,a
  493F  08            		ex	af,af'
  4940  CB64          		bit	4,h
                      	
  4942  C4472D        		call	nz,PSET		;4th quadrant (xcenter+x,ycenter+y)
                      	
  4945  C1            		pop	bc
  4946  E1            		pop	hl
  4947  D1            		pop	de
  4948  E5            		push	hl
  4949  D5            		push	de
                      	
  494A  08            		ex	af,af'
  494B  67            		ld	h,a
  494C  08            		ex	af,af'
  494D  CB7C          		bit	7,h
                      	
  494F  C4472D        		call	nz,PSET		;1st quadrant (xcenter+x,ycenter-y)
  4952  D1            		pop	de
  4953  E1            		pop	hl
  4954  C1            		pop	bc
  4955  E5            		push	hl
  4956  C5            		push	bc
                      	
  4957  08            		ex	af,af'
  4958  67            		ld	h,a
  4959  08            		ex	af,af'
  495A  CB74          		bit	6,h
                      	
  495C  C4472D        		call	nz,PSET		;2nd quadrant (xcenter-x,ycenter-y)
  495F  C1            		pop	bc
  4960  D1            		pop	de
                      	
  4961  08            		ex	af,af'
  4962  67            		ld	h,a
  4963  08            		ex	af,af'
  4964  CB6C          		bit	5,h
                      	
  4966  C8            		ret	z
  4967  C3472D        		jp	PSET		;3rd quadrant (xcenter-x,ycenter+y)
                      	
                      	
                      	;for circle command
                      	;add 6-byte integer and 4-byte integer
                      	;add 6-byte integer and 6-byte integer
                      	;(hl6)=(hl6)+00bcde, (ERR6)=(ERR6)+(hl6)
                      	;input: bcde, hl=data address
                      	;output: a=(ERR+5), bcde'=bcde
                      	;destroy: f,bc,de,hl,hl'
  496A                	ADD6:
                      	;(hl6)=(hl6)+bcde
  496A  E5            		push	hl
  496B  7E            		ld	a,(hl)
  496C  83            		add	a,e
  496D  77            		ld	(hl),a
  496E  23            		inc	hl
                      	
  496F  7E            		ld	a,(hl)
  4970  8A            		adc	a,d
  4971  77            		ld	(hl),a
  4972  23            		inc	hl
                      	
  4973  7E            		ld	a,(hl)
  4974  89            		adc	a,c
  4975  77            		ld	(hl),a
  4976  23            		inc	hl
                      	
  4977  7E            		ld	a,(hl)
  4978  88            		adc	a,b
  4979  77            		ld	(hl),a
  497A  23            		inc	hl
                      	
  497B  3005          		jr	nc,ADD6NC
  497D  34            		inc	(hl)
  497E  2002          		jr	nz,ADD6NC
  4980  23            		inc	hl
  4981  34            		inc	(hl)
  4982                	ADD6NC:
  4982  D9            		exx
  4983  E1            		pop	hl
                      	
                      	;(ERR6)=(ERR6)+(hl6)
  4984  B7            		or	a
  4985  1172FF        		ld	de,ERR
  4988  0606          		ld	b,06h
  498A                	ADD6LP:
  498A  1A            		ld	a,(de)
  498B  8E            		adc	a,(hl)
  498C  12            		ld	(de),a
  498D  13            		inc	de
  498E  23            		inc	hl
  498F  10F9          		djnz	ADD6LP
  4991  C9            		ret
                      	
                      	
                      	;for circle command
                      	;subtract 4-byte integer from 6-byte integer
                      	;subtract 6-byte integer from 6-byte integer
                      	;(hl6)=(hl6)-00bcde, (ERR6)=(ERR6)-(hl6)
                      	;input: bcde, hl=data address
                      	;destroy: f,b,de,hl
  4992                	SUB6:
                      	;(hl6)=(hl6)-bcde
  4992  E5            		push	hl
  4993  7E            		ld	a,(hl)
  4994  93            		sub	e
  4995  77            		ld	(hl),a
  4996  23            		inc	hl
                      	
  4997  7E            		ld	a,(hl)
  4998  9A            		sbc	a,d
  4999  77            		ld	(hl),a
  499A  23            		inc	hl
                      	
  499B  7E            		ld	a,(hl)
  499C  99            		sbc	a,c
  499D  77            		ld	(hl),a
  499E  23            		inc	hl
                      	
  499F  7E            		ld	a,(hl)
  49A0  98            		sbc	a,b
  49A1  77            		ld	(hl),a
  49A2  3008          		jr	nc,SUB6NC
                      	
  49A4  23            		inc	hl
  49A5  7E            		ld	a,(hl)
  49A6  35            		dec	(hl)
  49A7  B7            		or	a
  49A8  2002          		jr	nz,SUB6NC
  49AA  23            		inc	hl
  49AB  35            		dec	(hl)
  49AC                	SUB6NC:
  49AC  E1            		pop	hl
                      	
                      	;(ERR6)=(ERR6)-(hl6)
  49AD  B7            		or	a
  49AE  1172FF        		ld	de,ERR
  49B1  0606          		ld	b,06h
  49B3                	SUB6LP:
  49B3  1A            		ld	a,(de)
  49B4  9E            		sbc	a,(hl)
  49B5  12            		ld	(de),a
  49B6  13            		inc	de
  49B7  23            		inc	hl
  49B8  10F9          		djnz	SUB6LP
  49BA  C9            		ret
                      	
                      	
                      	;for circle command
                      	;(ERR6)=4-byte integer-(hl6)/2
                      	;input: hl=data address+5
                      	;pushed: *,*,high,low
                      	;destroy: af,bc,de,hl
  49BB                	ERRINI:
  49BB  1177FF        		ld	de,ERR+5
  49BE  B7            		or	a
  49BF  0606          		ld	b,06h
  49C1                	ERRINILP:
  49C1  7E            		ld	a,(hl)
  49C2  1F            		rra
  49C3  12            		ld	(de),a
  49C4  2B            		dec	hl
  49C5  1B            		dec	de
  49C6  10F9          		djnz	ERRINILP
                      	
  49C8  F1            		pop	af		;return address
  49C9  C1            		pop	bc		;8aa or 8bb
  49CA  E1            		pop	hl
  49CB  D1            		pop	de		;aa or bb
  49CC  E3            		ex	(sp),hl
  49CD  C5            		push	bc
  49CE  F5            		push	af		;return address
                      	
                      	
                      	;(ERR6)=00dehl-(ERR6)
  49CF  D5            		push	de		;
  49D0  ED5B72FF      		ld	de,(ERR)
  49D4  AF            		xor	a
  49D5  ED52          		sbc	hl,de
  49D7  2272FF        		ld	(ERR),hl
  49DA  E1            		pop	hl		;
  49DB  ED5B74FF      		ld	de,(ERR+2)
  49DF  ED52          		sbc	hl,de
  49E1  2274FF        		ld	(ERR+2),hl
  49E4  67            		ld	h,a
  49E5  6F            		ld	l,a		;=0
  49E6  ED5B76FF      		ld	de,(ERR+4)
  49EA  ED52          		sbc	hl,de
  49EC  2276FF        		ld	(ERR+4),hl
  49EF  C9            		ret
                      	
                      	
                      	;negate 6-byte integer
                      	;(hl6)=-00bcde
                      	;input: bcde, hl=output address
                      	;destroy: af,de,hl
  49F0                	NEG6:
  49F0  E5            		push	hl		;
  49F1  AF            		xor	a
  49F2  67            		ld	h,a
  49F3  6F            		ld	l,a
  49F4  ED52          		sbc	hl,de
  49F6  EB            		ex	de,hl
  49F7  E1            		pop	hl		;
  49F8  73            		ld	(hl),e
  49F9  23            		inc	hl
  49FA  72            		ld	(hl),d
  49FB  23            		inc	hl
  49FC  EB            		ex	de,hl
  49FD  67            		ld	h,a
  49FE  6F            		ld	l,a
  49FF  ED42          		sbc	hl,bc
  4A01  EB            		ex	de,hl
  4A02  73            		ld	(hl),e
  4A03  23            		inc	hl
  4A04  72            		ld	(hl),d
  4A05  23            		inc	hl
  4A06  9F            		sbc	a,a
  4A07  77            		ld	(hl),a
  4A08  23            		inc	hl
  4A09  77            		ld	(hl),a
  4A0A  C9            		ret
                      	
                      	
                      	;compare 6-byte integer
                      	;input: de,hl=data address+5 (de-hl)
                      	;output: c,z-flag
                      	;destroy: af,b,de,hl
  4A0B                	CMP6:
  4A0B  0606          		ld	b,06h
  4A0D                	CMP6LP:
  4A0D  1A            		ld	a,(de)
  4A0E  BE            		cp	(hl)
  4A0F  C0            		ret	nz
  4A10  1B            		dec	de
  4A11  2B            		dec	hl
  4A12  10F9          		djnz	CMP6LP
  4A14  C9            		ret
                      	
                      	;check zero or not for 6-byte integer
                      	;input: hl=data address
                      	;destroy: af,b,hl
  4A15                	CHKZ6:
  4A15  AF            		xor	a
  4A16  0606          		ld	b,06h
  4A18                	CHKZ6LP:
  4A18  B6            		or	(hl)
  4A19  23            		inc	hl
  4A1A  10FC          		djnz	CHKZ6LP
  4A1C  C9            		ret
                      	
                      	
  4A1D                	_C_CRCL:ds	C_CRCL-_C_CRCL
  4A72                		org	C_CRCL
                      	
  4A72  3A93FD        		ld	a,(COLOR1)
  4A75  CDC015        		call	SETATT
  4A78  CDF72C        		call	GETGXY
  4A7B  C2C203        		jp	nz,SNERR
  4A7E  23            		inc	hl
  4A7F  CD190E        		call	INT2ARG		;radius
  4A82  7A            		ld	a,d
  4A83  07            		rlca
  4A84  DACB03        		jp	c,FCERR		;if radius<0
  4A87  ED53ADFE      		ld	(XRAD),de
                      	
  4A8B  21D700        		ld	hl,00d7h	;default aspect ratio=215/256
  4A8E  22E6FF        		ld	(ASPECT),hl
  4A91  CD2A0C        		call	SETZERO		;default start angle=0
  4A94  CD1F39        		call	PUSHF1
  4A97  211A3E        		ld	hl,PI2		;default end angle=2pi
  4A9A  CD2D0C        		call	SETF1
  4A9D  CD1F39        		call	PUSHF1
                      	
  4AA0  2A4EFF        		ld	hl,(PROGAD)
  4AA3  CD823F        		call	CHKCLCM
  4AA6  CA5A46        		jp	z,CRCLMAIN
  4AA9  CD723F        		call	CHKCMM
  4AAC  280C          		jr	z,CRCLPAR3
  4AAE  CDE40D        		call	INT1ARG		;color
  4AB1  CDC015        		call	SETATT
                      	
  4AB4  CD823F        		call	CHKCLCM
  4AB7  CA5A46        		jp	z,CRCLMAIN
                      	
  4ABA                	CRCLPAR3:
  4ABA  CD723F        		call	CHKCMM
  4ABD  2818          		jr	z,CRCLPAR4
  4ABF  CD650B        		call	NUMARG		;start angle
                      	
  4AC2  CD4C39        		call	POPF2		;default end angle
  4AC5  F1            		pop	af		;cancel default start angle
  4AC6  F1            		pop	af
  4AC7  F1            		pop	af
  4AC8  CD1F39        		call	PUSHF1		;new start angle
  4ACB  CD2E39        		call	PUSHF2		;default end angle
                      	
                      	;	ld	hl,FAC1+3
                      	;	res	7,(hl)
                      	;	ld	hl,PI2
                      	;	call	SETCMPF
                      	;	jp	nc,FCERR	;if angle>=|2pi| error
                      	
  4ACE  2A4EFF        		ld	hl,(PROGAD)
  4AD1  CD823F        		call	CHKCLCM
  4AD4  CA5A46        		jp	z,CRCLMAIN
                      	
  4AD7                	CRCLPAR4:
  4AD7  CD723F        		call	CHKCMM
  4ADA  2812          		jr	z,CRCLPAR5
  4ADC  CD650B        		call	NUMARG		;end angle
  4ADF  F1            		pop	af		;cancel default end angle
  4AE0  F1            		pop	af
  4AE1  F1            		pop	af
  4AE2  CD1F39        		call	PUSHF1		;new end angle
                      	
                      	;	ld	hl,FAC1+3
                      	;	res	7,(hl)
                      	;	ld	hl,PI2
                      	;	call	SETCMPF
                      	;	jp	nc,FCERR	;if angle>=|2pi| error
                      	
  4AE5  2A4EFF        		ld	hl,(PROGAD)
  4AE8  CD823F        		call	CHKCLCM
  4AEB  CA5A46        		jp	z,CRCLMAIN
                      	
  4AEE                	CRCLPAR5:
  4AEE  CD650B        		call	NUMARG		;aspect ratio
  4AF1  2A69FF        		ld	hl,(FAC1+3)
  4AF4  7D            		ld	a,l		;(FAC1+3)
  4AF5  07            		rlca
  4AF6  7C            		ld	a,h		;(FAC1+4)
  4AF7  301A          		jr	nc,ASPPOS
                      	
                      	;aspect ratio < 0
  4AF9                	ASPNEG:
  4AF9  FE89          		cp	89h
  4AFB  D2CB03        		jp	nc,FCERR	;aspect ratio <= -256
  4AFE  CD5B39        		call	CPYFAC
  4B01  CDEE0C        		call	GETINT
  4B04  CD8836        		call	SUBF
  4B07  CD2D0D        		call	NEGABSNZ
  4B0A  CD7D36        		call	INCF1
                      	;	jr	ASPSMALL
                      	
                      	;0 <= aspect ratio < 1
  4B0D                	ASPSMALL:
  4B0D  CD444B        		call	SETASP
  4B10  C35A46        		jp	CRCLMAIN
                      	
                      	;aspect ratio >= 0
  4B13                	ASPPOS:
  4B13  FE81          		cp	81h
  4B15  38F6          		jr	c,ASPSMALL
                      	
                      	;aspect ratio >= 1
  4B17                	ASPLARGE:
  4B17  CD5B39        		call	CPYFAC
  4B1A  2AADFE        		ld	hl,(XRAD)
  4B1D  22AFFE        		ld	(YRAD),hl
                      	
  4B20  7C            		ld	a,h
  4B21  B5            		or	l
  4B22  CA6A46        		jp	z,CRCLMAIN2
                      	
  4B25  CD680C        		call	I2TOF
  4B28  CD1F39        		call	PUSHF1		;y-radius(=r)
  4B2B  CD5E38        		call	DIVF		;r/asp
  4B2E  CDBD0C        		call	FTOI
  4B31  EB            		ex	de,hl
  4B32  22ADFE        		ld	(XRAD),hl	;xrad=r/asp
  4B35  CD680C        		call	I2TOF
  4B38  CD4C39        		call	POPF2		;y-radius
  4B3B  CD5E38        		call	DIVF		;1/asp
  4B3E  CD444B        		call	SETASP		;replace aspect ratio by 256/asp
  4B41  C36A46        		jp	CRCLMAIN2
                      	
                      	
                      	;set aspect ratio
                      	;input: FAC1=aspect ratio
                      	;output: de=aspect ratio*256 (round)
  4B44                	SETASP:
  4B44  216AFF        		ld	hl,FAC1+4
  4B47  7E            		ld	a,(hl)
  4B48  C609          		add	a,09h		;*512
  4B4A  77            		ld	(hl),a
  4B4B  CDBD0C        		call	FTOI
  4B4E  CB3A          		srl	d		;/2
  4B50  CB1B          		rr	e
  4B52  3001          		jr	nc,SETASPNC
  4B54  13            		inc	de
  4B55                	SETASPNC:
  4B55  ED53E6FF      		ld	(ASPECT),de
  4B59  C9            		ret
                      	
                      	
                      	;input: FAC1=angle
                      	;output: hl=x=r*cos (signed), de=y=r*sin (signed), b=quadrant(3,2,1,0)
                      	;destroy: af,c,af',bc',de',hl'
  4B5A                	ANGL2XY:
  4B5A  2AADFE        		ld	hl,(XRAD)
  4B5D  ED5BAFFE      		ld	de,(YRAD)
  4B61  B7            		or	a
  4B62  ED52          		sbc	hl,de
  4B64  F5            		push	af		;YRAD>XRAD?
  4B65  3802          		jr	c,ANGL2XYC1
  4B67  19            		add	hl,de
  4B68  EB            		ex	de,hl
  4B69                	ANGL2XYC1:
  4B69  D5            		push	de		;radius
  4B6A  CD984B        		call	CORDIC		;hl=cos, de=sin
  4B6D  E3            		ex	(sp),hl		;push cos, pop radius
  4B6E  F1            		pop	af		;cos
  4B6F  C5            		push	bc		;b=quadrant(4,3,2,1)
  4B70  F5            		push	af		;cos
                      	
  4B71  E5            		push	hl		;radius
  4B72  CD674C        		call	MULRCS		;de=r*sin
  4B75  E1            		pop	hl		;radius
  4B76  EB            		ex	de,hl
  4B77  E3            		ex	(sp),hl		;push r*sin, pop cos
  4B78  CD674C        		call	MULRCS		;de=r*cos
  4B7B  E1            		pop	hl		;r*sin
                      	
  4B7C  C1            		pop	bc		;b=quadrant(4,3,2,1)
  4B7D  F1            		pop	af		;YRAD>XRAD?
  4B7E  C5            		push	bc		;b=quadrant(4,3,2,1)
  4B7F  380C          		jr	c,ANGL2XYC2
                      	
                      	;aspect ratio<=1
  4B81  D5            		push	de		;r*cos
  4B82  ED5BE6FF      		ld	de,(ASPECT)
  4B86  CD724C        		call	MULINT2SR	;hl=r*sin*aspect ratio
  4B89  EB            		ex	de,hl		;de=r*sin*aspect ratio
  4B8A  E1            		pop	hl		;r*cos
  4B8B  1808          		jr	ANGL2XYEND
                      	
                      	;aspect ratio>1
  4B8D                	ANGL2XYC2:
  4B8D  E5            		push	hl		;r*sin
  4B8E  2AE6FF        		ld	hl,(ASPECT)
  4B91  CD724C        		call	MULINT2SR	;hl=r*cos*(1/aspect ratio)
  4B94  D1            		pop	de		;r*sin
                      	
  4B95                	ANGL2XYEND:
  4B95  C1            		pop	bc		;b=quadrant(4,3,2,1)
  4B96  05            		dec	b		;3,2,1,0
  4B97  C9            		ret
                      	
                      	
                      	;CORDIC correction factor
                      	;9949/16384=0.6073=cos(atan(1))*cos(atan(1/2))*cos(atan(1/4))*...
  26DD                	CORR	equ	9949
                      	
                      	;CORDIC algorithm
                      	;input: FAC1=angle
                      	;output: hl=cos, de=sin (2bit.14bit), b=quardrant(4,3,2,1)
                      	;destroy: af,c,af',bc',de',hl'
  4B98                	CORDIC:
  4B98  CD1939        		call	ABS
  4B9B  0604          		ld	b,04h
  4B9D                	CRDCLP1:
  4B9D  D9            		exx
  4B9E  21883D        		ld	hl,PIDIV2
  4BA1  CD1F3F        		call	SETCMPF
  4BA4  3816          		jr	c,CRDCC1
  4BA6  CD8836        		call	SUBF
  4BA9  D9            		exx
  4BAA  10F1          		djnz	CRDCLP1
                      	
  4BAC  3A6AFF        		ld	a,(FAC1+4)
  4BAF  FE66          		cp	66h
  4BB1  D2CB03        		jp	nc,FCERR
  4BB4  04            		inc	b		;4th quadrant
  4BB5  D9            		exx
  4BB6  21883D        		ld	hl,PIDIV2
  4BB9  CD2D0C        		call	SETF1
                      	
  4BBC                	CRDCC1:
  4BBC  D9            		exx
  4BBD  21DD26        		ld	hl,CORR		;initial cos (2bit.14bit)
  4BC0  54            		ld	d,h		;initial sin (2bit.14bit)
  4BC1  5D            		ld	e,l
                      	
  4BC2  C5            		push	bc		;b=quadrant(4,3,2,1)
  4BC3  78            		ld	a,b
  4BC4  FE03          		cp	03h
  4BC6  2808          		jr	z,QUAD2		;2nd quadrant
  4BC8  3009          		jr	nc,QUAD1	;1st quadrant
  4BCA  1123D9        		ld	de,0-CORR
  4BCD  3D            		dec	a
  4BCE  2803          		jr	z,QUAD4		;4th quadrant
                      	;	jr	nz,QUAD3	;3rd quadrant
                      	
  4BD0                	QUAD3:
  4BD0                	QUAD2:
  4BD0  2123D9        		ld	hl,0-CORR
  4BD3                	QUAD4:
  4BD3                	QUAD1:
  4BD3  D9            		exx
                      	
                      	
  4BD4  216AFF        		ld	hl,FAC1+4
  4BD7  7E            		ld	a,(hl)
  4BD8  B7            		or	a
  4BD9  2803          		jr	z,CRDCZ1
  4BDB  C60F          		add	a,0fh		;*32768
  4BDD  77            		ld	(hl),a
                      	
  4BDE                	CRDCZ1:
  4BDE  CDBD0C        		call	FTOI
  4BE1  21474C        		ld	hl,ATAN
  4BE4  D9            		exx
                      	
  4BE5  AF            		xor	a
  4BE6  08            		ex	af,af'		;sign of residual angle
                      	
  4BE7  010010        		ld	bc,1000h
  4BEA                	CRDCLP2:
                      	
                      	;residual angle (1bit.15bit)
  4BEA  D9            		exx
  4BEB  4E            		ld	c,(hl)
  4BEC  23            		inc	hl
  4BED  46            		ld	b,(hl)
  4BEE  23            		inc	hl
  4BEF  EB            		ex	de,hl
  4BF0  08            		ex	af,af'		;sign of residual angle
  4BF1  2004          		jr	nz,CRDCNZ
  4BF3  B7            		or	a
  4BF4  ED42          		sbc	hl,bc
  4BF6  3E            		db	3eh		;ld a,
  4BF7                	CRDCNZ:
  4BF7  09            		add	hl,bc
  4BF8  CB7C          		bit	7,h
  4BFA  08            		ex	af,af'		;sign of residual angle
  4BFB  EB            		ex	de,hl
  4BFC  D9            		exx
                      	
  4BFD  0C            		inc	c
  4BFE  C5            		push	bc
  4BFF  D5            		push	de		;sin
  4C00  E5            		push	hl		;cos
  4C01  41            		ld	b,c
  4C02                	CRDCLP3:
  4C02  CB2C          		sra	h
  4C04  CB1D          		rr	l
  4C06  1F            		rra
  4C07  CB2A          		sra	d
  4C09  CB1B          		rr	e
  4C0B  10F5          		djnz	CRDCLP3
                      	
  4C0D  3001          		jr	nc,CRDCNC1
  4C0F  13            		inc	de
  4C10                	CRDCNC1:
  4C10  07            		rlca
  4C11  3001          		jr	nc,CRDCNC2
  4C13  23            		inc	hl
  4C14                	CRDCNC2:
                      	
  4C14  E3            		ex	(sp),hl
  4C15  08            		ex	af,af'		;sign of residual angle
  4C16  280A          		jr	z,CRDCZ2
                      	
                      	;residual<0
  4C18  08            		ex	af,af'		;sign of residual angle
  4C19  19            		add	hl,de		;cos=cos+(sin>>c)
  4C1A  EB            		ex	de,hl
  4C1B  C1            		pop	bc		;cos>>c
  4C1C  E1            		pop	hl		;sin
  4C1D  B7            		or	a
  4C1E  ED42          		sbc	hl,bc		;sin=sin-(cos>>c)
  4C20  1808          		jr	CRDCLP2END
                      	
  4C22                	CRDCZ2:
                      	;residual>0
  4C22  08            		ex	af,af'		;sign of residual angle
  4C23  B7            		or	a
  4C24  ED52          		sbc	hl,de		;cos=cos-(sin>>c)
  4C26  EB            		ex	de,hl
  4C27  C1            		pop	bc		;cos>>c
  4C28  E1            		pop	hl		;sin
  4C29  09            		add	hl,bc		;sin=sin+(cos>>c)
                      	
  4C2A                	CRDCLP2END:
  4C2A  EB            		ex	de,hl
  4C2B  C1            		pop	bc
  4C2C  10BC          		djnz	CRDCLP2
                      	
                      	;round hl
  4C2E  7D            		ld	a,l
  4C2F  FE03          		cp	03h
  4C31  3805          		jr	c,CRDCC2
  4C33  FEFE          		cp	0feh
  4C35  3803          		jr	c,CRDCC3
  4C37  24            		inc	h
  4C38                	CRDCC2:
  4C38  2E00          		ld	l,00h
  4C3A                	CRDCC3:
                      	
  4C3A  C1            		pop	bc		;b=quadrant(4,3,2,1)
                      	;round de
  4C3B  7B            		ld	a,e
  4C3C  FE03          		cp	03h
  4C3E  3804          		jr	c,CRDCC4
  4C40  FEFE          		cp	0feh
  4C42  D8            		ret	c
  4C43  14            		inc	d
  4C44                	CRDCC4:
  4C44  1E00          		ld	e,00h
  4C46  C9            		ret
                      	
                      	
  4C47                	ATAN:
  4C47  8864          		dw	25736	;atan(1)*32768
  4C49  593B          		dw	15193	;atan(1/2)*32768
  4C4B  5B1F          		dw	8027	;atan(1/4)*32768
  4C4D  EB0F          		dw	4075	;atan(1/8)*32768
  4C4F  FD07          		dw	2045	;atan(1/16)*32768
  4C51  0004          		dw	1024	;atan(1/32)*32768
  4C53  0002          		dw	512	;atan(1/64)*32768
  4C55  0001          		dw	256	;atan(1/128)*32768
  4C57  8000          		dw	128	;atan(1/256)*32768
  4C59  4000          		dw	64	;atan(1/512)*32768
  4C5B  2000          		dw	32	;atan(1/1024)*32768
  4C5D  1000          		dw	16	;atan(1/2048)*32768
  4C5F  0800          		dw	8	;atan(1/4096)*32768
  4C61  0400          		dw	4	;atan(1/8192)*32768
  4C63  0200          		dw	2	;atan(1/16384)*32768
  4C65  0100          		dw	1	;atan(1/32768)*32768
                      	
                      	
                      	;radius * (cos or sin)
                      	;de=(de*hl)>>18 (round)
                      	;input: de,hl
                      	;output: de
                      	;destroy: af,bc,hl
  4C67                	MULRCS:
  4C67  CD7C4C        		call	MULINT2S	;dehl=radius*(cos or sin)
  4C6A  CD954C        		call	DEHL4
  4C6D  CB04          		rlc	h
  4C6F  D0            		ret	nc
  4C70  13            		inc	de
  4C71  C9            		ret
                      	
                      	
                      	;hl=(de*hl)>>8 (signed, round)
                      	;input: de,hl
                      	;output: hl
                      	;destroy: af,bc,de
  4C72                	MULINT2SR:
  4C72  CD7C4C        		call	MULINT2S
                      	
                      	;hl=(dehl)>>8 (round)
  4C75                	ROUNDI2:
  4C75  CB05          		rlc	l
  4C77  6C            		ld	l,h
  4C78  63            		ld	h,e
  4C79  D0            		ret	nc
  4C7A  23            		inc	hl
  4C7B  C9            		ret
                      	
                      	
                      	;dehl=de*hl (signed)
                      	;input: de,hl
                      	;output: dehl
                      	;destroy: af,bc
  4C7C                	MULINT2S:
  4C7C  E5            		push	hl
  4C7D  D5            		push	de
  4C7E  CD6B24        		call	MULINT2
  4C81  C1            		pop	bc
  4C82  E3            		ex	(sp),hl
  4C83  EB            		ex	de,hl
  4C84  CB78          		bit	7,b
  4C86  2803          		jr	z,MULI2SNC1
  4C88  B7            		or	a
  4C89  ED52          		sbc	hl,de
  4C8B                	MULI2SNC1:
  4C8B  CB7A          		bit	7,d
  4C8D  2803          		jr	z,MULI2SNC2
  4C8F  B7            		or	a
  4C90  ED42          		sbc	hl,bc
  4C92                	MULI2SNC2:
  4C92  EB            		ex	de,hl
  4C93  E1            		pop	hl
  4C94  C9            		ret
                      	
                      	
                      	;dehl=dehl*4
                      	;input: dehl
                      	;output: dehl
                      	;destroy: f
  4C95                	DEHL4:
  4C95  29            		add	hl,hl
  4C96  CB13          		rl	e
  4C98  CB12          		rl	d
  4C9A  29            		add	hl,hl
  4C9B  CB13          		rl	e
  4C9D  CB12          		rl	d
  4C9F  C9            		ret
                      	
                      	
                      	;PUT command
  4CA0                	C_PUT:
  4CA0  CD603F        		call	SKIPSP
  4CA3  FE40          		cp	'@'
  4CA5  285F          		jr	z,PUTAT
  4CA7  FE28          		cp	'('
  4CA9  285C          		jr	z,PUTAT2
                      	
                      	;FDD command
  4CAB  CDE24E        		call	GETPUTSUB
  4CAE  F5            		push	af		;z-flag
  4CAF  2A39FB        		ld	hl,(BUFP)
  4CB2  010600        		ld	bc,0006h
  4CB5  09            		add	hl,bc
  4CB6  46            		ld	b,(hl)		;+6: position
  4CB7  F1            		pop	af		;z-flag
  4CB8  C5            		push	bc		;b=position
  4CB9  E5            		push	hl		;(BUFP)+6
  4CBA  202F          		jr	nz,PUTNZ	;
                      	
  4CBC  7A            		ld	a,d
  4CBD  B3            		or	e
  4CBE  CA4D42        		jp	z,DFERR
                      	
  4CC1  01FBFF        		ld	bc,0-0005h
  4CC4  09            		add	hl,bc
  4CC5  7E            		ld	a,(hl)		;+1: first cluster
  4CC6  CDD65C        		call	C2TRSECT
                      	
  4CC9                	PUTLP1:
  4CC9  1B            		dec	de
  4CCA  7A            		ld	a,d
  4CCB  B3            		or	e
  4CCC  2828          		jr	z,PUTNC
  4CCE  60            		ld	h,b
  4CCF  69            		ld	l,c
  4CD0  CD4B53        		call	NEXTSECT
  4CD3  30F4          		jr	nc,PUTLP1
                      	
                      	;b=track, c=sector
  4CD5  44            		ld	b,h
  4CD6  4D            		ld	c,l
  4CD7  79            		ld	a,c
  4CD8  C6F7          		add	a,0f7h
  4CDA  CB10          		rl	b		;cluster
  4CDC  0D            		dec	c		;0-15
  4CDD  CB99          		res	3,c		;0-7
  4CDF  0C            		inc	c		;sector in cluster(1-8)
                      	
  4CE0                	PUTLP2:
  4CE0  78            		ld	a,b
  4CE1  CDCD5B        		call	NEXTSECTW4
  4CE4  1B            		dec	de
  4CE5  7A            		ld	a,d
  4CE6  B3            		or	e
  4CE7  2805          		jr	z,PUTEND
  4CE9  18F5          		jr	PUTLP2
                      	
  4CEB                	PUTNZ:
  4CEB  CDC45B        		call	NEXTSECTW3
  4CEE                	PUTEND:
  4CEE  CB38          		srl	b		;track=cluster/2
  4CF0  3004          		jr	nc,PUTNC
  4CF2  79            		ld	a,c
  4CF3  C608          		add	a,08h		;odd cluster: 9-16
  4CF5  4F            		ld	c,a		;sector
  4CF6                	PUTNC:
  4CF6  CDC15C        		call	WRTBUF
  4CF9  E1            		pop	hl		;(BUFP)+6
  4CFA  F1            		pop	af
  4CFB  77            		ld	(hl),a		;+6: position
  4CFC  23            		inc	hl
  4CFD  CB5E          		bit	3,(hl)		;+7: file status, bit3=write
  4CFF  2802          		jr	z,PUTZ
  4D01  3604          		ld	(hl),04h	;random file
  4D03                	PUTZ:
  4D03  C3ED56        		jp	CLRBUFP
                      	
                      	
                      	;PUT@ command
  4D06                	PUTAT:
  4D06  23            		inc	hl
  4D07                	PUTAT2:
  4D07  CDF72C        		call	GETGXY
  4D0A  C2C203        		jp	nz,SNERR
  4D0D  23            		inc	hl
  4D0E  E5            		push	hl
  4D0F  CD6017        		call	ARG
  4D12  E1            		pop	hl
  4D13  3A25FF        		ld	a,(ARGTYP)
  4D16  B7            		or	a
  4D17  2827          		jr	z,PUTATN1
                      	
                      	;string (disk file)
  4D19  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4D1A  CD5E5F        		call	SETFNAME
  4D1D  47            		ld	b,a		;drive-1
  4D1E  CDCA53        		call	READFAT
  4D21  CD3C54        		call	SRCHFILE
  4D24  C23E42        		jp	nz,FFERR
  4D27  CB40          		bit	0,b
  4D29  CACB03        		jp	z,FCERR		;if not binary file
  4D2C  1601          		ld	d,01h		;file open mode=input
  4D2E  CD0256        		call	FOPEN0
  4D31  CD795B        		call	GETDSK2
  4D34  44            		ld	b,h		;bc=x dot size
  4D35  4D            		ld	c,l
  4D36  CD795B        		call	GETDSK2
  4D39  54            		ld	d,h		;de=y dot size
  4D3A  5D            		ld	e,l
  4D3B  2150FF        		ld	hl,TMP
  4D3E  1818          		jr	PUTATSN1
                      	
                      	;numeric array
  4D40                	PUTATN1:
  4D40  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4D41  CD7A33        		call	CHKVAR
  4D44  224EFF        		ld	(PROGAD),hl
  4D47  CD2834        		call	SRCHARR
  4D4A  DACB03        		jp	c,FCERR
  4D4D  CD4B50        		call	GETARR0
  4D50  23            		inc	hl
  4D51  4E            		ld	c,(hl)
  4D52  23            		inc	hl
  4D53  46            		ld	b,(hl)		;bc=x dot size
  4D54  23            		inc	hl
  4D55  5E            		ld	e,(hl)
  4D56  23            		inc	hl
  4D57  56            		ld	d,(hl)		;de=y dot size
                      	
  4D58                	PUTATSN1:
  4D58  E5            		push	hl		;array address
                      	
                      	;check x,y dot sizes
  4D59  D5            		push	de
  4D5A  50            		ld	d,b
  4D5B  59            		ld	e,c
  4D5C  1B            		dec	de
  4D5D  21FF00        		ld	hl,256-1
  4D60  CD9539        		call	CHKMOD
  4D63  2003          		jr	nz,PUTATNZ1	;if mode1-4
  4D65  213F01        		ld	hl,320-1	;mode5
  4D68                	PUTATNZ1:
  4D68  E7            		rst	CPHLDE
  4D69  DACB03        		jp	c,FCERR
  4D6C  D1            		pop	de
                      	
  4D6D  1B            		dec	de
  4D6E  21BF00        		ld	hl,192-1
  4D71  CD9539        		call	CHKMOD
  4D74  2002          		jr	nz,PUTATNZ2	;if mode1-4
  4D76  2EC7          		ld	l,200-1		;h=0, mode5
  4D78                	PUTATNZ2:
  4D78  E7            		rst	CPHLDE
  4D79  DACB03        		jp	c,FCERR
  4D7C  13            		inc	de
                      	
                      	;or,and,xor,pset,preset
  4D7D  2A4EFF        		ld	hl,(PROGAD)
  4D80  CD603F        		call	SKIPSP
  4D83  FE2C          		cp	','
  4D85  2011          		jr	nz,PUTATNZ3
  4D87  CD5F3F        		call	SKIPSPINC
  4D8A  23            		inc	hl
  4D8B  FE58          		cp	'X'
  4D8D  200B          		jr	nz,PUTATNZ4
  4D8F  CD603F        		call	SKIPSP
  4D92  23            		inc	hl
  4D93  FED0          		cp	OR_
  4D95  C2C203        		jp	nz,SNERR
  4D98                	PUTATNZ3:
  4D98  3E58          		ld	a,'X'
  4D9A                	PUTATNZ4:
  4D9A  224EFF        		ld	(PROGAD),hl
                      	
  4D9D  214E4E        		ld	hl,PUTATSET
  4DA0  FE9B          		cp	PSET_		;9bh
  4DA2  2818          		jr	z,PUTATIX
  4DA4  214D4E        		ld	hl,PUTATXOR
  4DA7  FE58          		cp	'X'
  4DA9  2811          		jr	z,PUTATIX
  4DAB  21474E        		ld	hl,PUTATAND
  4DAE  FECF          		cp	AND_		;cfh
  4DB0  280A          		jr	z,PUTATIX
  4DB2  214A4E        		ld	hl,PUTATOR
  4DB5  FED0          		cp	OR_		;d0h
  4DB7  2803          		jr	z,PUTATIX
  4DB9  21444E        		ld	hl,PUTATPRESET
  4DBC                	PUTATIX:
  4DBC  CDDF5C        		call	SETIX
  4DBF  DD7527        		ld	(ix+27h),l
  4DC2  DD7428        		ld	(ix+28h),h
                      	
  4DC5  D9            		exx
  4DC6  21844E        		ld	hl,PUTTBL-2
  4DC9  CD9539        		call	CHKMOD
  4DCC  3A92FD        		ld	a,(SCREEN1)
  4DCF  2802          		jr	z,PUTATZ1
  4DD1  23            		inc	hl
  4DD2  23            		inc	hl
  4DD3                	PUTATZ1:
  4DD3  B7            		or	a
  4DD4  CACB03        		jp	z,FCERR
  4DD7  4F            		ld	c,a		;(SCREEN1)
  4DD8  87            		add	a,a
  4DD9  1600          		ld	d,00h
  4DDB  5F            		ld	e,a
  4DDC  42            		ld	b,d		;=0
  4DDD  19            		add	hl,de
  4DDE  56            		ld	d,(hl)		;x bit size
  4DDF  23            		inc	hl
  4DE0  5E            		ld	e,(hl)		;mask
  4DE1  E1            		pop	hl		;array address
                      	
                      	;	ld	b,00h
  4DE2  CD9539        		call	CHKMOD
  4DE5  2804          		jr	z,PUTATZ2	;mode5: 1-origin
  4DE7  79            		ld	a,c		;(SCREEN1)
  4DE8  0F            		rrca
  4DE9  3801          		jr	c,PUTATC	;mode1-4,screen2,4: 0-origin
  4DEB                	PUTATZ2:
  4DEB  04            		inc	b		;0=0-origin, 1=1-origin
  4DEC                	PUTATC:
  4DEC  D9            		exx
                      	
  4DED  2AB0FD        		ld	hl,(GRPY1)
  4DF0  22B3FE        		ld	(GRPY3),hl
  4DF3  19            		add	hl,de
  4DF4  EB            		ex	de,hl
  4DF5  2AAEFD        		ld	hl,(GRPX1)
  4DF8  09            		add	hl,bc
  4DF9  44            		ld	b,h
  4DFA  4D            		ld	c,l
                      	
  4DFB                	PUTATLP1:
  4DFB  D9            		exx
  4DFC  0E00          		ld	c,00h		;shift count
  4DFE  D9            		exx
                      	
  4DFF  D5            		push	de		;y-end
  4E00  2AAEFD        		ld	hl,(GRPX1)	;x-start
  4E03  22B1FE        		ld	(GRPX3),hl
                      	
  4E06                	PUTATLP2:
  4E06  C5            		push	bc		;x-end
                      	
  4E07  ED4BB1FE      		ld	bc,(GRPX3)
  4E0B  ED5BB3FE      		ld	de,(GRPY3)
  4E0F  C5            		push	bc		;x
  4E10  D5            		push	de		;y
  4E11  CD733E        		call	POINT
                      	
  4E14  D9            		exx
  4E15  90            		sub	b		;0- or 1-origin
  4E16  D9            		exx
  4E17  47            		ld	b,a		;;
                      	
  4E18  D9            		exx
  4E19  79            		ld	a,c
  4E1A  92            		sub	d
  4E1B  4F            		ld	c,a
  4E1C  7E            		ld	a,(hl)
  4E1D  281C          		jr	z,PUTATZ3
  4E1F  3014          		jr	nc,PUTATNC
  4E21  23            		inc	hl
  4E22  79            		ld	a,c
  4E23  E607          		and	07h
  4E25  4F            		ld	c,a
                      	
  4E26  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4E27  280A          		jr	z,PUTATN2
                      	
                      	;string (disk file)
  4E29  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4E2A  D5            		push	de
  4E2B  CD415B        		call	GETDSK
  4E2E  D1            		pop	de
  4E2F  2B            		dec	hl
  4E30  77            		ld	(hl),a
  4E31  1802          		jr	PUTATNC
                      	
                      	;numerica array
  4E33                	PUTATN2:
  4E33  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4E34  7E            		ld	a,(hl)
                      	
  4E35                	PUTATNC:
  4E35  C5            		push	bc
  4E36  41            		ld	b,c
  4E37                	PUTATLP3:
  4E37  0F            		rrca
  4E38  10FD          		djnz	PUTATLP3
  4E3A  C1            		pop	bc
  4E3B                	PUTATZ3:
  4E3B  A3            		and	e
  4E3C  D9            		exx
                      	
  4E3D  DD6E27        		ld	l,(ix+27h)
  4E40  DD6628        		ld	h,(ix+28h)
  4E43  E9            		jp	(hl)
                      	
  4E44                	PUTATPRESET:
  4E44  2F            		cpl
  4E45  1807          		jr	PUTATSET
                      	
  4E47                	PUTATAND:
  4E47  A0            		and	b		;;
  4E48  1804          		jr	PUTATSET
                      	
  4E4A                	PUTATOR:
  4E4A  B0            		or	b		;;
  4E4B  1801          		jr	PUTATSET
                      	
  4E4D                	PUTATXOR:
  4E4D  A8            		xor	b		;;
                      	;	jr	PUTATSET
                      	
  4E4E                	PUTATSET:
  4E4E  D9            		exx
  4E4F  80            		add	a,b		;0- or 1-origin
  4E50  D9            		exx
  4E51  CDC015        		call	SETATT
  4E54  D1            		pop	de		;y
  4E55  C1            		pop	bc		;x
  4E56  CD472D        		call	PSET
                      	
                      	;	ld	b,00h
                      	;	call	INCGX
  4E59  3A92FD        		ld	a,(SCREEN1)
  4E5C  FE02          		cp	02h
  4E5E  2F            		cpl
  4E5F  CE05          		adc	a,05h		;1,2,3 -> 4,2,1
  4E61  1600          		ld	d,00h
  4E63  5F            		ld	e,a
  4E64  2AB1FE        		ld	hl,(GRPX3)
  4E67  19            		add	hl,de
  4E68  22B1FE        		ld	(GRPX3),hl
                      	
  4E6B  C1            		pop	bc		;x-end
  4E6C  B7            		or	a
  4E6D  ED42          		sbc	hl,bc
  4E6F  3895          		jr	c,PUTATLP2
                      	
  4E71  CD4E2B        		call	INCGY
  4E74  EB            		ex	de,hl
  4E75  D1            		pop	de		;y-end
  4E76  B7            		or	a
  4E77  ED52          		sbc	hl,de
  4E79  DAFB4D        		jp	c,PUTATLP1
                      	
  4E7C  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4E7D  C8            		ret	z
                      	
                      	;string (disk file)
  4E7E  1E00          		ld	e,00h
  4E80  CD0E56        		call	FCLOSE
  4E83  C3ED56        		jp	CLRBUFP
                      	
                      	
                      	;bit size and mask
  4E86                	PUTTBL:
  4E86  040F          		db	04h, 0fh	;mode5,screen2
  4E88  040F          		db	04h, 0fh	;mode5,screen3	mode1-4,screen2
  4E8A  0203          		db	02h, 03h	;mode5,screen4	mode1-4,screen3
  4E8C  0101          		db	01h, 01h	;		mode1-4,screen4
                      	
                      	
                      	;GET command
  4E8E                	C_GET:
  4E8E  CD603F        		call	SKIPSP
  4E91  FE40          		cp	'@'
  4E93  286C          		jr	z,GETAT
  4E95  FE28          		cp	'('
  4E97  2869          		jr	z,GETAT2
                      	
                      	;FDD command
  4E99  CDE24E        		call	GETPUTSUB
  4E9C  203B          		jr	nz,GETNZ
                      	
  4E9E  1B            		dec	de
  4E9F  7B            		ld	a,e
  4EA0  E607          		and	07h
  4EA2  4F            		ld	c,a
  4EA3  0C            		inc	c		;(record number-1)%8 +1
                      	
  4EA4  7B            		ld	a,e
  4EA5  CB3A          		srl	d
  4EA7  1F            		rra
  4EA8  CB3A          		srl	d
  4EAA  1F            		rra
  4EAB  CB3A          		srl	d
  4EAD  1F            		rra
  4EAE  57            		ld	d,a		;(record number-1)/8
                      	
  4EAF  2A39FB        		ld	hl,(BUFP)
  4EB2  23            		inc	hl
  4EB3  7E            		ld	a,(hl)		;+1: first cluster
  4EB4  14            		inc	d
  4EB5                	GETLP:
  4EB5  47            		ld	b,a
  4EB6  CD1F54        		call	GETFAT
  4EB9  FEC0          		cp	0c0h		;
  4EBB  15            		dec	d
  4EBC  2805          		jr	z,GETZ
  4EBE  D25042        		jp	nc,EFERR	;
  4EC1  18F2          		jr	GETLP
                      	
  4EC3                	GETZ:
  4EC3  3806          		jr	c,GETOK
  4EC5  D6C0          		sub	0c0h
  4EC7  B9            		cp	c
  4EC8  DA5042        		jp	c,EFERR
  4ECB                	GETOK:
  4ECB  CB38          		srl	b		;track=cluster/2
  4ECD  3004          		jr	nc,GETNC	;even cluster: 1-8
  4ECF  79            		ld	a,c
  4ED0  C608          		add	a,08h		;odd cluster: 9-16
  4ED2  4F            		ld	c,a		;sector
  4ED3                	GETNC:
  4ED3  CDFE5B        		call	RDNEXT2
  4ED6  C3ED56        		jp	CLRBUFP
                      	
  4ED9                	GETNZ:
  4ED9  CDFA5B        		call	RDNEXT
  4EDC  DA5042        		jp	c,EFERR
  4EDF  C3ED56        		jp	CLRBUFP
                      	
                      	
                      	;subroutine for GET and PUT
                      	;output: hl=program address, de=record number, (BUFP), z-flag(1=with record number)
  4EE2                	GETPUTSUB:
  4EE2  FE23          		cp	'#'
  4EE4  2001          		jr	nz,GETPUTZ
  4EE6  23            		inc	hl
  4EE7                	GETPUTZ:
  4EE7  CDE40D        		call	INT1ARG
  4EEA  E5            		push	hl		;program address
  4EEB  CD2552        		call	CHKOPEN
  4EEE  2239FB        		ld	(BUFP),hl
  4EF1  E1            		pop	hl		;program address
  4EF2  7E            		ld	a,(hl)
  4EF3  FE2C          		cp	','
  4EF5  C0            		ret	nz
                      	
  4EF6  23            		inc	hl
  4EF7  CD190E        		call	INT2ARG
  4EFA  7A            		ld	a,d
  4EFB  B3            		or	e
  4EFC  CA5042        		jp	z,EFERR
  4EFF  BF            		cp	a		;set z-flag
  4F00  C9            		ret
                      	
                      	
                      	;GET@ command
  4F01                	GETAT:
  4F01  23            		inc	hl
  4F02                	GETAT2:
  4F02  CDF72C        		call	GETGXY
  4F05  FECB          		cp	MINUS_
  4F07  C2C203        		jp	nz,SNERR
  4F0A  C5            		push	bc
  4F0B  D5            		push	de
  4F0C  23            		inc	hl
  4F0D  CDF72C        		call	GETGXY
  4F10  C2C203        		jp	nz,SNERR
  4F13  D1            		pop	de
  4F14  C1            		pop	bc
  4F15  E5            		push	hl
  4F16  CD792B        		call	SORTXY
  4F19  E1            		pop	hl
  4F1A  23            		inc	hl
                      	
  4F1B  E5            		push	hl
  4F1C  CD6017        		call	ARG
  4F1F  E1            		pop	hl
  4F20  3A25FF        		ld	a,(ARGTYP)
  4F23  B7            		or	a
  4F24  2818          		jr	z,GETATN1
                      	
                      	;string (disk file)
  4F26  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4F27  CD5E5F        		call	SETFNAME
  4F2A  2601          		ld	h,01h		;attribute
  4F2C  CD395F        		call	SVCOMMON
  4F2F  0601          		ld	b,01h		;attribute=binary
  4F31  1602          		ld	d,02h		;file open mode=output
  4F33  CD0256        		call	FOPEN0
  4F36  1150FF        		ld	de,TMP
  4F39  01FFFF        		ld	bc,0ffffh
  4F3C  1814          		jr	GETATSN1
                      	
                      	;numeric array
  4F3E                	GETATN1:
  4F3E  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4F3F  CD7A33        		call	CHKVAR
  4F42  224EFF        		ld	(PROGAD),hl
  4F45  CD2834        		call	SRCHARR
  4F48  DACB03        		jp	c,FCERR
  4F4B  CD4B50        		call	GETARR0
  4F4E  EB            		ex	de,hl		;
  4F4F  0B            		dec	bc
  4F50  0B            		dec	bc
  4F51  0B            		dec	bc
                      	
  4F52                	GETATSN1:
  4F52  C5            		push	bc		;array data size
                      	
  4F53  2AADFE        		ld	hl,(GRPX2)
  4F56  ED4BB1FE      		ld	bc,(GRPX3)
  4F5A  C5            		push	bc		;smaller x
                      	
  4F5B  3A92FD        		ld	a,(SCREEN1)
  4F5E  B7            		or	a
  4F5F  CACB03        		jp	z,FCERR		;screen mode 1
                      	;	or	a
  4F62  ED42          		sbc	hl,bc
  4F64  FE02          		cp	02h
  4F66  2F            		cpl
  4F67  CE05          		adc	a,05h		;1,2,3->4,2,1
  4F69  47            		ld	b,a		;x dot size
                      	
  4F6A  85            		add	a,l
  4F6B  6F            		ld	l,a
  4F6C  3001          		jr	nc,GETATNC1
  4F6E  24            		inc	h
  4F6F                	GETATNC1:
                      	
  4F6F  CD9539        		call	CHKMOD
  4F72  78            		ld	a,b		;x dot size
  4F73  2005          		jr	nz,GETATNZ1
                      	;mode5
  4F75  FE04          		cp	04h
  4F77  3001          		jr	nc,GETATNZ1
  4F79  87            		add	a,a		;2,1->4,2
                      	
  4F7A                	GETATNZ1:
  4F7A  F5            		push	af		;x bit size
                      	
  4F7B  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4F7C  280B          		jr	z,GETATN2
                      	
                      	;string (disk file)
  4F7E  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4F7F  7D            		ld	a,l
  4F80  CDC726        		call	PUTDEV
  4F83  7C            		ld	a,h
  4F84  CDC726        		call	PUTDEV
  4F87  1807          		jr	GETATSN2
                      	
                      	;numeric array
  4F89                	GETATN2:
  4F89  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4F8A  EB            		ex	de,hl		;
  4F8B  23            		inc	hl
  4F8C  73            		ld	(hl),e
  4F8D  23            		inc	hl
  4F8E  72            		ld	(hl),d
  4F8F  EB            		ex	de,hl		;
                      	
  4F90                	GETATSN2:
  4F90  2AAFFE        		ld	hl,(GRPY2)
  4F93  ED4BB3FE      		ld	bc,(GRPY3)
  4F97  B7            		or	a
  4F98  ED42          		sbc	hl,bc
  4F9A  EB            		ex	de,hl		;
                      	
  4F9B  3A92FD        		ld	a,(SCREEN1)
  4F9E  3D            		dec	a
  4F9F  2014          		jr	nz,GETATNZ2
  4FA1  CD9539        		call	CHKMOD
  4FA4  280A          		jr	z,GETATZ
                      	
                      	;60 screen mode 2
  4FA6  CB3A          		srl	d
  4FA8  CB1B          		rr	e
  4FAA  CB3A          		srl	d
  4FAC  CB1B          		rr	e
  4FAE  1805          		jr	GETATNZ2
                      	
                      	;66 screen mode 2
  4FB0                	GETATZ:
  4FB0  E5            		push	hl
  4FB1  CD7B6C        		call	DIV5
  4FB4  E1            		pop	hl
                      	
                      	;y size
  4FB5                	GETATNZ2:
  4FB5  13            		inc	de
  4FB6  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4FB7  2807          		jr	z,GETATN3
                      	
                      	;string (disk file)
  4FB9  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4FBA  7B            		ld	a,e
  4FBB  CDC726        		call	PUTDEV
  4FBE  1804          		jr	GETATSN3
                      	
                      	;numeric array
  4FC0                	GETATN3:
  4FC0  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4FC1  23            		inc	hl
  4FC2  73            		ld	(hl),e
  4FC3  23            		inc	hl
                      	
  4FC4                	GETATSN3:
  4FC4  72            		ld	(hl),d
  4FC5  F1            		pop	af		;x bit size
  4FC6  5F            		ld	e,a
  4FC7  1600          		ld	d,00h		;x counter initial value
                      	
  4FC9  E5            		push	hl		;array address
  4FCA  D5            		push	de		;d=x counter, e=x bit size
                      	
  4FCB                	GETATLP1:
  4FCB  ED4BB1FE      		ld	bc,(GRPX3)
  4FCF  ED5BB3FE      		ld	de,(GRPY3)
  4FD3  CD733E        		call	POINT
  4FD6  4F            		ld	c,a
  4FD7  CD9539        		call	CHKMOD
  4FDA  2808          		jr	z,GETATZ1
  4FDC  3A92FD        		ld	a,(SCREEN1)
  4FDF  FE02          		cp	02h
  4FE1  2801          		jr	z,GETATZ1
  4FE3  0C            		inc	c
  4FE4                	GETATZ1:
  4FE4  0D            		dec	c
  4FE5  D1            		pop	de
  4FE6  E1            		pop	hl
  4FE7  7A            		ld	a,d
  4FE8  93            		sub	e		;counter -= x bit size
  4FE9  57            		ld	d,a
  4FEA  301D          		jr	nc,GETATNC2
                      	
  4FEC  C608          		add	a,08h
  4FEE  57            		ld	d,a
                      	
  4FEF  D9            		exx
  4FF0  E1            		pop	hl		;smaller x
  4FF1  C1            		pop	bc		;array data size
  4FF2  0B            		dec	bc
  4FF3  78            		ld	a,b
  4FF4  B1            		or	c
  4FF5  CACB03        		jp	z,FCERR
  4FF8  C5            		push	bc		;array data size
  4FF9  E5            		push	hl		;smaller x
  4FFA  D9            		exx
                      	
  4FFB  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4FFC  2807          		jr	z,GETATN4
                      	
                      	;string (disk file)
  4FFE  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  4FFF  7E            		ld	a,(hl)
  5000  CDC726        		call	PUTDEV
  5003  1802          		jr	GETATSN4
                      	
                      	;numeric array
  5005                	GETATN4:
  5005  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  5006  23            		inc	hl
                      	
  5007                	GETATSN4:
  5007  3600          		ld	(hl),00h
                      	
  5009                	GETATNC2:
  5009  79            		ld	a,c		;data
  500A  2804          		jr	z,GETATZ3	;counter - x bit size
  500C  42            		ld	b,d
  500D                	GETATLP2:
  500D  07            		rlca
  500E  10FD          		djnz	GETATLP2
  5010                	GETATZ3:
  5010  B6            		or	(hl)
  5011  77            		ld	(hl),a
  5012  C1            		pop	bc		;smaller x
  5013  C5            		push	bc
  5014  E5            		push	hl
  5015  D5            		push	de
                      	
  5016  2AB1FE        		ld	hl,(GRPX3)
  5019  ED5BADFE      		ld	de,(GRPX2)
  501D  E7            		rst	CPHLDE
  501E  3007          		jr	nc,GETATNC3
  5020  0600          		ld	b,00h
  5022  CD322B        		call	INCGX
  5025  18A4          		jr	GETATLP1
                      	
  5027                	GETATNC3:
  5027  D1            		pop	de
  5028  1600          		ld	d,00h		;x counter initial value
  502A  D5            		push	de
  502B  60            		ld	h,b		;smaller x
  502C  69            		ld	l,c
  502D  22B1FE        		ld	(GRPX3),hl
  5030  CD4E2B        		call	INCGY
  5033  2AAFFE        		ld	hl,(GRPY2)
                      	;	ld	de,(GRPY3)
  5036  E7            		rst	CPHLDE
  5037  3092          		jr	nc,GETATLP1
                      	
  5039                	GETATEND:
  5039  D1            		pop	de
  503A  E1            		pop	hl
  503B  C1            		pop	bc
  503C  C1            		pop	bc
  503D  08            		ex	af,af'		;z-flag(0=string, 1=numeric)
  503E  C8            		ret	z
                      	
                      	;string (disk file)
  503F  7E            		ld	a,(hl)
  5040  CDC726        		call	PUTDEV
  5043  1E00          		ld	e,00h
  5045  CD0E56        		call	FCLOSE
  5048  C3ED56        		jp	CLRBUFP
                      	
                      	
                      	;get array(0) address and last size
                      	;input: de=array address
                      	;output: bc=size, hl=array(0) address-1
                      	;destroy: af,de
  504B                	GETARR0:
  504B  EB            		ex	de,hl
  504C  4E            		ld	c,(hl)		;bc=bytes
  504D  23            		inc	hl
  504E  46            		ld	b,(hl)
  504F  23            		inc	hl
  5050  7E            		ld	a,(hl)		;dimensions
                      	
  5051  0B            		dec	bc
  5052                	GETARR0LP:
  5052  23            		inc	hl
  5053  23            		inc	hl
  5054  0B            		dec	bc
  5055  0B            		dec	bc
  5056  3D            		dec	a
  5057  20F9          		jr	nz,GETARR0LP
  5059  C9            		ret
                      	
                      	
                      	;CSAVE command (extended)
  505A                	C_CSVEX:
  505A  CD603F        		call	SKIPSP
  505D  FECC          		cp	ASTRSK_		;cch
  505F  C21623        		jp	nz,C_CSV
  5062  23            		inc	hl
  5063  CD7A33        		call	CHKVAR
  5066  224EFF        		ld	(PROGAD),hl
  5069  CD2834        		call	SRCHARR
  506C  DACB03        		jp	c,FCERR
  506F  CD4B50        		call	GETARR0
                      	
  5072  C5            		push	bc
  5073  CDA825        		call	PRTOPN
  5076  C1            		pop	bc
  5077                	CSVEXLP:
  5077  23            		inc	hl
  5078  7E            		ld	a,(hl)
  5079  CDCC1A        		call	PUTCMT
  507C  0B            		dec	bc
  507D  78            		ld	a,b
  507E  B1            		or	c
  507F  20F6          		jr	nz,CSVEXLP
  5081  C3061B        		jp	WCLOSE
                      	
                      	
                      	;CLOAD command (extended)
  5084                	C_CLDEX:
  5084  CD603F        		call	SKIPSP
  5087  FECC          		cp	ASTRSK_		;cch
  5089  C25823        		jp	nz,C_CLD
  508C  23            		inc	hl
  508D  CD7A33        		call	CHKVAR
  5090  224EFF        		ld	(PROGAD),hl
  5093  CD2834        		call	SRCHARR
  5096  DACB03        		jp	c,FCERR
  5099  CD4B50        		call	GETARR0
                      	
  509C  C5            		push	bc
  509D  CD9A25        		call	INPOPN
  50A0  C1            		pop	bc
  50A1                	CLDEXLP:
  50A1  CD8F1A        		call	GETCMTTR
  50A4  23            		inc	hl
  50A5  77            		ld	(hl),a
  50A6  0B            		dec	bc
  50A7  78            		ld	a,b
  50A8  B1            		or	c
  50A9  20F6          		jr	nz,CLDEXLP
  50AB  C3AA1A        		jp	RCLOSE
                      	
                      	
                      	;initialize external FDD
                      	;output: a(if no error, b7-b4=drive connect,b3-b0=disk set), c-flag(1=error)
                      	;destroy: f,bc
  50AE                	INIEFD:
  50AE  CD3645        		call	FDOFF
  50B1  3E91          		ld	a,91h		;bit0: portC-lower=input
                      					;bit1: portB=output
                      					;bit2: portB,portC-lower=mode 0
                      					;bit3: portC-upper=output
                      					;bit4: portA=input
                      					;bit65:portA,portC-upper=mode 0
                      					;bit7: mode definition
  50B3  D3D3          		out	(EFDCBIT),a
  50B5  DBD2          		in	a,(EFDC)	;bit0=DAV, bit1=RFD, bit2=DAC
  50B7  2F            		cpl
  50B8  E607          		and	07h
  50BA  37            		scf
  50BB  C8            		ret	z		;error if DAV=RFD=DAC=1
  50BC  AF            		xor	a
  50BD  CD7C51        		call	SENDCMD		;FDUINZ command
  50C0  D8            		ret	c
  50C1  C36E51        		jp	DRVSTAT
                      	
                      	
                      	;call exernafl FDD read/write routine
  50C4                	RDWREFD:
  50C4  67            		ld	h,a		;drive
  50C5  CD3645        		call	FDOFF
                      	
  50C8  C1            		pop	bc		;b=track, c=sector
  50C9  D1            		pop	de		;de=address
  50CA  C5            		push	bc
                      	
  50CB  3A70FE        		ld	a,(RDWRCHK)
  50CE  3C            		inc	a		;00=read,01=check,ff=write
  50CF  3A71FE        		ld	a,(RMSECT)
  50D2  280A          		jr	z,RDWREFDZ
  50D4  CDE350        		call	RDEFD
                      	
  50D7                	RDWREFDEND:
  50D7  C1            		pop	bc
  50D8  D28143        		jp	nc,NOCHECK
  50DB  C38E43        		jp	DSKERR2
                      	
  50DE                	RDWREFDZ:
  50DE  CD0B51        		call	WRTEFD
  50E1  18F4          		jr	RDWREFDEND
                      	
                      	
                      	;read from external FDD
                      	;input: h=drive, a=the number of sector, b=track, c=sector, de=address
                      	;output: c-flag(1=error), de=de+data size(if no error)
                      	;destroy: af,bc,de(if error),hl
  50E3                	RDEFD:
  50E3  3278FE        		ld	(NSECT),a
  50E6  68            		ld	l,b
  50E7  2272FE        		ld	(TRACK),hl	;TRACK,DRIVE
  50EA  79            		ld	a,c
  50EB  3274FE        		ld	(SECTOR),a
                      	
  50EE  EB            		ex	de,hl		;hl<-address
                      	
  50EF  CD3251        		call	RDDSK
  50F2  D8            		ret	c
                      	
  50F3  0600          		ld	b,00h
  50F5                	RDEFDLP:
  50F5  05            		dec	b
  50F6  37            		scf
  50F7  C8            		ret	z		;c-flag=1 if error
  50F8  CD7251        		call	CMDSTAT		;bit0=error status, bit6=buffer status
  50FB  D8            		ret	c
  50FC  0F            		rrca
  50FD  D8            		ret	c
  50FE  E620          		and	20h
  5100  28F3          		jr	z,RDEFDLP
                      	
  5102  EB            		ex	de,hl		;de<-address
  5103  3A70FE        		ld	a,(RDWRCHK)	;00=read,01=check,ff=write
  5106  B7            		or	a
  5107  C0            		ret	nz		;check
  5108  C35451        		jp	TRNBUF		;read
                      	
                      	
                      	;write to external FDD
                      	;input: h=drive, a=the number of sector, b=track, c=sector, de=address
                      	;output: c-flag(1=error), de=de+data size(if no error)
                      	;destroy: af,bc,de(if error)
  510B                	WRTEFD:
  510B  3278FE        		ld	(NSECT),a
  510E  68            		ld	l,b
  510F  2272FE        		ld	(TRACK),hl	;TRACK,DRIVE
  5112  79            		ld	a,c
  5113  3274FE        		ld	(SECTOR),a
                      	
  5116  EB            		ex	de,hl		;hl<-address
                      	
  5117  CD2E51        		call	WRTDSK
  511A  D8            		ret	c
                      	
  511B  3A78FE        		ld	a,(NSECT)
  511E  4F            		ld	c,a
  511F  0600          		ld	b,00h		;1sector=256bytes
  5121                	WRTEFDLP:
  5121  7E            		ld	a,(hl)
  5122  23            		inc	hl
  5123  CD8251        		call	SENDDATA1
  5126  D8            		ret	c
  5127  10F8          		djnz	WRTEFDLP
  5129  0D            		dec	c
  512A  20F5          		jr	nz,WRTEFDLP
                      	
  512C  EB            		ex	de,hl		;de<-address
  512D  C9            		ret
                      	
                      	
                      	;send write command to external FDD
                      	;input: (NSECT),(DRVIE),(TRACK),(SECTOR)
                      	;destroy: af,de
  512E                	WRTDSK:
  512E  3E01          		ld	a,01h		;WRTDSK command
  5130  1802          		jr	RDWRTDSK
                      	
                      	
                      	;send read/write command to external FDD
                      	;input: (NSECT),(DRVIE),(TRACK),(SECTOR)
                      	;output: c-flag(1=error)
                      	;destroy: af,de
  5132                	RDDSK:
  5132  3E02          		ld	a,02h		;RDDSK command
  5134                	RDWRTDSK:
  5134  CD7C51        		call	SENDCMD
  5137  D8            		ret	c
                      	
  5138  3A78FE        		ld	a,(NSECT)
  513B  CD8251        		call	SENDDATA1
  513E  3A73FE        		ld	a,(DRIVE)
  5141  D602          		sub	02h
  5143  CD8251        		call	SENDDATA1
  5146  D8            		ret	c
                      	
  5147  3A72FE        		ld	a,(TRACK)
  514A  CD8251        		call	SENDDATA1
  514D  D8            		ret	c
  514E  3A74FE        		ld	a,(SECTOR)
  5151  C38251        		jp	SENDDATA1
                      	
                      	
                      	;send transfer command to external FDD and receive data
                      	;input: de=address, (NSECT)
                      	;output: de=de+data size(if no error), c-flag(1=error)
                      	;destroy: af,bc,de(if error),hl
  5154                	TRNBUF:
  5154  EB            		ex	de,hl		;hl<-address
  5155  3E03          		ld	a,03h		;TRNBUF command
  5157  CD7C51        		call	SENDCMD
  515A  D8            		ret	c
                      	
  515B  3A78FE        		ld	a,(NSECT)
  515E  4F            		ld	c,a
  515F  0600          		ld	b,00h		;1sector=256bytes
  5161                	TRNBUFLP:
  5161  CDC051        		call	RCVDATA1
  5164  D8            		ret	c
  5165  77            		ld	(hl),a
  5166  23            		inc	hl
  5167  10F8          		djnz	TRNBUFLP
  5169  0D            		dec	c
  516A  20F5          		jr	nz,TRNBUFLP
  516C  EB            		ex	de,hl		;de<-address+data size
  516D  C9            		ret			;c-flag=0
                      	
                      	
                      	;send drive status command to external FDD and receive result
                      	;output: a
                      	;destroy: f,de
  516E                	DRVSTAT:
  516E  3E07          		ld	a,07h
  5170  1802          		jr	DRVCMDSTAT
                      	
                      	;send command status command to external FDD and receive result
                      	;output: a, c-flag(1=error)
                      	;destroy: f,de
  5172                	CMDSTAT:
  5172  3E06          		ld	a,06h		;CMDSTAT command
  5174                	DRVCMDSTAT:
  5174  CD7C51        		call	SENDCMD
  5177  D8            		ret	c
  5178  CDC051        		call	RCVDATA1
  517B  C9            		ret
                      	
                      	
                      	;send command to external FDD
                      	;input: a
                      	;output: c-flag(1=error)
                      	;destroy: af,de
  517C                	SENDCMD:
  517C  57            		ld	d,a
  517D  3E0F          		ld	a,0fh
  517F  D3D3          		out	(EFDCBIT),a	;set ATN
  5181  7A            		ld	a,d
                      	;	jr	SENDDATA1
                      	
                      	
                      	;send 1 byte to external FDD
                      	;input: a
                      	;output: c-flag(1=error)
                      	;destroy: af,de
  5182                	SENDDATA1:
  5182  F5            		push	af
  5183  110000        		ld	de,0000h
  5186                	SD1LP1:
  5186  1B            		dec	de
  5187  7A            		ld	a,d
  5188  B3            		or	e
  5189  2832          		jr	z,EFDERRPOP
  518B  DBD2          		in	a,(EFDC)
  518D  E602          		and	02h
  518F  28F5          		jr	z,SD1LP1	;wait for RFD=1
                      	
  5191  3E0E          		ld	a,0eh
  5193  D3D3          		out	(EFDCBIT),a	;reset ATN
  5195  F1            		pop	af
  5196  D3D1          		out	(EFDB),a	;set data
  5198  3E09          		ld	a,09h
  519A  D3D3          		out	(EFDCBIT),a	;set DAV
                      	
  519C  110000        		ld	de,0000h
  519F                	SD1LP2:
  519F  1B            		dec	de
  51A0  7A            		ld	a,d
  51A1  B3            		or	e
  51A2  281A          		jr	z,EFDERR
  51A4  DBD2          		in	a,(EFDC)
  51A6  E604          		and	04h
  51A8  28F5          		jr	z,SD1LP2	;wait for DAC=1
                      	
  51AA  3E08          		ld	a,08h
  51AC  D3D3          		out	(EFDCBIT),a	;reset DAV
                      	
  51AE  110000        		ld	de,0000h
  51B1                	SD1LP3:
  51B1  1B            		dec	de
  51B2  7A            		ld	a,d
  51B3  B3            		or	e
  51B4  2808          		jr	z,EFDERR
  51B6  DBD2          		in	a,(EFDC)
  51B8  E604          		and	04h
  51BA  20F5          		jr	nz,SD1LP3	;wait for DAC=0
  51BC  C9            		ret			;c-flag=0
                      	
  51BD                	EFDERRPOP:
  51BD  F1            		pop	af
  51BE                	EFDERR:
  51BE  37            		scf
  51BF  C9            		ret
                      	
                      	
                      	;receive 1 byte from external FDD
                      	;output: a=data
                      	;destroy: f,de
  51C0                	RCVDATA1:
  51C0  3E0B          		ld	a,0bh
  51C2  D3D3          		out	(EFDCBIT),a	;set RFD
                      	
  51C4  110000        		ld	de,0000h
  51C7                	RD1LP1:
  51C7  1B            		dec	de
  51C8  7A            		ld	a,d
  51C9  B3            		or	e
  51CA  28F2          		jr	z,EFDERR
  51CC  DBD2          		in	a,(EFDC)
  51CE  0F            		rrca
  51CF  30F6          		jr	nc,RD1LP1	;wait for DAV=1
                      	
  51D1  3E0A          		ld	a,0ah
  51D3  D3D3          		out	(EFDCBIT),a	;reset RFD
  51D5  DBD0          		in	a,(EFDA)	;data
  51D7  F5            		push	af
  51D8  3E0D          		ld	a,0dh
  51DA  D3D3          		out	(EFDCBIT),a	;set DAC
                      	
  51DC  110000        		ld	de,0000h
  51DF                	RD1LP2:
  51DF  1B            		dec	de
  51E0  7A            		ld	a,d
  51E1  B3            		or	e
  51E2  28D9          		jr	z,EFDERRPOP
  51E4  DBD2          		in	a,(EFDC)
  51E6  0F            		rrca
  51E7  38F6          		jr	c,RD1LP2	;wait for DAV=0
                      	
  51E9  3E0C          		ld	a,0ch
  51EB  D3D3          		out	(EFDCBIT),a	;reset DAC
  51ED  F1            		pop	af
                      	
  51EE  B7            		or	a		;c-flag=0
  51EF  C9            		ret
                      	
                      	
                      	;set drive number and FAT/drive pointer
                      	;input: ix, a=drive-1(0-3)
                      	;output: (ix+00h)=drive-1, hl=(0fb33h)=FAT/drive pointer, z-flag(1=no open files)
                      	;destroy: af,de
  51F0                	_SETFATP:ds	SETFATP-_SETFATP
  51F2                		org	SETFATP
                      	
  51F2  213BFB        		ld	hl,DRIVES
  51F5  BE            		cp	(hl)
  51F6  D25C42        		jp	nc,DNERR
                      	
  51F9  DD7700        		ld	(ix+00h),a
  51FC  2AFCFF        		ld	hl,(FATPTBL)
  51FF  87            		add	a,a
  5200  85            		add	a,l
  5201  6F            		ld	l,a
  5202  7E            		ld	a,(hl)
  5203  23            		inc	hl
  5204  66            		ld	h,(hl)
  5205  6F            		ld	l,a
  5206  2233FB        		ld	(FATP),hl
  5209  7E            		ld	a,(hl)
  520A  3C            		inc	a		;set z-flag if (hl)=ff (no open files)
  520B  C9            		ret
                      	
                      	
                      	;input: e=file number
                      	;output: a=file open mode, hl=buffer pointer, z-flag(0=open, 1=close)
                      	;destroy: f,de
  520C                	GETBUFP:
  520C  3A31FB        		ld	a,(FILES)
  520F  BB            		cp	e
  5210  DA3B42        		jp	c,BNERR
  5213  2A35FB        		ld	hl,(BUFPTBL)
  5216  1600          		ld	d,00h
  5218  CB23          		sla	e
  521A  19            		add	hl,de
  521B  7E            		ld	a,(hl)
  521C  23            		inc	hl
  521D  66            		ld	h,(hl)
  521E  6F            		ld	l,a
  521F  7E            		ld	a,(hl)		;+0: file open mode
  5220  B7            		or	a
  5221  C9            		ret
                      	
                      	
                      	;for function using file number (EOF,LOC,LOF)
                      	;input: hl=program address
                      	;output: a=file open mode, hl=buffer pointer
                      	;destroy: f,bc,de
  5222                	FNCFNUM:
  5222  CD530B        		call	FNCNUM
                      	;	jr	CHKOPEN
                      	
                      	;check file open
                      	;input: (FAC1)=file number
                      	;output: a=file open mode, hl=buffer pointer
                      	;destroy: f,bc,de
  5225                	CHKOPEN:
  5225  CD4F07        		call	FTOI1
  5228  CD0C52        		call	GETBUFP		;a=file open mode
  522B  CA6842        		jp	z,CFERR		;not open
  522E  E5            		push	hl
  522F  110400        		ld	de,0004h
  5232  19            		add	hl,de
  5233  7E            		ld	a,(hl)		;+4: drive-1
  5234  CDCA53        		call	READFAT
  5237  E1            		pop	hl
  5238  C9            		ret
                      	
                      	
                      	;set file pointer for PRINT# command
                      	;input: hl=program address
                      	;output: hl=next address
                      	;destroy: af,bc,de
  5239                	FNUMPRT:
  5239  0601          		ld	b,01h
                      	;	jr	GETFNUM
                      	
                      	;get file number for PRINT# and INPUT# command
                      	;input: hl=program address, b(1=print#, 2=input#)
                      	;output: hl=next address(>0), # address(<=0)
                      	;destroy: af,bc,de
  523B                	GETFNUM:
  523B  CD603F        		call	SKIPSP
  523E  FE23          		cp	'#'
  5240  3E00          		ld	a,00h
  5242  C0            		ret	nz
                      	
  5243  E5            		push	hl
  5244  C5            		push	bc
  5245  CD5E0B        		call	NARGMOINC
  5248  EF            		rst	CHKSGN
  5249  C1            		pop	bc
  524A  3D            		dec	a
  524B  2802          		jr	z,FNUMDSK	;>0
  524D  E1            		pop	hl
  524E  C9            		ret
                      	
                      	;for disk file
  524F                	FNUMDSK:
  524F  F1            		pop	af		;cancel return address
  5250  E5            		push	hl
  5251  C5            		push	bc
  5252  CD2552        		call	CHKOPEN
  5255  C1            		pop	bc		;b=1:print#, b=2:input#
  5256  B8            		cp	b
  5257  CA4142        		jp	z,BMERR		;a=1(input mode) and b=1(print#) or a=2(output mode) and b=2(input#)
                      	
  525A  E5            		push	hl
  525B  110700        		ld	de,0007h
  525E  19            		add	hl,de
  525F  7E            		ld	a,(hl)		;+7: file status
  5260  E604          		and	04h
  5262  C26542        		jp	nz,SPERR	;random file
  5265  E1            		pop	hl
  5266  2239FB        		ld	(BUFP),hl
                      	
  5269  110400        		ld	de,0004h
  526C  19            		add	hl,de
  526D  7E            		ld	a,(hl)		;+4: drive-1
  526E  CDDF5C        		call	SETIX
  5271  CDF251        		call	SETFATP
                      	
  5274  E1            		pop	hl
  5275  CD723F        		call	CHKCMM
  5278  C2C203        		jp	nz,SNERR
  527B  224EFF        		ld	(PROGAD),hl
  527E  C9            		ret
                      	
                      	
                      	;get file number for INPUT# command
                      	;input: hl=program address
                      	;output: a, hl,(PROGAD)=next address
                      	;destroy: f,bc,de
  527F                	FNUMINP:
  527F  0602          		ld	b,02h
  5281  CD3B52        		call	GETFNUM
  5284  ED5B39FB      		ld	de,(BUFP)
  5288  7A            		ld	a,d
  5289  B3            		or	e
  528A  C8            		ret	z
                      	
                      	
                      	;for disk file
  528B  F1            		pop	af		;cancel return address to INPUT
  528C  2A4EFF        		ld	hl,(PROGAD)
                      	
  528F                	INPDSK:
  528F  CD7A33        		call	CHKVAR
  5292  CD9432        		call	GETVAR
  5295  D5            		push	de		;variable address
                      	
  5296                	INPDLP1:
  5296  CD415B        		call	GETDSK
  5299  DA5042        		jp	c,EFERR
  529C  FE20          		cp	' '
  529E  28F6          		jr	z,INPDLP1
                      	
  52A0  21DAFE        		ld	hl,INPBUF
  52A3  0648          		ld	b,48h
                      	
  52A5  CBB1          		res	6,c		;for double quotation check
  52A7  CB79          		bit	7,c
  52A9  280B          		jr	z,INPD1ST	;numeric variable
                      	
                      	;string variable
  52AB  FE22          		cp	22h		;double quotation
  52AD  2007          		jr	nz,INPD1ST
  52AF  CBF1          		set	6,c		;for double quotation check
                      	
  52B1                	INPDLP2:
  52B1  CD415B        		call	GETDSK
  52B4  384A          		jr	c,INPDANA
  52B6                	INPD1ST:
  52B6  B7            		or	a
  52B7  28F8          		jr	z,INPDLP2
                      	
  52B9  CB71          		bit	6,c
  52BB  2012          		jr	nz,INPDDQ	;with double quotation
                      	
                      	;without double quotation (numeric or string variable)
  52BD  FE0D          		cp	0dh
  52BF  2829          		jr	z,INPDCR
  52C1  FE2C          		cp	','
  52C3  283B          		jr	z,INPDANA
                      	
  52C5  CB79          		bit	7,c
  52C7  280C          		jr	z,INPDNUM	;numeric variable
                      	
                      	;string variable
                      	;without double quotation
  52C9  FE0A          		cp	0ah
  52CB  28E4          		jr	z,INPDLP2
  52CD  180A          		jr	INPDST
                      	
                      	;with double quotation
  52CF                	INPDDQ:
  52CF  FE22          		cp	22h		;double quotation
  52D1  282D          		jr	z,INPDANA
  52D3  1804          		jr	INPDST
                      	
                      	;numeric variable
  52D5                	INPDNUM:
  52D5  FE20          		cp	' '
  52D7  2806          		jr	z,INPDSP
                      	;	jr	INPDST
                      	
                      	;store a character
  52D9                	INPDST:
  52D9  77            		ld	(hl),a
  52DA  23            		inc	hl
  52DB  10D4          		djnz	INPDLP2
  52DD  1821          		jr	INPDANA
                      	
                      	;after space
  52DF                	INPDSP:
  52DF  CD415B        		call	GETDSK
  52E2  381C          		jr	c,INPDANA
  52E4  FE20          		cp	' '
  52E6  28F7          		jr	z,INPDSP
  52E8  1809          		jr	INPDCCL
                      	
                      	;after 0dh(CR)
  52EA                	INPDCR:
  52EA  CD415B        		call	GETDSK
  52ED  3811          		jr	c,INPDANA
  52EF  FE0A          		cp	0ah
  52F1  280D          		jr	z,INPDANA
                      	
                      	;cancel 1 character
  52F3                	INPDCCL:
  52F3  E5            		push	hl
  52F4  2A39FB        		ld	hl,(BUFP)
  52F7  110600        		ld	de,0006h
  52FA  19            		add	hl,de
  52FB  35            		dec	(hl)		;+6: position
  52FC  23            		inc	hl		;+7: file status
  52FD  CB8E          		res	1,(hl)		;bit1=to next sector
  52FF  E1            		pop	hl
                      	
                      	;analyze input buffer
  5300                	INPDANA:
  5300  3600          		ld	(hl),00h
  5302  D1            		pop	de		;variable address
  5303  21DAFE        		ld	hl,INPBUF
  5306  CB79          		bit	7,c
  5308  201E          		jr	nz,INPDSTR
                      	
                      	;numeric variable
  530A  3EFF          		ld	a,0ffh
  530C  D5            		push	de		;variable address
  530D  CD9B39        		call	ATOF
  5310  D1            		pop	de		;variable address
  5311  2166FF        		ld	hl,FAC1
  5314  CD300C        		call	SETF
                      	
  5317                	INPDNEXT:
  5317  2A4EFF        		ld	hl,(PROGAD)
  531A  2B            		dec	hl
  531B  D7            		rst	ANADAT
  531C  FE2C          		cp	','
  531E  C2ED56        		jp	nz,CLRBUFP
  5321  23            		inc	hl
  5322  224EFF        		ld	(PROGAD),hl
  5325  C38F52        		jp	INPDSK
                      	
                      	;string variable
  5328                	INPDSTR:
  5328  E5            		push	hl		;=INPBUF
  5329  0600          		ld	b,00h
  532B                	INPDSLP:
  532B  7E            		ld	a,(hl)
  532C  B7            		or	a
  532D  280B          		jr	z,INPDSZ
  532F  04            		inc	b
  5330  23            		inc	hl
  5331  FE22          		cp	22h		;double quotation
  5333  20F6          		jr	nz,INPDSLP
  5335  CB71          		bit	6,c
  5337  28F2          		jr	z,INPDSLP
  5339  05            		dec	b		;with double quotation
  533A                	INPDSZ:
  533A  E1            		pop	hl		;
  533B  78            		ld	a,b
  533C  D5            		push	de		;variable address
  533D  CD2326        		call	MAKESTR
  5340  D1            		pop	de		;variable address
  5341  212DFF        		ld	hl,STRDSC1
  5344  010400        		ld	bc,0004h
  5347  EDB0          		ldir
  5349  18CC          		jr	INPDNEXT
                      	
                      	
                      	;get track and sector for reading (check next cluster if sector=8 or 16)
                      	;input: b=track, c=sector
                      	;output: b=next track, c=next sector, c-flag(1=no next sector)
                      	;destroy: af
  534B                	NEXTSECT:
  534B  E5            		push	hl
  534C  CD1A54        		call	GETFAT2
  534F  F5            		push	af		;FAT value
  5350  79            		ld	a,c
  5351  E607          		and	07h
  5353  2829          		jr	z,NXSCTZ	;sector=8 or 16
                      	
  5355  F1            		pop	af
  5356  E1            		pop	hl
  5357                	NXSCT2NC:
  5357  0C            		inc	c		;1-16
  5358  D6C0          		sub	0c0h		;0-8
  535A  3F            		ccf
  535B  D0            		ret	nc		;continue to next cluster
                      	
                      	;same cluster
  535C  C5            		push	bc
  535D  0D            		dec	c		;0-15
  535E  CB99          		res	3,c		;0-7
  5360  0C            		inc	c		;1-8
  5361  B9            		cp	c
  5362  C1            		pop	bc
  5363  C9            		ret
                      	
                      	
                      	;get track and sector for reading (check next cluster if sector=8 or 16)
                      	;output: b=next track, c=next sector, c-flag(1=no next sector)
                      	;destroy: af,hl
  5364                	NEXTSECT2:
  5364  2A39FB        		ld	hl,(BUFP)
  5367  23            		inc	hl
  5368  23            		inc	hl
  5369  7E            		ld	a,(hl)		;+2: cluster
  536A  47            		ld	b,a
  536B  E5            		push	hl
  536C  CD1F54        		call	GETFAT
  536F  E1            		pop	hl
  5370  23            		inc	hl
  5371  4E            		ld	c,(hl)		;+3: sector in cluster(0-8)
  5372  CB59          		bit	3,c
  5374  200A          		jr	nz,NXSCT2Z	;if sector in cluster=8
                      	
                      	;same cluster
  5376  CB38          		srl	b		;track=cluster/2
  5378  30DD          		jr	nc,NXSCT2NC	;0-7
  537A  CBD9          		set	3,c		;8-15
  537C  18D9          		jr	NXSCT2NC
                      	
                      	
                      	;check next cluster
  537E                	NXSCTZ:
  537E  F1            		pop	af		;FAT value
  537F  E1            		pop	hl
  5380                	NXSCT2Z:
  5380  FEC0          		cp	0c0h
  5382  3F            		ccf
  5383  D8            		ret	c		;no next cluster
                      	
  5384  CDD65C        		call	C2TRSECT
  5387  E5            		push	hl
  5388  CD1F54        		call	GETFAT
  538B  E1            		pop	hl
  538C  FEC0          		cp	0c0h
  538E  37            		scf
  538F  C8            		ret	z		;0 sector in cluster
  5390  B7            		or	a		;reset c-flag
  5391  C9            		ret
                      	
                      	
                      	;get track and sector for writing (search unused cluster if sector=8 or 16)
                      	; and write FAT buffer
                      	;input: b=track, c=sector
                      	;output: a=next cluster, b=next track, c=next sector
                      	;destroy: f
  5392                	NEXTSECTW:
  5392  E5            		push	hl
  5393  D5            		push	de
                      	
  5394  79            		ld	a,c
  5395  C6F7          		add	a,0f7h
  5397  78            		ld	a,b
  5398  8F            		adc	a,a		;cluster=track*2+(1 if sector>=9)
                      	
  5399  5F            		ld	e,a		;old cluster
  539A  2A33FB        		ld	hl,(FATP)
  539D  1600          		ld	d,00h
  539F  1C            		inc	e
  53A0  1C            		inc	e
  53A1  1C            		inc	e
  53A2  19            		add	hl,de		;(FATP)+3+old cluster
  53A3  5F            		ld	e,a		;old cluster
                      	
  53A4  79            		ld	a,c
  53A5  3D            		dec	a
  53A6  2F            		cpl
  53A7  E607          		and	07h
  53A9  2811          		jr	z,NEWCLST	;if sector=8 or 16
  53AB  79            		ld	a,c
                      	
                      	;same cluster
  53AC                	SAMECLST:
  53AC  E607          		and	07h		;1-7
  53AE  C6C1          		add	a,0c1h		;c2-c8
  53B0  77            		ld	(hl),a
  53B1  0C            		inc	c
  53B2  7B            		ld	a,e		;cluster
  53B3                	NXSCTWEND:
  53B3  CDF953        		call	SETSUM
  53B6  23            		inc	hl
  53B7  36FF          		ld	(hl),0ffh	;need to overwrite FAT
  53B9  D1            		pop	de
  53BA  E1            		pop	hl
  53BB  C9            		ret
                      	
                      	
                      	;new cluster
  53BC                	NEWCLST:
  53BC  7B            		ld	a,e
  53BD  E5            		push	hl		;old FAT buffer
  53BE  CDD254        		call	SRCHCLST
  53C1  36C1          		ld	(hl),0c1h
  53C3  CDD65C        		call	C2TRSECT
  53C6  E1            		pop	hl		;old FAT buffer
  53C7  77            		ld	(hl),a		;new cluster
  53C8  18E9          		jr	NXSCTWEND
                      	
                      	
                      	;read FAT to drive buffer
                      	;input: a=drive-1(0-3)
                      	;output: ix=disk work, (ix+00h), (ix+ibh), ((FATP))=FAT pointer, z-flag(1=no open files)
                      	;destroy: af,bc,de,hl
  53CA                	READFAT:
  53CA  CDDF5C        		call	SETIX
  53CD  CDF251        		call	SETFATP
  53D0  F5            		push	af
  53D1  CD0054        		call	CHKSUM
  53D4  F1            		pop	af
  53D5  C0            		ret	nz		;file open
                      	
  53D6  010E12        		ld	bc,120eh	;track 18, sector 14
  53D9  CD935C        		call	READBUF0
  53DC  ED5B33FB      		ld	de,(FATP)
  53E0  13            		inc	de
  53E1  13            		inc	de
  53E2  13            		inc	de
  53E3  014600        		ld	bc,CLSTS
  53E6  EDB0          		ldir
                      	
  53E8  CDF953        		call	SETSUM
  53EB  BF            		cp	a		;set z-flag
  53EC  C9            		ret
                      	
                      	
                      	;check ID sector
                      	;input: ix=work address, (ix+00h)=drive
                      	;destroy: af,b,de,hl
  53ED                	CHKID:
  53ED  010D12        		ld	bc,120dh	;b=track, c=sector
  53F0  CD935C        		call	READBUF0
  53F3  CB66          		bit	4,(hl)
  53F5  C8            		ret	z
  53F6  C36B42        		jp	FWERR
                      	
                      	
                      	;set FAT check sum
                      	;output: a=check sum value, hl=FAT pointer-3
                      	;destroy: f
  53F9                	SETSUM:
  53F9  C5            		push	bc
  53FA  CD0854        		call	CALCSUM
  53FD  C1            		pop	bc
  53FE  77            		ld	(hl),a
  53FF  C9            		ret
                      	
                      	
                      	;check FAT check sum
                      	;output: a=check sum value, hl=FAT pointer-3
                      	;destroy: f,bc
  5400                	CHKSUM:
  5400  CD0854        		call	CALCSUM
  5403  BE            		cp	(hl)
  5404  C8            		ret	z
  5405  C33842        		jp	IEERR
                      	
                      	
                      	;calculate FAT check sum
                      	;output: a=check sum value, hl=FAT pointer-3
                      	;destroy: f,bc
  5408                	CALCSUM:
  5408  2A33FB        		ld	hl,(FATP)
  540B  23            		inc	hl
  540C  23            		inc	hl
  540D  0646          		ld	b,CLSTS
  540F  3E53          		ld	a,'S'
  5411                	CALCSUMLP:
  5411  23            		inc	hl
  5412  AE            		xor	(hl)
  5413  10FC          		djnz	CALCSUMLP
  5415  01B5FF        		ld	bc,0-CLSTS-5
  5418  09            		add	hl,bc
  5419  C9            		ret
                      	
                      	
                      	;get FAT value
                      	;input: b=track, c=sector
                      	;output: a=FAT value(next cluster, etc.), hl=(FATP)+3+cluster
                      	;destroy: f,hl
  541A                	GETFAT2:
  541A  79            		ld	a,c
  541B  C6F7          		add	a,0f7h		;c-flag=1 if sector>=9
  541D  78            		ld	a,b		;track
  541E  8F            		adc	a,a		;cluster=track*2+(1 if sector>=9)
                      	
                      	;get FAT value
                      	;input: a=cluster
                      	;output: a=FAT value(next cluster, etc.), hl=(FATP)+3+cluster
                      	;destroy: f
  541F                	GETFAT:
  541F  2A33FB        		ld	hl,(FATP)
  5422  3C            		inc	a
  5423  3C            		inc	a
  5424  3C            		inc	a
  5425  85            		add	a,l
  5426  6F            		ld	l,a
  5427  3001          		jr	nc,GETFATNC
  5429  24            		inc	h
  542A                	GETFATNC:
  542A  7E            		ld	a,(hl)		;hl=(FATP)+3+cluster
                      	
  542B  FEFE          		cp	0feh
  542D  D0            		ret	nc
  542E  FEC9          		cp	0c9h
  5430  D25942        		jp	nc,ATERR
  5433  FEC0          		cp	0c0h
  5435  D0            		ret	nc
  5436  FE46          		cp	CLSTS
  5438  D8            		ret	c
  5439  C35942        		jp	ATERR
                      	
                      	
                      	;search file
                      	;input: ix, (ix+00h)
                      	;output: z-flag(1=found), a=first cluster, b=attribute,
                      	;        hl=directory address, (ix+01h)=found number(16-1), (ix+02h)=sector
                      	;destroy: f,c,de
  543C                	SRCHFILE:
                      	;read directory
  543C  01010C        		ld	bc,0c01h	;sector 1-12
  543F                	SRCHFLP1:
  543F  C5            		push	bc
  5440  0612          		ld	b,12h		;track 18
  5442  CD935C        		call	READBUF0
  5445  DD360100      		ld	(ix+01h),00h	;not found yet
  5449  DD7102        		ld	(ix+02h),c	;sector
                      	
  544C  0E10          		ld	c,10h
  544E                	SRCHFLP2:
  544E  7E            		ld	a,(hl)
  544F  B7            		or	a
  5450  2003          		jr	nz,SRCHFNZ1
  5452  DD7101        		ld	(ix+01h),c	;killed
  5455                	SRCHFNZ1:
  5455  3C            		inc	a
  5456  2837          		jr	z,SRCHFZ1	;end of directory
                      	
  5458  E5            		push	hl
  5459  DDE5          		push	ix
  545B  0609          		ld	b,09h
  545D                	SRCHFLP3:
  545D  7E            		ld	a,(hl)
  545E  DDBE05        		cp	(ix+05h)	;file name
  5461  201A          		jr	nz,SRCHFNZ2
  5463  23            		inc	hl
  5464  DD23          		inc	ix
  5466  10F5          		djnz	SRCHFLP3
                      	;found
  5468  DDE1          		pop	ix
  546A  F1            		pop	af		;cancel stack
  546B  DD7101        		ld	(ix+01h),c	;16-1
  546E  C1            		pop	bc
  546F  46            		ld	b,(hl)		;attribute
  5470  23            		inc	hl
  5471  7E            		ld	a,(hl)		;cluster
  5472  FEC0          		cp	0c0h
  5474  D25942        		jp	nc,ATERR
  5477  11F6FF        		ld	de,0-10
  547A  19            		add	hl,de
  547B  BF            		cp	a		;set z-flag
  547C  C9            		ret
                      	
  547D                	SRCHFNZ2:
  547D  DDE1          		pop	ix
  547F  E1            		pop	hl
  5480  111000        		ld	de,0010h
  5483  19            		add	hl,de
  5484  0D            		dec	c
  5485  20C7          		jr	nz,SRCHFLP2
  5487  C1            		pop	bc
  5488  0C            		inc	c
  5489  10B4          		djnz	SRCHFLP1
                      	
                      	;not found
  548B  2A37FB        		ld	hl,(BUF0)
  548E  C5            		push	bc
                      	
  548F                	SRCHFZ1:
  548F  C1            		pop	bc
  5490  DD7E01        		ld	a,(ix+01h)	;killed
  5493  B7            		or	a
  5494  202C          		jr	nz,SRCHFNZ3
  5496  7E            		ld	a,(hl)
  5497  3C            		inc	a
  5498  2836          		jr	z,SRCHFZ3
                      	
                      	;after reading of all direcotry
  549A  01010C        		ld	bc,0c01h	;sector 1-12
  549D                	SRCHFLP4:
  549D  C5            		push	bc
  549E  0612          		ld	b,12h		;track 18
  54A0  CD935C        		call	READBUF0
  54A3  DD360100      		ld	(ix+01h),00h	;not found yet
  54A7  DD7102        		ld	(ix+02h),c	;sector
                      	
  54AA  0610          		ld	b,10h
  54AC                	SRCHFLP5:
  54AC  7E            		ld	a,(hl)
  54AD  B7            		or	a
  54AE  280D          		jr	z,SRCHFZ2	;killed
  54B0  111000        		ld	de,0010h
  54B3  19            		add	hl,de
  54B4  10F6          		djnz	SRCHFLP5
  54B6  C1            		pop	bc
  54B7  0C            		inc	c
  54B8  10E3          		djnz	SRCHFLP4
  54BA  C34D42        		jp	DFERR
                      	
                      	
  54BD                	SRCHFZ2:
                      	;killed entry (directory end)
  54BD  F1            		pop	af		;cancel stack
  54BE  DD7001        		ld	(ix+01h),b	;16-1
  54C1  78            		ld	a,b
                      	;	jr	SRCHFNZ3
                      	
                      	;killed entry
  54C2                	SRCHFNZ3:
  54C2  2A37FB        		ld	hl,(BUF0)
  54C5  C6EF          		add	a,0efh
  54C7  2F            		cpl			;16-1 -> 0-15
  54C8  07            		rlca
  54C9  07            		rlca
  54CA  07            		rlca
  54CB  07            		rlca
  54CC  1600          		ld	d,00h
  54CE  5F            		ld	e,a
  54CF  19            		add	hl,de
  54D0                	SRCHFZ3:
  54D0  04            		inc	b		;reset z-flag
  54D1  C9            		ret
                      	
                      	
                      	;search unused cluster
                      	;(ex. 23h->22h->26h->21h->27h->20h->...)
                      	;input: a=last used cluster
                      	;output: a=cluster, hl=(FATP)+3+cluster
                      	;destroy: af,bc
  54D2                	SRCHCLST:
  54D2  2A33FB        		ld	hl,(FATP)
  54D5  23            		inc	hl
  54D6  23            		inc	hl
  54D7  0646          		ld	b,CLSTS
  54D9                	SRCHCLP1:
  54D9  23            		inc	hl
  54DA  4E            		ld	c,(hl)
  54DB  0C            		inc	c
  54DC  2805          		jr	z,SRCHCZ1	;ff=unused
  54DE  10F9          		djnz	SRCHCLP1
  54E0  C34D42        		jp	DFERR
                      	
  54E3                	SRCHCZ1:
  54E3  E6FE          		and	0feh		;track*2
  54E5  0600          		ld	b,00h
                      	
  54E7                	SRCHCLP2:
  54E7  2A33FB        		ld	hl,(FATP)
  54EA  23            		inc	hl
  54EB  23            		inc	hl
  54EC  23            		inc	hl
                      	
  54ED  4F            		ld	c,a
  54EE  78            		ld	a,b
  54EF  0600          		ld	b,00h
  54F1  09            		add	hl,bc
  54F2  47            		ld	b,a
  54F3  7E            		ld	a,(hl)
  54F4  3C            		inc	a		;
  54F5  79            		ld	a,c
  54F6  C8            		ret	z		;found
                      	
                      	;cluster+=-1,+2,-3,+4,-5,...
  54F7                	SRCHCLP3:
  54F7  04            		inc	b
  54F8  80            		add	a,b
  54F9  CB40          		bit	0,b
  54FB  2804          		jr	z,SRCHCZ2	;if b=even
  54FD  90            		sub	b
  54FE  90            		sub	b
  54FF  38F6          		jr	c,SRCHCLP3
  5501                	SRCHCZ2:
  5501  FE46          		cp	CLSTS
  5503  30F2          		jr	nc,SRCHCLP3
  5505  18E0          		jr	SRCHCLP2
                      	
                      	
                      	;NAME command
  5507                	C_NAME:
  5507  CD5E5F        		call	SETFNAME
  550A  F5            		push	af		;drive-1
  550B  CF            		rst	CHKPAR
  550C  41            		db	'A'
  550D  CF            		rst	CHKPAR
  550E  53            		db	'S'
                      	
  550F  DDE5          		push	ix
  5511  0609          		ld	b,09h
  5513                	NAMELP1:
  5513  DD7E05        		ld	a,(ix+05h)	;file name
  5516  DD770E        		ld	(ix+0eh),a
  5519  DD23          		inc	ix
  551B  10F6          		djnz	NAMELP1
  551D  DDE1          		pop	ix
                      	
                      	;	inc	hl
  551F  CD5E5F        		call	SETFNAME
  5522  C1            		pop	bc
  5523  B8            		cp	b
  5524  C26242        		jp	nz,RDERR
  5527  DD7700        		ld	(ix+00h),a	;drive-1
  552A  CD0054        		call	CHKSUM
  552D  CD3C54        		call	SRCHFILE
  5530  CA4A42        		jp	z,FEERR
                      	
  5533  DDE5          		push	ix
  5535  0609          		ld	b,09h
  5537                	NAMELP2:
  5537  DD7E05        		ld	a,(ix+05h)	;file name
  553A  DD4E0E        		ld	c,(ix+0eh)
  553D  DD770E        		ld	(ix+0eh),a
  5540  DD7105        		ld	(ix+05h),c	;file name
  5543  DD23          		inc	ix
  5545  10F0          		djnz	NAMELP2
  5547  DDE1          		pop	ix
                      	
  5549  CD3C54        		call	SRCHFILE
  554C  C23E42        		jp	nz,FFERR
                      	
  554F  DDE5          		push	ix
  5551  0609          		ld	b,09h
  5553                	NAMELP3:
  5553  DD7E0E        		ld	a,(ix+0eh)
  5556  77            		ld	(hl),a
  5557  DD23          		inc	ix
  5559  23            		inc	hl
  555A  10F7          		djnz	NAMELP3
  555C  DDE1          		pop	ix
                      	
  555E  C3885C        		jp	WRTDIR
                      	
                      	
                      	;OPEN command
  5561                	C_OPEN:
  5561  CD5E5F        		call	SETFNAME
  5564  F5            		push	af		;drive-1
  5565  7E            		ld	a,(hl)
  5566  FE81          		cp	FOR_
  5568  3E04          		ld	a,04h
  556A  201F          		jr	nz,OPENNZ2
  556C  D7            		rst	ANADAT
  556D  FE84          		cp	INPUT_
  556F  2817          		jr	z,OPENINP
  5571  FE90          		cp	OUT_
  5573  2007          		jr	nz,OPENNZ1
  5575  D7            		rst	ANADAT
  5576  CF            		rst	CHKPAR
  5577  AE            		db	PUT_
                      	;for output
  5578  3E02          		ld	a,02h
  557A  180F          		jr	OPENNZ2
                      	
  557C                	OPENNZ1:
  557C  CF            		rst	CHKPAR
  557D  41            		db	'A'
  557E  CF            		rst	CHKPAR
  557F  50            		db	'P'
  5580  CF            		rst	CHKPAR
  5581  50            		db	'P'
  5582  CF            		rst	CHKPAR
  5583  80            		db	END_
                      	;for append
  5584  3E08          		ld	a,08h
  5586  1803          		jr	OPENNZ2
                      	
                      	;for input
  5588                	OPENINP:
  5588  3E01          		ld	a,01h
  558A  23            		inc	hl
  558B                	OPENNZ2:
  558B  F5            		push	af		;file open mode
                      	
  558C  CD603F        		call	SKIPSP
  558F  CF            		rst	CHKPAR
  5590  41            		db	'A'
  5591  CF            		rst	CHKPAR
  5592  53            		db	'S'
  5593  FE23          		cp	'#'
  5595  2001          		jr	nz,OPENNZ3
  5597  23            		inc	hl
  5598                	OPENNZ3:
  5598  CDE40D        		call	INT1ARG		;a,e=file number
  559B  3D            		dec	a
  559C  2131FB        		ld	hl,FILES
  559F  BE            		cp	(hl)
  55A0  D23B42        		jp	nc,BNERR
                      	
                      	;de=file number
  55A3  2A35FB        		ld	hl,(BUFPTBL)
  55A6  7B            		ld	a,e
  55A7  87            		add	a,a
  55A8  5F            		ld	e,a
                      	;	ld	d,00h
  55A9  19            		add	hl,de
  55AA  7E            		ld	a,(hl)
  55AB  23            		inc	hl
  55AC  66            		ld	h,(hl)
  55AD  6F            		ld	l,a
  55AE  7E            		ld	a,(hl)
  55AF  B7            		or	a
  55B0  C24442        		jp	nz,AOERR
  55B3  D1            		pop	de		;d=file open mode
  55B4  F1            		pop	af		;drive-1
                      	
  55B5  E5            		push	hl		;file buffer pointer
  55B6  D5            		push	de		;d=file open mode
  55B7  CB4A          		bit	1,d
  55B9  201A          		jr	nz,OPENOUT	;for output
  55BB  CB52          		bit	2,d
  55BD  200B          		jr	nz,OPENRND	;random mode
                      	
                      	;for input
                      	;for append
  55BF  CDCA53        		call	READFAT
  55C2  CD3C54        		call	SRCHFILE
  55C5  C23E42        		jp	nz,FFERR
  55C8  1812          		jr	OPENEND
                      	
                      	
                      	;random mode
  55CA                	OPENRND:
  55CA  CDCA53        		call	READFAT
  55CD  CD3C54        		call	SRCHFILE	;z-flag
  55D0  280A          		jr	z,OPENEND
  55D2  DD7E00        		ld	a,(ix+00h)	;drive-1
                      	
                      	;for output, z-flag=0
  55D5                	OPENOUT:
  55D5  2600          		ld	h,00h		;attribute
  55D7  CD395F        		call	SVCOMMON	;if output mode or random mode not found
  55DA  0600          		ld	b,00h
                      	
                      	;a=cluster
  55DC                	OPENEND:
  55DC  2A33FB        		ld	hl,(FATP)
  55DF  3612          		ld	(hl),12h	;last accessed track
  55E1  D1            		pop	de		;d=file open mode
  55E2  E1            		pop	hl		;file buffer pointer
                      	
                      	;open file
                      	;input: a=cluster, b=attribute, d=file open mode, hl=file buffer pointer
                      	;output: hl=(FATP)
                      	;destroy:af,bc
  55E3                	FOPEN:
  55E3  72            		ld	(hl),d		;+0: file open mode
  55E4  23            		inc	hl
  55E5  77            		ld	(hl),a		;+1: first cluster
  55E6  23            		inc	hl
  55E7  77            		ld	(hl),a		;+2: cluster
  55E8  23            		inc	hl
  55E9  AF            		xor	a
  55EA  77            		ld	(hl),a		;+3: sector in cluster(0-8)
  55EB  CB5A          		bit	3,d
  55ED  2801          		jr	z,FOPENZ
  55EF  34            		inc	(hl)		;if append mode
  55F0                	FOPENZ:
  55F0  23            		inc	hl
  55F1  DD4E00        		ld	c,(ix+00h)
  55F4  71            		ld	(hl),c		;+4: drive-1
  55F5  23            		inc	hl
  55F6  77            		ld	(hl),a		;+5: end position
  55F7  23            		inc	hl
  55F8  77            		ld	(hl),a		;+6: position
  55F9  23            		inc	hl
  55FA  CBC8          		set	1,b
  55FC  70            		ld	(hl),b		;+7: file status=attribute | to next sector
  55FD  23            		inc	hl
  55FE  23            		inc	hl
  55FF  C3805C        		jp	SET0BUF		;[+9,+264]: buffer
                      	
                      	
                      	;open file buffer#0
                      	;input: a=cluster, b=attribute, d=file open mode
                      	;output: hl=(FATP)
                      	;destroy: af,bc,e
  5602                	FOPEN0:
  5602  2A35FB        		ld	hl,(BUFPTBL)
  5605  5E            		ld	e,(hl)
  5606  23            		inc	hl
  5607  66            		ld	h,(hl)
  5608  6B            		ld	l,e
  5609  2239FB        		ld	(BUFP),hl
  560C  18D5          		jr	FOPEN
                      	
                      	
                      	;close file
                      	;input: e=file number
                      	;destroy: af,bc,de,hl
  560E                	FCLOSE:
  560E  CD0C52        		call	GETBUFP
  5611  C8            		ret	z
                      	
  5612  E5            		push	hl
  5613  CD0054        		call	CHKSUM
  5616  E1            		pop	hl
  5617  E5            		push	hl
  5618  3600          		ld	(hl),00h	;+0: file open mode
  561A  110400        		ld	de,0004h
  561D  19            		add	hl,de
  561E  7E            		ld	a,(hl)		;+4: drive-1
  561F  23            		inc	hl
  5620  23            		inc	hl
  5621  46            		ld	b,(hl)		;+6: position
  5622  23            		inc	hl
  5623  CB5E          		bit	3,(hl)		;+7: file status, bit3=write
  5625  E1            		pop	hl
  5626  285A          		jr	z,CHKCLOSE	;+7: file status, bit3=write
                      	
  5628  CDDF5C        		call	SETIX
  562B  E5            		push	hl
  562C  CDF251        		call	SETFATP
  562F  E1            		pop	hl
  5630  23            		inc	hl
  5631  23            		inc	hl		;+2: cluster
  5632  54            		ld	d,h
  5633  5D            		ld	e,l
  5634  78            		ld	a,b		;+6: position
  5635  B7            		or	a
  5636  200E          		jr	nz,FCLNZ
                      	
                      	;position=0
  5638  CD875D        		call	CHKLASTSECT
  563B  2045          		jr	nz,CHKCLOSE
  563D  210700        		ld	hl,0007h
  5640  19            		add	hl,de		;+9
  5641  CDA756        		call	REVFAT
  5644  181D          		jr	WRTFATCHK
                      	
                      	;position>0
  5646                	FCLNZ:
  5646  CD875D        		call	CHKLASTSECT
  5649  D5            		push	de		;+2
  564A  210500        		ld	hl,0005h
  564D  19            		add	hl,de		;+7
  564E  CC875B        		call	z,PUTD1A
  5651  E1            		pop	hl		;+2
  5652  46            		ld	b,(hl)		;+2: cluster
  5653  23            		inc	hl
  5654  7E            		ld	a,(hl)		;+3: sector in cluster
  5655  CB38          		srl	b		;track=cluster/2
  5657  3002          		jr	nc,FCLNC	;even cluster: 1-8
  5659  C608          		add	a,08h		;odd cluster: 9-16
  565B                	FCLNC:
  565B  4F            		ld	c,a		;sector
                      	
  565C  110600        		ld	de,0006h
  565F  19            		add	hl,de		;+9
  5660  CDC85C        		call	WRTBFMAIN1
                      	;	jr	WRTFATCHK
                      	
                      	;call WRTFAT if necessary
                      	;destroy: af,bc,de,hl
  5663                	WRTFATCHK:
  5663  2A33FB        		ld	hl,(FATP)
  5666  2B            		dec	hl
  5667  2B            		dec	hl
  5668  7E            		ld	a,(hl)
  5669  B7            		or	a
  566A  2816          		jr	z,CHKCLOSE	;not need to overwrite FAT
                      	
                      	;write FAT
                      	;destroy: af,bc,de,hl
  566C                	WRTFAT:
  566C  2A33FB        		ld	hl,(FATP)
  566F  23            		inc	hl
  5670  23            		inc	hl
  5671  23            		inc	hl
  5672  010E12        		ld	bc,120eh	;track 18, sector 14-16
  5675                	WRTFATLP:
  5675  CDC85C        		call	WRTBFMAIN1
  5678  0C            		inc	c
  5679  79            		ld	a,c
  567A  FE11          		cp	11h
  567C  38F7          		jr	c,WRTFATLP
                      	
  567E  2B            		dec	hl
  567F  2B            		dec	hl
  5680  3600          		ld	(hl),00h	;not need to overwrite FAT
                      	;	jr	CHKCLOSE
                      	
                      	
                      	;check if all files closed
                      	;destroy: af,b,de,hl
  5682                	CHKCLOSE:
  5682  3A31FB        		ld	a,(FILES)
  5685  B7            		or	a
  5686  2808          		jr	z,CHKCLZ
  5688  47            		ld	b,a
  5689                	CHKCLLP:
  5689  58            		ld	e,b
  568A  CD0C52        		call	GETBUFP
  568D  C0            		ret	nz		;open
  568E  10F9          		djnz	CHKCLLP
  5690                	CHKCLZ:
  5690  2A33FB        		ld	hl,(FATP)
  5693  36FF          		ld	(hl),0ffh	;last accessed track (ff=no open files)
  5695  C9            		ret
                      	
                      	
                      	;input: a=first cluster
                      	;destroy: af,hl
  5696                	RELEASEFAT:
  5696  CD1F54        		call	GETFAT
  5699  36FF          		ld	(hl),0ffh	;unused
  569B  FEC0          		cp	0c0h
  569D  38F7          		jr	c,RELEASEFAT
  569F  2A33FB        		ld	hl,(FATP)
  56A2  2B            		dec	hl
  56A3  2B            		dec	hl
  56A4  36FF          		ld	(hl),0ffh	;need to overwrite FAT
  56A6  C9            		ret
                      	
                      	
                      	;revert FAT
                      	;input: hl=buffer pointer+9
                      	;destroy: af,b,de,hl
  56A7                	REVFAT:
  56A7  E5            		push	hl
  56A8  2A33FB        		ld	hl,(FATP)
  56AB  2B            		dec	hl
  56AC  2B            		dec	hl
  56AD  36FF          		ld	(hl),0ffh	;need to overwrite FAT
  56AF  E1            		pop	hl
                      	
  56B0  11F8FF        		ld	de,0-0008h
  56B3  19            		add	hl,de
  56B4  56            		ld	d,(hl)		;+1: first cluster
  56B5  23            		inc	hl
  56B6  5E            		ld	e,(hl)		;+2: cluster
  56B7  7B            		ld	a,e
  56B8  CD1F54        		call	GETFAT
  56BB  3D            		dec	a
  56BC  77            		ld	(hl),a
  56BD  FEC1          		cp	0c1h
  56BF  D0            		ret	nc
                      	
  56C0  7A            		ld	a,d		;first cluster
  56C1  BB            		cp	e
  56C2  C8            		ret	z
                      	
  56C3  36FF          		ld	(hl),0ffh
                      	
  56C5  2A33FB        		ld	hl,(FATP)
  56C8  23            		inc	hl
  56C9  23            		inc	hl
                      	
  56CA  0646          		ld	b,CLSTS
  56CC                	REVFATLP:
  56CC  23            		inc	hl
  56CD  7E            		ld	a,(hl)
  56CE  BB            		cp	e
  56CF  2002          		jr	nz,REVFATNZ
  56D1  36C8          		ld	(hl),0c8h
  56D3                	REVFATNZ:
  56D3  10F7          		djnz	REVFATLP
  56D5  C9            		ret
                      	
                      	
                      	;remove disk (from edit hook)
  56D6                	REMOVE:
  56D6  3A3BFB        		ld	a,(DRIVES)
  56D9  B7            		or	a
  56DA  C8            		ret	z
  56DB  2A39FB        		ld	hl,(BUFP)
  56DE  7C            		ld	a,h
  56DF  B5            		or	l
  56E0  CA6356        		jp	z,WRTFATCHK
  56E3  CB4E          		bit	1,(hl)		;file open mode
  56E5  2806          		jr	z,CLRBUFP	;not sequential save
                      	
                      	;for ASCII save
  56E7  CD3927        		call	PUTNL
  56EA  CDD559        		call	CLOSALL
                      	
  56ED                	CLRBUFP:
  56ED  210000        		ld	hl,0000h
  56F0  2239FB        		ld	(BUFP),hl
  56F3  C9            		ret
                      	
                      	;from error hook
  56F4                	ERRCLRB:
  56F4  D5            		push	de
  56F5  CD8256        		call	CHKCLOSE
  56F8  D1            		pop	de
  56F9  18F2          		jr	CLRBUFP
                      	
                      	
                      	;KILL command
  56FB                	C_KILL:
  56FB  CD5E5F        		call	SETFNAME
  56FE  CDCA53        		call	READFAT
  5701  CDED53        		call	CHKID
  5704  CD3C54        		call	SRCHFILE
  5707  C23E42        		jp	nz,FFERR
  570A  CB60          		bit	4,b
  570C  C26B42        		jp	nz,FWERR
                      	
  570F  E5            		push	hl
  5710  4F            		ld	c,a		;first cluster
  5711  3A31FB        		ld	a,(FILES)
  5714  47            		ld	b,a
  5715                	KILLLP:
  5715  58            		ld	e,b
  5716  CD0C52        		call	GETBUFP
  5719  280F          		jr	z,KILLOK	;close
  571B  23            		inc	hl
  571C  7E            		ld	a,(hl)		;+1:first cluster
  571D  B9            		cp	c
  571E  200A          		jr	nz,KILLOK
  5720  23            		inc	hl
  5721  23            		inc	hl
  5722  23            		inc	hl
  5723  7E            		ld	a,(hl)		;+4: drive-1
  5724  DDBE00        		cp	(ix+00h)
  5727  CA4442        		jp	z,AOERR
  572A                	KILLOK:
  572A  10E9          		djnz	KILLLP
  572C  E1            		pop	hl
  572D  79            		ld	a,c
                      	
  572E  3600          		ld	(hl),00h	;delete mark
  5730  CD9656        		call	RELEASEFAT
  5733  CD6C56        		call	WRTFAT
  5736  C3885C        		jp	WRTDIR
                      	
                      	
                      	;RUN with disk driver
                      	;continued from RUNPAR
                      	;input: a<>0, c-flag=0
  5739                	RUNDSK:
  5739  F5            		push	af		;c-flag=0: not merge
  573A  DDCB17FE      		set	7,(ix+17h)	;do not close files
  573E  1809          		jr	LOADFN		;a<>0: run program
                      	
                      	;LOAD command
  5740                	C_LOAD:
  5740  F6            		db	0f6h		;or 37h, reset c-flag
                      	
                      	;MERGE command
  5741                	C_MRG:
  5741  37            		scf			;37h
                      	
  5742  C1            		pop	bc		;cancel return address
  5743  F5            		push	af		;c-flag: load/run=0, merge=1
                      	
  5744  DDCB17BE      		res	7,(ix+17h)	;close files
  5748  AF            		xor	a		;default: no R option
                      	
  5749                	LOADFN:
  5749  CD5E5F        		call	SETFNAME
  574C  47            		ld	b,a		;drive-1
  574D  F1            		pop	af		;c-flag: load/run=0, merge=1
  574E  F5            		push	af		;c-flag: load/run=0, merge=1
  574F  381A          		jr	c,LOADMAIN	;if merge
                      	
  5751  7E            		ld	a,(hl)
  5752  FE2C          		cp	','
  5754  2806          		jr	z,LOADR
  5756  DDCB17BE      		res	7,(ix+17h)	;close files
  575A  180F          		jr	LOADMAIN
                      	
  575C                	LOADR:
  575C  CD5F3F        		call	SKIPSPINC
  575F  FE52          		cp	'R'
  5761  C2C203        		jp	nz,SNERR
  5764  DD7703        		ld	(ix+03h),a	;R option (execution)
  5767  DDCB17FE      		set	7,(ix+17h)	;R option (not close files)
                      	
  576B                	LOADMAIN:
  576B  78            		ld	a,b		;drive-1
  576C  CDCA53        		call	READFAT
  576F  CD3C54        		call	SRCHFILE
  5772  C23E42        		jp	nz,FFERR
                      	
  5775  4F            		ld	c,a		;cluster
  5776  F1            		pop	af		;c-flag: load/run=0, merge=1
  5777  D4DB34        		call	nc,NEW
  577A  79            		ld	a,c		;cluster
  577B  CB78          		bit	7,b		;attribute
  577D  2855          		jr	z,LOADASC
  577F  DA4142        		jp	c,BMERR		;merge and not ascii
                      	
                      	
                      	;normal format load
                      	;input: a=cluster
  5782  2A5FFA        		ld	hl,(STARTAD)
  5785                	LOADLP:
  5785  CDD65C        		call	C2TRSECT
  5788  EB            		ex	de,hl
  5789  CD1F54        		call	GETFAT
  578C  EB            		ex	de,hl
  578D  F5            		push	af		;FAT value
  578E  FEC9          		cp	0c9h
  5790  D25942        		jp	nc,ATERR
  5793  D6C0          		sub	0c0h
  5795  2813          		jr	z,LOADZ
  5797  3002          		jr	nc,LOADNC2	;c1-c8
  5799  3E08          		ld	a,08h		;others
  579B                	LOADNC2:
  579B  F5            		push	af
  579C  EB            		ex	de,hl
  579D  2F            		cpl
  579E  67            		ld	h,a
  579F  2EC6          		ld	l,0-3bh+1
  57A1  39            		add	hl,sp
  57A2  E7            		rst	CPHLDE
  57A3  3826          		jr	c,LOADOM
  57A5  EB            		ex	de,hl
  57A6  F1            		pop	af
                      	
  57A7  CDA85C        		call	RDBFMAIN
  57AA                	LOADZ:
  57AA  84            		add	a,h
  57AB  67            		ld	h,a
  57AC  F1            		pop	af		;FAT vaule
  57AD  FEC0          		cp	0c0h
  57AF  38D4          		jr	c,LOADLP
                      	
  57B1                	LOADEND:
  57B1  CDCC04        		call	CHGLKPMAIN
  57B4  23            		inc	hl
  57B5  2256FF        		ld	(VARAD),hl
                      	
  57B8  CDF934        		call	RESSTK		;close all files (if without R option)
  57BB  CD8256        		call	CHKCLOSE
  57BE  CDED56        		call	CLRBUFP
  57C1  DD7E03        		ld	a,(ix+03h)	;R option?
  57C4  B7            		or	a
  57C5  C2F106        		jp	nz,RUNFIRST
  57C8  C34204        		jp	EDIT
                      	
                      	
  57CB                	LOADOM:
  57CB  CDDB34        		call	NEW
  57CE  CDED56        		call	CLRBUFP
  57D1  C3D103        		jp	OMERR
                      	
                      	;ASCII load
                      	;input: a=cluster, b=attribute
  57D4                	LOADASC:
  57D4  05            		dec	b
  57D5  CA5642        		jp	z,DSERR
                      	
  57D8  CDD65C        		call	C2TRSECT
  57DB  0600          		ld	b,00h		;attribute=ascii
  57DD  1601          		ld	d,01h		;file open mode=input
  57DF  CD0256        		call	FOPEN0
                      	
  57E2                	LDASCLP1:
  57E2  CD415B        		call	GETDSK
  57E5  38CA          		jr	c,LOADEND
  57E7  FE0A          		cp	0ah
  57E9  28F7          		jr	z,LDASCLP1
  57EB  FE0D          		cp	0dh
  57ED  28F3          		jr	z,LDASCLP1
  57EF  B7            		or	a
  57F0  2806          		jr	z,LDASCZ
  57F2  CDAD0B        		call	CHKFIG
  57F5  D25642        		jp	nc,DSERR
  57F8                	LDASCZ:
  57F8  21DAFE        		ld	hl,INPBUF
  57FB  0648          		ld	b,48h
  57FD  180C          		jr	LDASCPUT
                      	
  57FF                	LDASCLP2:
  57FF  CD415B        		call	GETDSK
  5802  38AD          		jr	c,LOADEND
  5804  FE0D          		cp	0dh
  5806  2807          		jr	z,LOADCNV
  5808  B7            		or	a
  5809  2804          		jr	z,LOADCNV
  580B                	LDASCPUT:
  580B  77            		ld	(hl),a
  580C  23            		inc	hl
  580D  10F0          		djnz	LDASCLP2
                      	
  580F                	LOADCNV:
  580F  F5            		push	af		;
  5810  3600          		ld	(hl),00h
  5812  21D9FE        		ld	hl,INPBUF-1
  5815  CD6A04        		call	INPTPRG
  5818  CDCC04        		call	CHGLKPMAIN
  581B  F1            		pop	af		;
  581C  B7            		or	a
  581D  28D9          		jr	z,LDASCZ
  581F  18C1          		jr	LDASCLP1
                      	
                      	
                      	;SAVE command
  5821                	C_SAVE:
  5821  CD5E5F        		call	SETFNAME
  5824  F5            		push	af		;drive-1
  5825  DD361800      		ld	(ix+18h),00h	;0=not ASCII format
  5829  CD673F        		call	CHKCLN
  582C  280A          		jr	z,SAVEMAIN
  582E  CF            		rst	CHKPAR
  582F  2C            		db	','
  5830  FE41          		cp	'A'
  5832  C2C203        		jp	nz,SNERR
  5835  DD7718        		ld	(ix+18h),a	;not0=ASCII format
                      	
  5838                	SAVEMAIN:
  5838  DD7E18        		ld	a,(ix+18h)	;ASCII save?
  583B  FE01          		cp	01h		;set c-flag if a=0
  583D  9F            		sbc	a,a
  583E  E680          		and	80h		;normal save=80h, ASCII save=00h
  5840  67            		ld	h,a		;attribute
  5841  F1            		pop	af		;drive-1
  5842  E5            		push	hl
  5843  CD395F        		call	SVCOMMON
  5846  E1            		pop	hl
  5847  24            		inc	h
  5848  25            		dec	h
  5849  2843          		jr	z,SAVEASC	;if attribute=0
                      	
                      	;normal save
  584B  2A56FF        		ld	hl,(VARAD)
  584E  ED5B5FFA      		ld	de,(STARTAD)
  5852  B7            		or	a
  5853  ED52          		sbc	hl,de
  5855  EB            		ex	de,hl		;hl <- start address
  5856  1B            		dec	de
  5857  14            		inc	d		;d <- sectors
                      	
  5858                	SAVELP:
  5858  E5            		push	hl
  5859  CD1F54        		call	GETFAT
  585C  7A            		ld	a,d		;sectors
  585D  FE08          		cp	08h
  585F  3802          		jr	c,SAVEC
  5861  3E08          		ld	a,08h
  5863                	SAVEC:
  5863  C6C0          		add	a,0c0h
  5865  77            		ld	(hl),a
  5866  D6C0          		sub	0c0h
  5868  F5            		push	af
  5869  CDF953        		call	SETSUM
  586C  F1            		pop	af
  586D  E1            		pop	hl
                      	
  586E  E5            		push	hl
  586F  D5            		push	de
  5870  CDCA5C        		call	WRTBFMAIN
  5873  D1            		pop	de
  5874  E1            		pop	hl
                      	
  5875  92            		sub	d
  5876  2810          		jr	z,SAVEEND
  5878  ED44          		neg			;d-a
  587A  57            		ld	d,a
                      	
  587B  7C            		ld	a,h
  587C  C608          		add	a,08h
  587E  67            		ld	h,a
                      	
  587F  79            		ld	a,c
  5880  C607          		add	a,07h
  5882  4F            		ld	c,a
  5883  CD9253        		call	NEXTSECTW
  5886  18D0          		jr	SAVELP
                      	
  5888                	SAVEEND:
  5888  CDD559        		call	CLOSALL
  588B  C36C56        		jp	WRTFAT
                      	
                      	
                      	;ASCII save
  588E                	SAVEASC:
  588E  0600          		ld	b,00h		;attribute=ascii
  5890  1602          		ld	d,02h		;file open mode=output
  5892  CD0256        		call	FOPEN0
                      	
  5895  110000        		ld	de,0000h	;start line number
  5898  F1            		pop	af		;cancel return address
  5899  C3EF05        		jp	LISTTOEND
                      	
                      	
                      	;set file name in directory for writing
                      	;input: a=drive-1(0-3)
                      	;output: a=cluster, de=directory+9(attribute address), ix=disk work, (FATP)
                      	;destroy: f,bc,hl
  589C                	SETDIR:
  589C  CDCA53        		call	READFAT
  589F  CDED53        		call	CHKID
  58A2  CD3C54        		call	SRCHFILE
  58A5  E5            		push	hl		;directory address
  58A6  2022          		jr	nz,SETDNZ	;not found
  58A8  CB60          		bit	4,b		;can overwrite?
  58AA  C26B42        		jp	nz,FWERR
                      	
  58AD  F5            		push	af		;first cluster
  58AE  57            		ld	d,a
  58AF  3A31FB        		ld	a,(FILES)
  58B2  B7            		or	a
  58B3  2811          		jr	z,SETDZ2
  58B5  5F            		ld	e,a
  58B6                	SETDLP:
  58B6  D5            		push	de
  58B7  CD0C52        		call	GETBUFP
  58BA  D1            		pop	de
  58BB  2806          		jr	z,SETDZ1	;close
  58BD  23            		inc	hl
  58BE  7E            		ld	a,(hl)		;+1: first cluster
  58BF  BA            		cp	d
  58C0  CA4442        		jp	z,AOERR
  58C3                	SETDZ1:
  58C3  1D            		dec	e
  58C4  20F0          		jr	nz,SETDLP
  58C6                	SETDZ2:
  58C6  F1            		pop	af		;first cluster
                      	
  58C7  CD9656        		call	RELEASEFAT
  58CA                	SETDNZ:
  58CA  3E24          		ld	a,24h
  58CC  CDD254        		call	SRCHCLST
  58CF  D1            		pop	de		;directory address
  58D0  DD            		db	0ddh		;ix prefix
  58D1  44            		ld	b,h		;ld b,ixh
  58D2  DD            		db	0ddh		;ix prefix
  58D3  4D            		ld	c,l		;ld c,ixl
  58D4  210500        		ld	hl,0005h
  58D7  09            		add	hl,bc		;hl=ix+5
  58D8  010900        		ld	bc,0009h
  58DB  EDB0          		ldir
  58DD  C9            		ret
                      	
                      	
                      	;RSET command
  58DE                	C_RSET:
  58DE  CD0C59        		call	RLSETSUB		;
                      	
  58E1                	RSETLP:
  58E1  3007          		jr	nc,RSETNC	;
  58E3  3620          		ld	(hl),' '
  58E5  23            		inc	hl
  58E6  0D            		dec	c
  58E7  B9            		cp	c
  58E8  18F7          		jr	RSETLP
                      	
  58EA                	RSETNC:
  58EA  AF            		xor	a
  58EB  47            		ld	b,a
  58EC  B1            		or	c
  58ED  C8            		ret	z
                      	
  58EE  EB            		ex	de,hl
  58EF  EDB0          		ldir
  58F1  C9            		ret
                      	
                      	
                      	;LSET command
  58F2                	C_LSET:
  58F2  CD0C59        		call	RLSETSUB		;
  58F5  3801          		jr	c,LSETC		;
  58F7  79            		ld	a,c
  58F8                	LSETC:
  58F8  B7            		or	a
  58F9  2807          		jr	z,LSETZ
                      	
  58FB  EB            		ex	de,hl
  58FC  47            		ld	b,a
  58FD                	LSETLP1:
  58FD  EDA0          		ldi
  58FF  10FC          		djnz	LSETLP1
  5901  EB            		ex	de,hl
                      	
  5902                	LSETZ:
  5902  79            		ld	a,c
  5903  B7            		or	a
  5904  C8            		ret	z
                      	
  5905  41            		ld	b,c
  5906                	LSETLP2:
  5906  3620          		ld	(hl),' '
  5908  23            		inc	hl
  5909  10FB          		djnz	LSETLP2
  590B  C9            		ret
                      	
                      	
                      	;subroutine for RSET and LSET command
                      	;input: hl=program address
                      	;output: c=left side length,  hl=left side buffer address,
                      	;        a=right side length, de=right side string address
                      	;        c-flag: a-c
                      	;destroy: f,b
  590C                	RLSETSUB:
  590C  CD7A33        		call	CHKVAR
  590F  CD9432        		call	GETVAR
  5912  CB79          		bit	7,c
  5914  CAE303        		jp	z,TMERR
                      	
  5917  2A4EFF        		ld	hl,(PROGAD)
  591A  7E            		ld	a,(hl)
  591B  FED2          		cp	EQ_
  591D  C2C203        		jp	nz,SNERR
                      	
  5920  D5            		push	de		;varible address
  5921  23            		inc	hl
  5922  CD8A26        		call	STRARG		;a=length, de=string address
  5925  E1            		pop	hl		;variable address
                      	
  5926  4E            		ld	c,(hl)		;length
  5927  23            		inc	hl
  5928  23            		inc	hl
  5929  46            		ld	b,(hl)
  592A  23            		inc	hl
  592B  66            		ld	h,(hl)
  592C  68            		ld	l,b
                      	
  592D  B9            		cp	c
  592E  C9            		ret
                      	
                      	
                      	;FIELD command
  592F                	C_FLD:
  592F  CD603F        		call	SKIPSP
  5932  FE23          		cp	'#'
  5934  2001          		jr	nz,FLDNZ
  5936  23            		inc	hl
  5937                	FLDNZ:
  5937  CDE40D        		call	INT1ARG
                      	
  593A  3A31FB        		ld	a,(FILES)
  593D  BB            		cp	e
  593E  DA3B42        		jp	c,BNERR
  5941  7B            		ld	a,e
  5942  CD0C52        		call	GETBUFP
  5945  010900        		ld	bc,0009h
  5948  09            		add	hl,bc
  5949  48            		ld	c,b		;total length=0
                      	
  594A                	FLDLP:
  594A  E5            		push	hl		;buffer address
  594B  2A4EFF        		ld	hl,(PROGAD)
  594E  7E            		ld	a,(hl)
  594F  FE2C          		cp	','
  5951  D1            		pop	de		;buffer address
  5952  C0            		ret	nz
  5953  D5            		push	de		;buffer address
  5954  23            		inc	hl
                      	
  5955  C5            		push	bc		;total length
  5956  CDE40D        		call	INT1ARG
  5959  D5            		push	de		;length
  595A  CF            		rst	CHKPAR
  595B  41            		db	'A'
  595C  CF            		rst	CHKPAR
  595D  53            		db	'S'
  595E  CD7A33        		call	CHKVAR
  5961  CB79          		bit	7,c
  5963  CAE303        		jp	z,TMERR
  5966  CD9432        		call	GETVAR
                      	
  5969  C1            		pop	bc		;length
  596A  E1            		pop	hl		;total length
  596B  09            		add	hl,bc
  596C  D5            		push	de		;variable address
  596D  110101        		ld	de,0101h
  5970  E7            		rst	CPHLDE
  5971  D23542        		jp	nc,FOERR
  5974  D1            		pop	de		;variable address
  5975  E3            		ex	(sp),hl		;buffer address
                      	
  5976  EB            		ex	de,hl
  5977  71            		ld	(hl),c
  5978  23            		inc	hl
  5979  23            		inc	hl
  597A  73            		ld	(hl),e
  597B  23            		inc	hl
  597C  72            		ld	(hl),d
                      	
  597D  EB            		ex	de,hl
  597E  09            		add	hl,bc
  597F  C1            		pop	bc		;total length
  5980  18C8          		jr	FLDLP
                      	
                      	
                      	;MKS$() function
  5982                	F_MKS:
  5982  CD530B        		call	FNCNUM
  5985  3E05          		ld	a,05h
  5987  2166FF        		ld	hl,FAC1
  598A  CD2326        		call	MAKESTR
  598D  C3C527        		jp	INKYEND
                      	
                      	
                      	;CVS() function
  5990                	F_CVS:
  5990  CD820B        		call	CHKLPAR
  5993  CD6017        		call	ARG
  5996  CD910B        		call	CHKRPAR
  5999  CD9326        		call	STRARG2
  599C  FE05          		cp	05h
  599E  DACB03        		jp	c,FCERR
                      	
  59A1  EB            		ex	de,hl
  59A2  1166FF        		ld	de,FAC1
  59A5  010500        		ld	bc,0005h
  59A8  EDB0          		ldir
                      	
  59AA  C3A731        		jp	SETTYP0
                      	
                      	
                      	;CLOSE command
  59AD                	C_CLOS:
  59AD  CD673F        		call	CHKCLN
  59B0  2823          		jr	z,CLOSALL
  59B2                	CLOSLP1:
  59B2  FE23          		cp	'#'
  59B4  2001          		jr	nz,CLOSNZ
  59B6  23            		inc	hl
  59B7                	CLOSNZ:
  59B7  CDE40D        		call	INT1ARG
  59BA  E5            		push	hl
  59BB  CD0E56        		call	FCLOSE
  59BE  E1            		pop	hl
  59BF  CD673F        		call	CHKCLN
  59C2  C8            		ret	z
  59C3  7E            		ld	a,(hl)
  59C4  FE2C          		cp	','
  59C6  C0            		ret	nz
  59C7  CD5F3F        		call	SKIPSPINC
  59CA  18E6          		jr	CLOSLP1
                      	
  59CC                	CHKROPT:
  59CC  DDCB177E      		bit	7,(ix+17h)	;close files?
  59D0  DDCB17BE      		res	7,(ix+17h)
  59D4  C0            		ret	nz		;RUN with R option
                      	
  59D5                	CLOSALL:
  59D5  3A31FB        		ld	a,(FILES)
  59D8  5F            		ld	e,a
  59D9                	CLOSLP2:
  59D9  D5            		push	de
  59DA  CD0E56        		call	FCLOSE
  59DD  D1            		pop	de
  59DE  1D            		dec	e
  59DF  F2D959        		jp	p,CLOSLP2
  59E2  C9            		ret
                      	
                      	
                      	;LFILES command
  59E3                	C_LFLS:
  59E3  3E01          		ld	a,01h
  59E5  3258FA        		ld	(DEVICE),a
                      	;	jr	C_FLS
                      	
                      	;FILES command
  59E8                	C_FLS:
  59E8  CD673F        		call	CHKCLN
  59EB  3E01          		ld	a,01h
  59ED  C4E40D        		call	nz,INT1ARG
  59F0  3D            		dec	a
  59F1  CDCA53        		call	READFAT
  59F4  C24442        		jp	nz,AOERR
                      	
                      	;read directory
  59F7  0E01          		ld	c,01h		;sector 1
  59F9                	FLSLP1:
  59F9  0612          		ld	b,12h		;track 18
  59FB  CD935C        		call	READBUF0
                      	
  59FE  0610          		ld	b,10h
  5A00                	FLSLP2:
  5A00  7E            		ld	a,(hl)
  5A01  3C            		inc	a
  5A02  CA885A        		jp	z,FLSEND	;ffh=unused
                      	
  5A05  C5            		push	bc
  5A06  111000        		ld	de,0010h
  5A09  3D            		dec	a
  5A0A  286C          		jr	z,FLSZ2		;00h=deleted
                      	
                      	;file name
  5A0C  0606          		ld	b,06h
  5A0E                	FLSLP3:
  5A0E  7E            		ld	a,(hl)
  5A0F  CDC726        		call	PUTDEV
  5A12  23            		inc	hl
  5A13  10F9          		djnz	FLSLP3
                      	
  5A15  54            		ld	d,h
  5A16  5D            		ld	e,l
  5A17  13            		inc	de
  5A18  13            		inc	de
  5A19  13            		inc	de
  5A1A  1A            		ld	a,(de)		;attribute
  5A1B  B7            		or	a		;
  5A1C  0F            		rrca
  5A1D  3E2E          		ld	a,'.'
  5A1F  FA285A        		jp	m,FLSM		;
  5A22  3E2A          		ld	a,'*'
  5A24  3802          		jr	c,FLSM
  5A26  3E20          		ld	a,' '
  5A28                	FLSM:
  5A28  CDC726        		call	PUTDEV
                      	
                      	;suffix
  5A2B  0603          		ld	b,03h
  5A2D                	FLSLP4:
  5A2D  7E            		ld	a,(hl)
  5A2E  CDC726        		call	PUTDEV
  5A31  23            		inc	hl
  5A32  10F9          		djnz	FLSLP4
  5A34  3E20          		ld	a,' '
  5A36  CDC726        		call	PUTDEV
                      	
                      	;clusters
  5A39  23            		inc	hl
  5A3A  7E            		ld	a,(hl)		;first cluster
  5A3B  E5            		push	hl		;;
  5A3C  50            		ld	d,b		;=0
  5A3D  CD955A        		call	CNTCLST
  5A40  3C            		inc	a
  5A41  CD7A39        		call	PUTI1
  5A44  E1            		pop	hl		;;
                      	
                      	;alignment
  5A45  3AACFD        		ld	a,(WIDTH)
  5A48  FE20          		cp	COLUMNS
  5A4A  06EF          		ld	b,0efh		;mask
  5A4C  3002          		jr	nc,FLSLP6
  5A4E  06FF          		ld	b,0ffh		;mask
                      	
  5A50                	FLSLP6:
  5A50  3A58FA        		ld	a,(DEVICE)
  5A53  0F            		rrca			;
  5A54  3AA9FD        		ld	a,(CSRX)
  5A57  3D            		dec	a
  5A58  3005          		jr	nc,FLSNC2	;
                      	;printer
  5A5A  3A57FA        		ld	a,(PRTPOS)
  5A5D  060F          		ld	b,0fh		;mask
  5A5F                	FLSNC2:
  5A5F  A0            		and	b
  5A60  2807          		jr	z,FLSZ1
  5A62  3E20          		ld	a,' '
  5A64  CDC726        		call	PUTDEV
  5A67  18E7          		jr	FLSLP6
                      	
  5A69                	FLSZ1:
  5A69  CB68          		bit	5,b
  5A6B  2008          		jr	nz,FLSNZ
                      	;printer
  5A6D  3A57FA        		ld	a,(PRTPOS)
  5A70  FE20          		cp	COLUMNS
  5A72  D43927        		call	nc,PUTNL
                      	
  5A75                	FLSNZ:
  5A75  110600        		ld	de,0006h
  5A78                	FLSZ2:
  5A78  19            		add	hl,de
                      	
  5A79  CD4D27        		call	STOPESC
  5A7C  C1            		pop	bc
  5A7D  05            		dec	b
  5A7E  C2005A        		jp	nz,FLSLP2
                      	
  5A81  0C            		inc	c
  5A82  79            		ld	a,c
  5A83  FE0C          		cp	0ch
  5A85  DAF959        		jp	c,FLSLP1
  5A88                	FLSEND:
  5A88  CD3927        		call	PUTNL
                      	
  5A8B  2A33FB        		ld	hl,(FATP)
  5A8E  36FF          		ld	(hl),0ffh	;last accessed track (ff=no open files)
                      	
  5A90  AF            		xor	a
  5A91  3258FA        		ld	(DEVICE),a
  5A94  C9            		ret
                      	
                      	
                      	;count clusters
                      	;input: a=first cluster number
                      	;output: a=clusters, c=last sectors
                      	;destroy: f,b,hl
  5A95                	CNTCLST:
  5A95  0EFF          		ld	c,0ffh
  5A97                	CNTCLST2:
  5A97  0600          		ld	b,00h
  5A99                	CNTCLP:
  5A99  B9            		cp	c
  5A9A  2819          		jr	z,CNTCLZ
  5A9C  CD1F54        		call	GETFAT
  5A9F  FEC9          		cp	0c9h
  5AA1  D25942        		jp	nc,ATERR
  5AA4  FEC0          		cp	0c0h
  5AA6  3007          		jr	nc,CNTCNC
  5AA8  FE46          		cp	CLSTS
  5AAA  D25942        		jp	nc,ATERR
  5AAD  10EA          		djnz	CNTCLP
  5AAF                	CNTCNC:
  5AAF  D6C0          		sub	0c0h
  5AB1  4F            		ld	c,a
  5AB2  AF            		xor	a
  5AB3  90            		sub	b
  5AB4  C9            		ret
                      	
  5AB5                	CNTCLZ:
  5AB5  AF            		xor	a
  5AB6  90            		sub	b
  5AB7  C9            		ret
                      	
                      	
                      	;check disk file buffer and put a character to disk file (from PUTDEV hook)
                      	;input: a=data
                      	;destroy: none(file buffer pointer=0) / af(file buffer pointer<>0)
  5AB8                	PUTDSK:
  5AB8  E5            		push	hl
  5AB9  F5            		push	af
  5ABA  2A39FB        		ld	hl,(BUFP)
  5ABD  7C            		ld	a,h
  5ABE  B5            		or	l
  5ABF  2003          		jr	nz,PUTDMAIN
  5AC1  F1            		pop	af
  5AC2  E1            		pop	hl
  5AC3  C9            		ret
                      	
  5AC4                	PUTDMAIN:
  5AC4  F1            		pop	af
  5AC5  D5            		push	de
  5AC6  C5            		push	bc
  5AC7  F5            		push	af		;data
                      	
  5AC8  56            		ld	d,(hl)		;+0: file open mode
  5AC9  23            		inc	hl
  5ACA  23            		inc	hl
  5ACB  46            		ld	b,(hl)		;+2: cluster
  5ACC  23            		inc	hl
  5ACD  4E            		ld	c,(hl)		;+3: sector in cluster
                      	
  5ACE  23            		inc	hl
  5ACF  23            		inc	hl
  5AD0  23            		inc	hl
  5AD1  E5            		push	hl
  5AD2  23            		inc	hl
  5AD3  CB66          		bit	4,(hl)		;+7: file status: write protect?
  5AD5  C26B42        		jp	nz,FWERR
  5AD8  CB4E          		bit	1,(hl)		;+7: file status: to next sector?
  5ADA  2832          		jr	z,PUTDDATA
                      	
  5ADC  CB5A          		bit	3,d
  5ADE  200E          		jr	nz,PUTDAPP
  5AE0  CB4A          		bit	1,d
  5AE2  2027          		jr	nz,PUTDOUT
                      	
                      	;random mode
  5AE4                	PUTDRND:
  5AE4  CD875B        		call	PUTD1A
  5AE7  CDFA5B        		call	RDNEXT
  5AEA  381F          		jr	c,PUTDNEW
  5AEC  1820          		jr	PUTDDATA
                      	
                      	;append mode
  5AEE                	PUTDAPP:
  5AEE  78            		ld	a,b		;cluster
  5AEF  CD945D        		call	LASTSECT
  5AF2  B7            		or	a
  5AF3  2816          		jr	z,PUTDNEW
                      	
  5AF5  CB38          		srl	b		;track=cluster/2
  5AF7  3002          		jr	nc,PUTDNC1
  5AF9  C608          		add	a,08h
  5AFB                	PUTDNC1:
  5AFB  4F            		ld	c,a
  5AFC  CDFE5B        		call	RDNEXT2
                      	
  5AFF  E1            		pop	hl
  5B00  E5            		push	hl
  5B01  77            		ld	(hl),a		;+6: position
  5B02  B7            		or	a
  5B03  2009          		jr	nz,PUTDDATA
                      	
  5B05  23            		inc	hl
  5B06  23            		inc	hl
  5B07  23            		inc	hl
  5B08  CD805C        		call	SET0BUF
                      	
                      	;output mode
  5B0B                	PUTDOUT:
                      	
                      	;new sector
  5B0B                	PUTDNEW:
  5B0B  CDC45B        		call	NEXTSECTW3
                      	
  5B0E                	PUTDDATA:
  5B0E  E1            		pop	hl		;(BUFP)+6
  5B0F  F1            		pop	af		;data
  5B10  1600          		ld	d,00h
  5B12  5E            		ld	e,(hl)		;+6: position in buffer
  5B13  34            		inc	(hl)		;z-flag
  5B14  23            		inc	hl
  5B15  CB8E          		res	1,(hl)
  5B17  CBDE          		set	3,(hl)		;+7: file status, bit3=write
  5B19  23            		inc	hl
  5B1A  23            		inc	hl
  5B1B  19            		add	hl,de		;[+9,+264]: buffer
  5B1C  77            		ld	(hl),a
  5B1D  201C          		jr	nz,PUTDEND	;posision: ff->00?
                      	
                      	;write into disk
  5B1F  2A39FB        		ld	hl,(BUFP)
  5B22  23            		inc	hl
  5B23  23            		inc	hl
  5B24  46            		ld	b,(hl)		;+2: cluster
  5B25  23            		inc	hl
  5B26  7E            		ld	a,(hl)		;+3: sector in cluster
  5B27  CB38          		srl	b		;track=cluster/2
  5B29  3002          		jr	nc,PUTDNC2
  5B2B  C608          		add	a,08h
  5B2D                	PUTDNC2:
  5B2D  4F            		ld	c,a
  5B2E  2A33FB        		ld	hl,(FATP)
  5B31  70            		ld	(hl),b		;last accessed track
  5B32  CDC15C        		call	WRTBUF
  5B35  CDFA5B        		call	RDNEXT
  5B38  DCBA5B        		call	c,NEXTSECTW2
                      	
  5B3B                	PUTDEND:
  5B3B  C1            		pop	bc
  5B3C  D1            		pop	de
  5B3D  E1            		pop	hl
  5B3E  E3            		ex	(sp),hl		;cancel return to PUTDEV
  5B3F  E1            		pop	hl
  5B40  C9            		ret
                      	
                      	
                      	;get data from disk (sequential read)
                      	;output: a=data, c-flag(1=no data)
                      	;destroy: f,de
  5B41                	GETDSK:
  5B41  E5            		push	hl
  5B42  C5            		push	bc
  5B43  2A39FB        		ld	hl,(BUFP)
  5B46  110700        		ld	de,0007h
  5B49  19            		add	hl,de		;+7: file status
  5B4A  CB4E          		bit	1,(hl)		;to next sector?
  5B4C  280A          		jr	z,GETDZ
                      	
                      	;bit1=1 (to next sector)
  5B4E  E5            		push	hl
  5B4F  CD875B        		call	PUTD1A
  5B52  CDFA5B        		call	RDNEXT
  5B55  E1            		pop	hl
  5B56  381E          		jr	c,GETDEND	;no next sector
                      	
                      	;bit1(to next sector)=0
  5B58                	GETDZ:
  5B58  54            		ld	d,h
  5B59  5D            		ld	e,l
  5B5A  2B            		dec	hl
  5B5B  4E            		ld	c,(hl)		;+6: position
  5B5C  34            		inc	(hl)
  5B5D  7E            		ld	a,(hl)
  5B5E  23            		inc	hl
  5B5F  CB46          		bit	0,(hl)		;+7: file status: binary file?
  5B61  2B            		dec	hl
  5B62  2B            		dec	hl
  5B63  2001          		jr	nz,GETDBIN	;if binary file
  5B65  BE            		cp	(hl)		;+5: end position
  5B66                	GETDBIN:
  5B66  0600          		ld	b,00h
  5B68  09            		add	hl,bc
  5B69  23            		inc	hl
  5B6A  23            		inc	hl
  5B6B  23            		inc	hl
  5B6C  23            		inc	hl
                      	
  5B6D  7E            		ld	a,(hl)		;[+9,+264]: buffer
  5B6E  F5            		push	af
                      	
  5B6F  2003          		jr	nz,GETDNZ	;if binary file or position<>end
                      	
                      	;position=end
  5B71  EB            		ex	de,hl
  5B72  CBCE          		set	1,(hl)		;+7: file status, bit1=to next sector
                      	
  5B74                	GETDNZ:
  5B74  F1            		pop	af
  5B75  B7            		or	a		;reset c-flag
  5B76                	GETDEND:
  5B76  C1            		pop	bc
  5B77  E1            		pop	hl
  5B78  C9            		ret
                      	
                      	
                      	;get 2 byte from disk (sequential read)
                      	;output: hl=data
                      	;destroy: af,bc,de
  5B79                	GETDSK2:
  5B79  CD415B        		call	GETDSK
  5B7C  3804          		jr	c,GETDSK2ERR
  5B7E  6F            		ld	l,a
  5B7F  CD415B        		call	GETDSK
  5B82                	GETDSK2ERR:
  5B82  DACB03        		jp	c,FCERR
  5B85  67            		ld	h,a
  5B86  C9            		ret
                      	
                      	
                      	;put 1ah to disk and write buffer, if necessary
                      	;input: hl=buffer pointer+7
                      	;destroy: af,bc,de,hl
  5B87                	PUTD1A:
  5B87  CB5E          		bit	3,(hl)		;+7: file status, bit3=write
  5B89  C8            		ret	z
  5B8A  CB9E          		res	3,(hl)
  5B8C  CB46          		bit	0,(hl)
  5B8E  C0            		ret	nz
                      	
  5B8F  E5            		push	hl
  5B90  11FCFF        		ld	de,0-0004h
  5B93  19            		add	hl,de
  5B94  7E            		ld	a,(hl)		;+3: sector in cluster
  5B95  2B            		dec	hl
  5B96  46            		ld	b,(hl)		;+2: cluster
  5B97  CB38          		srl	b		;track=cluster/2
  5B99  3002          		jr	nc,PUTD1ANC
  5B9B  C608          		add	a,08h
  5B9D                	PUTD1ANC:
  5B9D  4F            		ld	c,a		;sector
  5B9E  C5            		push	bc
  5B9F  CD4B53        		call	NEXTSECT
  5BA2  C1            		pop	bc
                      	
  5BA3  E1            		pop	hl
  5BA4  3011          		jr	nc,PUTD1AEND
                      	
  5BA6  23            		inc	hl
  5BA7  23            		inc	hl		;+9
  5BA8  C5            		push	bc
  5BA9  CDA55D        		call	ENDPOS
  5BAC  78            		ld	a,b
  5BAD  C1            		pop	bc
  5BAE  DAA756        		jp	c,REVFAT	;no data
                      	
  5BB1  B7            		or	a
  5BB2  2803          		jr	z,PUTD1AEND	;data full
                      	
  5BB4  23            		inc	hl
  5BB5  361A          		ld	(hl),1ah	;[+9,+264]: buffer
                      	
  5BB7                	PUTD1AEND:
  5BB7  C3C15C        		jp	WRTBUF
                      	
                      	
                      	;get track and sector for writing (search unused cluster if sector=8 or 16)
                      	; and write FAT buffer
                      	;output: b=next cluster, c=next sector in cluster
                      	;destroy: af,hl
  5BBA                	NEXTSECTW2:
  5BBA  2A39FB        		ld	hl,(BUFP)
  5BBD  010900        		ld	bc,0009h
  5BC0  09            		add	hl,bc
  5BC1  CD805C        		call	SET0BUF
                      	
  5BC4                	NEXTSECTW3:
  5BC4  2A39FB        		ld	hl,(BUFP)
  5BC7  23            		inc	hl
  5BC8  23            		inc	hl
  5BC9  46            		ld	b,(hl)		;+2: cluster
  5BCA  78            		ld	a,b
  5BCB  23            		inc	hl
  5BCC  4E            		ld	c,(hl)		;+3: sector in cluster(0-8)
                      	
  5BCD                	NEXTSECTW4:
  5BCD  CD1F54        		call	GETFAT
  5BD0  CB59          		bit	3,c
  5BD2  2018          		jr	nz,NEWCLST2	;if sector in cluster=8
                      	;same cluster
  5BD4  34            		inc	(hl)		;FAT
  5BD5  0C            		inc	c
                      	
  5BD6                	NXSCTWEND2:
  5BD6  CDF953        		call	SETSUM
  5BD9  23            		inc	hl
  5BDA  36FF          		ld	(hl),0ffh	;need to overwrite FAT
                      	
  5BDC  2A39FB        		ld	hl,(BUFP)
  5BDF  23            		inc	hl
  5BE0  23            		inc	hl
  5BE1  70            		ld	(hl),b		;+2: cluster
  5BE2  23            		inc	hl
  5BE3  71            		ld	(hl),c		;+3: sector in cluster
  5BE4  23            		inc	hl
  5BE5  23            		inc	hl
  5BE6  3600          		ld	(hl),00h	;+5: end position
  5BE8  23            		inc	hl
  5BE9  3600          		ld	(hl),00h	;+6: position
  5BEB  C9            		ret
                      	
                      	
                      	;new cluster
  5BEC                	NEWCLST2:
  5BEC  78            		ld	a,b		;old cluster
  5BED  E5            		push	hl		;old cluster FAT address
  5BEE  CDD254        		call	SRCHCLST
  5BF1  36C1          		ld	(hl),0c1h
  5BF3  E1            		pop	hl		;old FAT buffer
  5BF4  77            		ld	(hl),a		;new cluster
  5BF5  47            		ld	b,a
  5BF6  0E01          		ld	c,01h		;sector in cluster
  5BF8  18DC          		jr	NXSCTWEND2
                      	
                      	
                      	;read next sector
                      	;output: a=end position, c-flag(1=no next sector)
                      	;destroy: af,bc,de,hl
  5BFA                	RDNEXT:
  5BFA  CD6453        		call	NEXTSECT2
  5BFD  D8            		ret	c
                      	
                      	;input: b=track, c=sector
  5BFE                	RDNEXT2:
  5BFE  CD9F5C        		call	READBUF
  5C01  E5            		push	hl
                      	
  5C02  79            		ld	a,c
  5C03  C6F7          		add	a,0f7h
  5C05  CB10          		rl	b		;cluster=track*2+(1 if sector>=9)
  5C07  E607          		and	07h
  5C09  3C            		inc	a		;sector in cluster
  5C0A  4F            		ld	c,a
                      	
  5C0B  2A39FB        		ld	hl,(BUFP)
  5C0E  23            		inc	hl
  5C0F  23            		inc	hl
  5C10  70            		ld	(hl),b		;+2: cluster
  5C11  23            		inc	hl
  5C12  71            		ld	(hl),c		;+3: sector in cluster
  5C13  23            		inc	hl
  5C14  23            		inc	hl
  5C15  AF            		xor	a
  5C16  77            		ld	(hl),a		;+5: end position
  5C17  E5            		push	hl
  5C18  23            		inc	hl
  5C19  77            		ld	(hl),a		;+6: position
  5C1A  23            		inc	hl
  5C1B  CB8E          		res	1,(hl)		;+7: file status, bit1=to next sector
                      	
  5C1D  C5            		push	bc
  5C1E  CD6453        		call	NEXTSECT2
  5C21  C1            		pop	bc		;c=sector in cluster
                      	
  5C22  D1            		pop	de		;de=buffer pointer+5
  5C23  E1            		pop	hl		;hl=buffer pointer+9
  5C24  3E00          		ld	a,00h
  5C26  D0            		ret	nc
                      	
  5C27  CDA55D        		call	ENDPOS
  5C2A  78            		ld	a,b
  5C2B  12            		ld	(de),a		;+5: end position
                      	
  5C2C  B7            		or	a		;reset c-flag
  5C2D  C9            		ret
                      	
                      	
                      	;DSKI$() function
  5C2E                	F_DSKI:
  5C2E  BF            		cp	a		;set z-flag
  5C2F  CD455C        		call	DSKIOSUB
  5C32  CD935C        		call	READBUF0
  5C35  3EFF          		ld	a,0ffh
  5C37  CD2326        		call	MAKESTR
  5C3A  C3C527        		jp	INKYEND
                      	
                      	
                      	;DSKO$ command
  5C3D                	C_DSKO:
  5C3D  AF            		xor	a
  5C3E  3C            		inc	a		;reset z-flag
  5C3F  CD455C        		call	DSKIOSUB
  5C42  C3B85C        		jp	WRTBUF0
                      	
                      	
                      	;subroutine for DSKI$ and DSKO$
                      	;input: hl=program address, z-flag(1=DSKI$,0=DSKO$)
  5C45                	DSKIOSUB:
  5C45  F5            		push	af		;z-flag(1=DSKI$,0=DSKO$)
  5C46  CC820B        		call	z,CHKLPAR
  5C49  CDE40D        		call	INT1ARG		;a,e=drive(1-4)
  5C4C  D5            		push	de
  5C4D  7E            		ld	a,(hl)
  5C4E  FE2C          		cp	','
  5C50  C2C203        		jp	nz,SNERR
  5C53  23            		inc	hl
  5C54  CD320E        		call	INT1ARG2	;c=track(0-34),e=sector(1-16)
  5C57  41            		ld	b,c		;b=track
  5C58  4B            		ld	c,e		;c=sector
  5C59  D1            		pop	de		;e=drive(1-4)
  5C5A  F1            		pop	af		;z-flag(1=DSKI$,0=DSKO$)
  5C5B  CC910B        		call	z,CHKRPAR
  5C5E  7B            		ld	a,e		;drive(1-4)
  5C5F  3D            		dec	a
  5C60  213BFB        		ld	hl,DRIVES
  5C63  BE            		cp	(hl)
  5C64  D25C42        		jp	nc,DNERR
                      	
  5C67  F5            		push	af		;drive-1(0-3)
  5C68  78            		ld	a,b
  5C69  FE23          		cp	TRACKS		;track(0-34)
  5C6B  D25F42        		jp	nc,TSERR
  5C6E  79            		ld	a,c
  5C6F  3D            		dec	a
  5C70  FE10          		cp	10h		;sector(1-16)
  5C72  D25F42        		jp	nc,TSERR
  5C75  F1            		pop	af		;drive-1(0-3)
                      	
  5C76  CDDF5C        		call	SETIX
  5C79  DD7700        		ld	(ix+00h),a	;drive-1(0-3)
  5C7C  C9            		ret
                      	
                      	
                      	;fill buffer0 to 00h
                      	;output: hl=(BUF0)
                      	;destroy: af,b
  5C7D                	SET0BUF0:
  5C7D  2A37FB        		ld	hl,(BUF0)
                      	
                      	;set buffer to 00h
                      	;input: hl=buffer address
                      	;destroy: af,b
  5C80                	SET0BUF:
  5C80  AF            		xor	a
  5C81  47            		ld	b,a
  5C82                	SET0BUFLP:
  5C82  77            		ld	(hl),a
  5C83  23            		inc	hl
  5C84  10FC          		djnz	SET0BUFLP
  5C86  25            		dec	h
  5C87  C9            		ret
                      	
                      	
                      	;write directory in buffer#0
                      	;input: ix, (ix+00h)=drive-1
                      	;output: hl=(BUF0)
                      	;destroy: af,bc,de
  5C88                	WRTDIR:
  5C88  0612          		ld	b,12h		;track
  5C8A  DD4E02        		ld	c,(ix+02h)	;sector written in SRCHFILE
  5C8D  CDB85C        		call	WRTBUF0
  5C90  C37D5C        		jp	SET0BUF0	;hl=(BUF0)
                      	
                      	
                      	;read 1 sector into buffer#0
                      	;input: b=track, c=sector, ix, (ix+00h)=drive-1
                      	;output: hl=(BUF0)
                      	;destroy: af,b,de
  5C93                	READBUF0:
  5C93  2A37FB        		ld	hl,(BUF0)
  5C96  E5            		push	hl
  5C97  CDA65C        		call	RDBFMAIN1
  5C9A  CD8256        		call	CHKCLOSE
  5C9D  E1            		pop	hl
  5C9E  C9            		ret
                      	
                      	
                      	;read 1 sector into file buffer
                      	;input: b=track, c=sector, ix, (ix+00h)=drive-1, (BUFP)=file buffer pointer
                      	;output: hl=buffer pointer+9
                      	;destroy: af,de
  5C9F                	READBUF:
  5C9F  2A39FB        		ld	hl,(BUFP)
                      	
                      	;input: b=track, c=sector, ix, (ix+00h)=drive-1, hl=file buffer pointer
  5CA2                	READBUF2:
  5CA2  110900        		ld	de,0009h
  5CA5  19            		add	hl,de
                      	
                      	;read 1 sector
                      	;input: b=track, c=sector, ix, (ix+00h)=drive-1, hl=address
                      	;destroy: af
  5CA6                	RDBFMAIN1:
  5CA6  3E01          		ld	a,01h		;1 sector
                      	
                      	;read disk with error check and change (FATP)
                      	;input:
                      	; a=the number of sector, b=track, c=sector, hl=address
                      	; ix=work address, (ix+00h)=drive-1
                      	;destroy: f,de
  5CA8                	RDBFMAIN:
  5CA8  E5            		push	hl
  5CA9  54            		ld	d,h
  5CAA  5D            		ld	e,l
  5CAB  B7            		or	a		;reset z- and c-flag for reading
  5CAC  CDFD5C        		call	DISK2
  5CAF  DA5942        		jp	c,ATERR
  5CB2  2A33FB        		ld	hl,(FATP)
  5CB5  70            		ld	(hl),b		;last accessed track
  5CB6  E1            		pop	hl
  5CB7  C9            		ret
                      	
                      	
                      	;write 1 sector in buffer#0 into disk
                      	;input: b=track, c=sector, ix, (ix+00h)=drive-1
                      	;output: hl=(FATP)
                      	;destroy: af,de
  5CB8                	WRTBUF0:
  5CB8  2A37FB        		ld	hl,(BUF0)
  5CBB  CDC85C        		call	WRTBFMAIN1
  5CBE  C38256        		jp	CHKCLOSE
                      	
                      	
                      	;write 1 sector in buffer into disk
                      	;input: b=track, c=sector, ix, (ix+00h)=drive-1, (BUFP)=buffer pointer
                      	;output: hl=(FATP)
                      	;destroy: af,de,hl
  5CC1                	WRTBUF:
  5CC1  2A39FB        		ld	hl,(BUFP)
  5CC4  110900        		ld	de,0009h
  5CC7  19            		add	hl,de
                      	
                      	;write 1 sector into disk
                      	;input: b=track, c=sector, ix, (ix+00h)=drive-1, hl=address
                      	;output: hl=(FATP)
                      	;destroy: af,de
  5CC8                	WRTBFMAIN1:
  5CC8  3E01          		ld	a,01h
                      	
                      	;write disk with error check and change (FATP)
                      	;input:
                      	; a=the number of sector, b=track, c=sector, hl=address
                      	; ix=work address, (ix+00h)=drive-1
                      	;output: hl=(FATP)
                      	;destroy: f,de
  5CCA                	WRTBFMAIN:
  5CCA  37            		scf			;set c-flag for writing
  5CCB  CDFD5C        		call	DISK2
  5CCE  DA5942        		jp	c,ATERR
  5CD1  2A33FB        		ld	hl,(FATP)
  5CD4  70            		ld	(hl),b		;last accessed track
  5CD5  C9            		ret
                      	
                      	
                      	;cluster -> track, sector
                      	;input: a=cluster
                      	;output: b=track, c=sector
                      	;destroy: f
  5CD6                	C2TRSECT:
  5CD6  47            		ld	b,a
  5CD7  CB38          		srl	b		;track=cluster/2
  5CD9  0E01          		ld	c,01h
  5CDB  D0            		ret	nc
  5CDC  0E09          		ld	c,09h
  5CDE  C9            		ret
                      	
                      	
                      	;get ix for disk
                      	;output: ix=disk work address
                      	;destroy: none
  5CDF                	SETIX:
  5CDF  F5            		push	af
  5CE0  DD21D2F9      		ld	ix,0f9d2h
  5CE4  CD9539        		call	CHKMOD
  5CE7  280C          		jr	z,SETIXEND	;mode=5
  5CE9  3A8CFD        		ld	a,(PAGES)
  5CEC  3D            		dec	a
  5CED  2806          		jr	z,SETIXEND	;pages=1
  5CEF  0F            		rrca			;pages>1
  5CF0  0F            		rrca
  5CF1  0F            		rrca			;--,20,40,60
  5CF2  2F            		cpl			;--,df,bf,9f
  5CF3  DD            		db	0ddh		;ix prefix
  5CF4  67            		ld	h,a		;ld ixh,a
  5CF5                	SETIXEND:
  5CF5  F1            		pop	af
  5CF6  C9            		ret
                      	
                      	
                      	;read/write disk
                      	;input:
                      	; a=the number of sector, b=track, c=sector, hl=address
                      	; ix=work address, (ix+00h)=drive-1
                      	; c-flag=0,z-flag=0: read
                      	; c-flag=0,z-flag=1: check
                      	; c-flag=1: write
                      	;output: c-flag(1=FAT error)
                      	;destroy: f,de
  5CF7                	_DISK2:	ds	DISK2-_DISK2
  5CFD                		org	DISK2
                      	
  5CFD  DD361B00      		ld	(ix+1bh),00h	;error count
  5D01  F5            		push	af
  5D02                	DISK2LP:
  5D02  F1            		pop	af
  5D03  54            		ld	d,h
  5D04  5D            		ld	e,l
  5D05  F5            		push	af
  5D06  E5            		push	hl
  5D07  CD7442        		call	DISK
  5D0A  E1            		pop	hl
  5D0B  38F5          		jr	c,DISK2LP
  5D0D  F1            		pop	af
  5D0E  B7            		or	a
  5D0F  C9            		ret
                      	
                      	
                      	;DSKF() function
  5D10                	F_DSKF:
  5D10  CD530B        		call	FNCNUM
  5D13  CD4F07        		call	FTOI1
  5D16  7B            		ld	a,e
  5D17  3D            		dec	a
  5D18  CDCA53        		call	READFAT
  5D1B  2A33FB        		ld	hl,(FATP)
  5D1E  23            		inc	hl
  5D1F  23            		inc	hl
  5D20  23            		inc	hl
                      	
  5D21  010046        		ld	bc,CLSTS*100h+00h
  5D24                	DSKFLP:
  5D24  7E            		ld	a,(hl)
  5D25  3C            		inc	a
  5D26  2001          		jr	nz,DSKFNZ	;ffh=unused
  5D28  0C            		inc	c
  5D29                	DSKFNZ:
  5D29  23            		inc	hl
  5D2A  10F8          		djnz	DSKFLP
                      	
  5D2C  69            		ld	l,c
  5D2D  C3660C        		jp	I1TOF
                      	
                      	
                      	;LOC() function
  5D30                	F_LOC:
  5D30  CD2252        		call	FNCFNUM
  5D33  CD395D        		call	LOC
  5D36  C3680C        		jp	I2TOF
                      	
                      	;calculate LOC
                      	;input: hl=buffer pointer
                      	;output: hl
                      	;destroy: af,bc
  5D39                	LOC:
  5D39  23            		inc	hl
  5D3A  7E            		ld	a,(hl)		;+1: first cluster
  5D3B  23            		inc	hl
  5D3C  4E            		ld	c,(hl)		;+2: cluster
  5D3D  E5            		push	hl
  5D3E  CD975A        		call	CNTCLST2
  5D41  E1            		pop	hl
  5D42  23            		inc	hl
  5D43  4E            		ld	c,(hl)		;+3: sector in cluster
                      	;	jr	HLA8C
                      	
                      	;hl=a*8+c
                      	;input: a,c
                      	;output: hl
                      	;destroy: b
  5D44                	HLA8C:
  5D44  2600          		ld	h,00h
  5D46  44            		ld	b,h
  5D47  6F            		ld	l,a
  5D48  29            		add	hl,hl		;*2
  5D49  29            		add	hl,hl		;*4
  5D4A  29            		add	hl,hl		;*8
  5D4B  09            		add	hl,bc
  5D4C  C9            		ret
                      	
                      	
                      	;LOF() function
  5D4D                	F_LOF:
  5D4D  CD2252        		call	FNCFNUM
  5D50  23            		inc	hl
  5D51  7E            		ld	a,(hl)		;+1: first cluster
  5D52  CD955A        		call	CNTCLST
  5D55  CD445D        		call	HLA8C
  5D58  C3680C        		jp	I2TOF
                      	
                      	
                      	;EOF() function
  5D5B                	F_EOF:
  5D5B  CD2252        		call	FNCFNUM
  5D5E  CD675D        		call	CHKEOF
  5D61  C22A0C        		jp	nz,SETFALSE
  5D64  C33B0C        		jp	SETTRUE
                      	
                      	
                      	;check if end of file
                      	;input: hl=buffer pointer
                      	;output: z-flag(1=EOF)
                      	;destroy: af,bc,de,hl
  5D67                	CHKEOF:
  5D67  23            		inc	hl
  5D68  23            		inc	hl
  5D69  46            		ld	b,(hl)		;+2: cluster
  5D6A  23            		inc	hl
  5D6B  23            		inc	hl
  5D6C  23            		inc	hl
  5D6D  7E            		ld	a,(hl)		;+5: end position
  5D6E  23            		inc	hl
  5D6F  B7            		or	a
  5D70  2802          		jr	z,CHKEOFZ	;continue to next sector
  5D72                	EOFEND:
  5D72  BE            		cp	(hl)		;+6: position
  5D73  C9            		ret
                      	
  5D74                	CHKEOFZ:
  5D74  BE            		cp	(hl)		;+6: position
  5D75  C0            		ret	nz
  5D76  E5            		push	hl
  5D77  78            		ld	a,b
  5D78  CD945D        		call	LASTSECT
  5D7B  E1            		pop	hl
  5D7C  B7            		or	a
  5D7D  C8            		ret	z
                      	
  5D7E  2B            		dec	hl
  5D7F  2B            		dec	hl
  5D80  2B            		dec	hl
  5D81  BE            		cp	(hl)		;+3: sector in cluster
  5D82  C0            		ret	nz
                      	
  5D83  2B            		dec	hl
  5D84  78            		ld	a,b
  5D85  BE            		cp	(hl)		;+2: cluster
  5D86  C9            		ret
                      	
                      	
                      	;input: hl=buffer pointer+2
                      	;output: z-flag (1=last sector)
                      	;destroy: af,bc,hl
  5D87                	CHKLASTSECT:
  5D87  7E            		ld	a,(hl)		;+2: cluster
  5D88  E5            		push	hl
  5D89  CD945D        		call	LASTSECT
  5D8C  E1            		pop	hl
  5D8D  23            		inc	hl
  5D8E  BE            		cp	(hl)		;+3: sector in cluster
  5D8F  C0            		ret	nz
  5D90  78            		ld	a,b
  5D91  2B            		dec	hl
  5D92  BE            		cp	(hl)		;+2: cluster
  5D93  C9            		ret
                      	
                      	
                      	;get the last sector of file
                      	;input: a=cluster
                      	;output: a=sector in cluster(0-8), b=cluster, hl=(FATP)+3+cluster
                      	;destroy: f,c
  5D94                	LASTSECT:
  5D94  F5            		push	af		;a=cluster
  5D95  CD1F54        		call	GETFAT
  5D98  C1            		pop	bc		;b=cluster
  5D99  FEC0          		cp	0c0h
  5D9B  38F7          		jr	c,LASTSECT
  5D9D  D6C0          		sub	0c0h
  5D9F  FE09          		cp	09h
  5DA1  D8            		ret	c
  5DA2  C36B42        		jp	FWERR
                      	
                      	
                      	;get the end position in sector
                      	;input: hl=buffer pointer+9
                      	;output: b=position of the last data, hl=address, c-flag(1=no data)
                      	;destroy: af
  5DA5                	ENDPOS:
  5DA5  24            		inc	h
  5DA6  2B            		dec	hl
                      	
  5DA7  0600          		ld	b,00h
  5DA9                	ENDPLP:
  5DA9  7E            		ld	a,(hl)
  5DAA  FE1A          		cp	1ah
  5DAC  2807          		jr	z,ENDPZ
  5DAE  B7            		or	a
  5DAF  C0            		ret	nz
  5DB0  2B            		dec	hl
  5DB1  10F6          		djnz	ENDPLP
  5DB3  37            		scf
  5DB4  C9            		ret
                      	
  5DB5                	ENDPZ:
  5DB5  05            		dec	b
  5DB6  2B            		dec	hl
                      	;	or	a		;reset c-flag
  5DB7  C9            		ret
                      	
                      	
                      	;BSAVE command
  5DB8                	C_BSV:
  5DB8  CD5E5F        		call	SETFNAME
  5DBB  F5            		push	af		;drive-1
  5DBC  CD823F        		call	CHKCLCM
  5DBF  CAC203        		jp	z,SNERR
  5DC2  CD220E        		call	INTARG2		;bc,de
                      	
  5DC5  F1            		pop	af		;drive-1
  5DC6  D5            		push	de		;size
  5DC7  C5            		push	bc		;start address
  5DC8  2601          		ld	h,01h		;attribute
  5DCA  CD395F        		call	SVCOMMON
  5DCD  D1            		pop	de		;start address
  5DCE  2A37FB        		ld	hl,(BUF0)
  5DD1  73            		ld	(hl),e
  5DD2  23            		inc	hl
  5DD3  72            		ld	(hl),d
                      	
  5DD4  E1            		pop	hl		;size
  5DD5  E5            		push	hl		;size
  5DD6  19            		add	hl,de		;start address + size
  5DD7  D5            		push	de		;start address
  5DD8  EB            		ex	de,hl
  5DD9  2A37FB        		ld	hl,(BUF0)
  5DDC  23            		inc	hl
  5DDD  23            		inc	hl
  5DDE  73            		ld	(hl),e
  5DDF  23            		inc	hl
  5DE0  72            		ld	(hl),d
  5DE1  D1            		pop	de		;start address
  5DE2  E1            		pop	hl		;size
  5DE3  C5            		push	bc		;track, sector
                      	
  5DE4  7C            		ld	a,h
  5DE5  B5            		or	l
  5DE6  2828          		jr	z,BSVZ1
                      	
  5DE8  44            		ld	b,h
  5DE9  4D            		ld	c,l
                      	
  5DEA  2A37FB        		ld	hl,(BUF0)
  5DED  23            		inc	hl
  5DEE  23            		inc	hl
  5DEF  23            		inc	hl
  5DF0  23            		inc	hl
                      	
  5DF1  3EFB          		ld	a,0fbh
                      	
                      	;de=data address, hl=buffer address, bc=total size, a=ldir size-1
  5DF3                	BSVLP1:
  5DF3  C5            		push	bc		;size
  5DF4  04            		inc	b
  5DF5  05            		dec	b
  5DF6  2003          		jr	nz,BSVNZ2
  5DF8  B9            		cp	c
  5DF9  3004          		jr	nc,BSVNC1
  5DFB                	BSVNZ2:
  5DFB  4F            		ld	c,a
  5DFC  0600          		ld	b,00h
  5DFE  03            		inc	bc		;00fch or 0100h
  5DFF                	BSVNC1:
  5DFF  C5            		push	bc		;ldir size
  5E00  EB            		ex	de,hl
  5E01  CD93FE        		call	LDIRRAM
  5E04  EB            		ex	de,hl		;de <- data address, hl <- buffer address
  5E05  C1            		pop	bc		;ldir size
  5E06  E1            		pop	hl		;size
  5E07  AF            		xor	a
  5E08  ED42          		sbc	hl,bc
  5E0A  3002          		jr	nc,BSVNC2
  5E0C  67            		ld	h,a		;hl=0000h
  5E0D  6F            		ld	l,a
  5E0E                	BSVNC2:
  5E0E  C1            		pop	bc		;b=track, c=sector
  5E0F  C5            		push	bc		;b=track, c=sector
  5E10                	BSVZ1:
  5E10  E5            		push	hl		;size
  5E11  D5            		push	de		;data address
  5E12  CDB85C        		call	WRTBUF0
                      	
                      	;FAT
  5E15  CD1A54        		call	GETFAT2
  5E18  79            		ld	a,c		;sector=1-16
  5E19  3D            		dec	a		;0-15
  5E1A  E607          		and	07h		;0-7
  5E1C  C6C1          		add	a,0c1h		;c1-c8
  5E1E  77            		ld	(hl),a
  5E1F  CDF953        		call	SETSUM
  5E22  CD7D5C        		call	SET0BUF0
                      	
                      	;end?
  5E25  D1            		pop	de		;data address
  5E26  C1            		pop	bc		;size
  5E27  78            		ld	a,b
  5E28  B1            		or	c
  5E29  2816          		jr	z,BSVEND
                      	
                      	;next sector
  5E2B  60            		ld	h,b
  5E2C  69            		ld	l,c
  5E2D  C1            		pop	bc		;b=track, c=sector
  5E2E  79            		ld	a,c
  5E2F  C6F7          		add	a,0f7h
  5E31  78            		ld	a,b
  5E32  8F            		adc	a,a		;cluster=track*2+(1 if sector>=9)
  5E33  5F            		ld	e,a
  5E34  CD9253        		call	NEXTSECTW
                      	
  5E37  C5            		push	bc		;b=track, c=sector
  5E38  44            		ld	b,h
  5E39  4D            		ld	c,l
  5E3A  2A37FB        		ld	hl,(BUF0)
  5E3D  3EFF          		ld	a,0ffh
  5E3F  18B2          		jr	BSVLP1
                      	
  5E41                	BSVEND:
  5E41  C1            		pop	bc		;track, sector
  5E42  C36C56        		jp	WRTFAT
                      	
                      	
                      	;BLOAD command
  5E45                	C_BLD:
  5E45  AF            		xor	a
  5E46  CD5E5F        		call	SETFNAME	;default: no R option
  5E49  F5            		push	af		;drive-1
  5E4A  115942        		ld	de,ATERR
  5E4D  D5            		push	de		;dummy (start address)
                      	
  5E4E  DD361901      		ld	(ix+19h),01h	;1=start address is not specified
                      	
  5E52  CD823F        		call	CHKCLCM
  5E55  282B          		jr	z,BLDMAIN
  5E57  CD673F        		call	CHKCLN
  5E5A  CAF803        		jp	z,MOERR
  5E5D  FE52          		cp	'R'
  5E5F  2818          		jr	z,BLDZ
  5E61  CD100E        		call	INTARG
  5E64  DD3619FF      		ld	(ix+19h),0ffh	;ff=start address is specified
  5E68  F1            		pop	af		;cancel stack
  5E69  D5            		push	de		;start address
  5E6A  CD823F        		call	CHKCLCM
  5E6D  2813          		jr	z,BLDMAIN
  5E6F  CD603F        		call	SKIPSP
  5E72  E6DF          		and	0dfh
  5E74  FE52          		cp	'R'
  5E76  C2C203        		jp	nz,SNERR
  5E79                	BLDZ:
  5E79  DD7703        		ld	(ix+03h),a	;R option
  5E7C  CD663F        		call	CHKCLNINC
  5E7F  C2C203        		jp	nz,SNERR
                      	
  5E82                	BLDMAIN:
  5E82  224EFF        		ld	(PROGAD),hl
                      	
  5E85  D1            		pop	de		;start address
  5E86  F1            		pop	af		;drive-1
  5E87  D5            		push	de		;start address
  5E88  CDCA53        		call	READFAT
  5E8B  CD3C54        		call	SRCHFILE
  5E8E  C23E42        		jp	nz,FFERR
                      	
  5E91  CDD65C        		call	C2TRSECT
  5E94  CD1F54        		call	GETFAT
  5E97  FEC0          		cp	0c0h
  5E99  CA2B5F        		jp	z,BLDEND2
  5E9C  D1            		pop	de		;start address
  5E9D  C5            		push	bc		;b=track, c=sector
  5E9E  F5            		push	af		;FAT value
  5E9F  D5            		push	de		;start address
  5EA0  CD935C        		call	READBUF0	;hl=(BUF0)
                      	
  5EA3  5E            		ld	e,(hl)		;de=first address
  5EA4  23            		inc	hl
  5EA5  56            		ld	d,(hl)
  5EA6  23            		inc	hl
  5EA7  7E            		ld	a,(hl)		;last address+1
  5EA8  23            		inc	hl
  5EA9  93            		sub	e
  5EAA  4F            		ld	c,a
  5EAB  7E            		ld	a,(hl)
  5EAC  23            		inc	hl
  5EAD  9A            		sbc	a,d
  5EAE  47            		ld	b,a		;bc=size
                      	
  5EAF  DD7E19        		ld	a,(ix+19h)
  5EB2  3C            		inc	a
  5EB3  2002          		jr	nz,BLDNZ1	;start address is not specified
  5EB5  D1            		pop	de		;start address
  5EB6  F5            		push	af		;dummy
                      	
  5EB7                	BLDNZ1:
  5EB7  F1            		pop	af		;cancel
  5EB8  F1            		pop	af		;FAT value
  5EB9  D5            		push	de		;start address
  5EBA  F5            		push	af		;FAT value
                      	
  5EBB  78            		ld	a,b
  5EBC  B1            		or	c
  5EBD  CA325F        		jp	z,BLDEND4	;size=0
                      	
  5EC0  C5            		push	bc		;size
                      	
  5EC1  3EFC          		ld	a,100h-4
  5EC3  04            		inc	b
  5EC4  05            		dec	b
  5EC5  2003          		jr	nz,BLDNZ2	;size >= 100h
  5EC7  B9            		cp	c
  5EC8  3003          		jr	nc,BLDNC	;size <= 100h-4
  5ECA                	BLDNZ2:
  5ECA  0600          		ld	b,00h
  5ECC  4F            		ld	c,a
  5ECD                	BLDNC:
  5ECD  C5            		push	bc		;ldir size
  5ECE  EDB0          		ldir
  5ED0  C1            		pop	bc		;ldir size
  5ED1  E1            		pop	hl		;size
  5ED2  B7            		or	a
  5ED3  ED42          		sbc	hl,bc		;size -= ldir size
  5ED5  F1            		pop	af		;FAT value
  5ED6  FEC1          		cp	0c1h
  5ED8  285B          		jr	z,BLDEND5
  5EDA  F1            		pop	af		;start address
  5EDB  C1            		pop	bc		;b=track, c=sector
  5EDC  F5            		push	af		;start address
  5EDD  0C            		inc	c
  5EDE  C5            		push	bc		;b=track, c=sector
                      	
  5EDF  0607          		ld	b,07h		;max sectors
  5EE1                	BLDLP:
  5EE1  24            		inc	h
  5EE2  25            		dec	h
  5EE3  2838          		jr	z,BLDEND1	;size < 100h
                      	
  5EE5  D6C0          		sub	0c0h
  5EE7  3809          		jr	c,BLDC1
  5EE9  80            		add	a,b
  5EEA  D608          		sub	08h
  5EEC  BC            		cp	h
  5EED  3808          		jr	c,BLDC2
  5EEF  7C            		ld	a,h
  5EF0  1805          		jr	BLDC2
  5EF2                	BLDC1:
  5EF2  7C            		ld	a,h
  5EF3  B8            		cp	b
  5EF4  3801          		jr	c,BLDC2
  5EF6  78            		ld	a,b
  5EF7                	BLDC2:
  5EF7  C1            		pop	bc		;b=track, c=sector
                      	
  5EF8  EB            		ex	de,hl
  5EF9  D5            		push	de
  5EFA  CDA85C        		call	RDBFMAIN
  5EFD  D1            		pop	de
  5EFE  EB            		ex	de,hl
                      	
  5EFF  C5            		push	bc		;b=track, c=sector
  5F00  47            		ld	b,a		;sectors
  5F01  82            		add	a,d
  5F02  57            		ld	d,a		;address += sectors*100h
                      	
  5F03  7C            		ld	a,h
  5F04  90            		sub	b
  5F05  67            		ld	h,a		;size -= sectors*100h
  5F06  B5            		or	l
  5F07  78            		ld	a,b		;sectors
  5F08  C1            		pop	bc		;b=track, c=sector
  5F09  2820          		jr	z,BLDEND2	;size=0
                      	
  5F0B  81            		add	a,c
  5F0C  3D            		dec	a
  5F0D  4F            		ld	c,a		;last accessed sector
  5F0E  CD4B53        		call	NEXTSECT
  5F11  3818          		jr	c,BLDEND2
  5F13  C5            		push	bc		;b=track, c=sector
  5F14  E5            		push	hl		;size
  5F15  CD1A54        		call	GETFAT2
  5F18  E1            		pop	hl		;size
  5F19  0608          		ld	b,08h		;max sectors
  5F1B  18C4          		jr	BLDLP
                      	
  5F1D                	BLDEND1:
  5F1D  C1            		pop	bc		;b=track, c=sector
  5F1E  7C            		ld	a,h
  5F1F  B5            		or	l
  5F20  2809          		jr	z,BLDEND2	;size=0
  5F22  E5            		push	hl		;size
  5F23  D5            		push	de		;address
  5F24  CD935C        		call	READBUF0	;hl=(BUF0)
  5F27  D1            		pop	de		;address
  5F28  C1            		pop	bc		;size
  5F29  EDB0          		ldir
  5F2B                	BLDEND2:
  5F2B  E1            		pop	hl		;start address
  5F2C                	BLDEND3:
  5F2C  DD7E03        		ld	a,(ix+03h)	;R option?
  5F2F  B7            		or	a
  5F30  C8            		ret	z
  5F31  E9            		jp	(hl)
                      	
  5F32                	BLDEND4:
  5F32  F1            		pop	af		;FAT value
  5F33  18F6          		jr	BLDEND2
                      	
  5F35                	BLDEND5:
  5F35  E1            		pop	hl		;start address
  5F36  C1            		pop	bc		;b=track, c=sector
  5F37  18F3          		jr	BLDEND3
                      	
                      	
                      	;save/bsave common subroutine
                      	;set file name in directory, write directory, get track and sector
                      	;input: a=drive-1(0-3), h=attribute
                      	;output: a=cluster, b=track, c=sector, (FATP)
                      	;destroy: f,de,hl
  5F39                	SVCOMMON:
  5F39  E5            		push	hl
  5F3A  CD9C58        		call	SETDIR
  5F3D  E1            		pop	hl
  5F3E  EB            		ex	de,hl
  5F3F  72            		ld	(hl),d		;attribute
  5F40  23            		inc	hl
  5F41  77            		ld	(hl),a		;cluster
  5F42  F5            		push	af		;cluster
  5F43  CD885C        		call	WRTDIR
  5F46  F1            		pop	af		;cluster
                      	
  5F47  2A33FB        		ld	hl,(FATP)
  5F4A  0600          		ld	b,00h
  5F4C  4F            		ld	c,a
  5F4D  0C            		inc	c
  5F4E  0C            		inc	c
  5F4F  0C            		inc	c
  5F50  09            		add	hl,bc
  5F51  36C0          		ld	(hl),0c0h	;(FATP)+3+cluster
                      	
  5F53  F5            		push	af
  5F54  CDF953        		call	SETSUM
  5F57  CD6C56        		call	WRTFAT
  5F5A  F1            		pop	af
                      	
  5F5B  C3D65C        		jp	C2TRSECT
                      	
                      	
                      	;read string and set file name in (ix+5)...(ix+13) and set R option in (ix+3)
                      	;input: a=R option?, hl=program address
                      	;output: a=drive-1(0-3), hl=next address, ix=disk work
                      	;destroy: f,bc,de
  5F5E                	SETFNAME:
  5F5E  CDDF5C        		call	SETIX
  5F61  DD7703        		ld	(ix+03h),a	;R option?
  5F64  CD8A26        		call	STRARG
  5F67  B7            		or	a
  5F68  CA5342        		jp	z,NMERR
  5F6B  E5            		push	hl
                      	
                      	;get drive number
  5F6C  0600          		ld	b,00h		;default drive
  5F6E  4F            		ld	c,a		;length
  5F6F  FE03          		cp	02h+1
  5F71  381A          		jr	c,SETFC
  5F73  13            		inc	de
  5F74  1A            		ld	a,(de)
  5F75  1B            		dec	de
  5F76  FE3A          		cp	':'
  5F78  2013          		jr	nz,SETFC
  5F7A  1A            		ld	a,(de)
  5F7B  D631          		sub	'1'
  5F7D  FE08          		cp	08h
  5F7F  D25C42        		jp	nc,DNERR	;1-8=ok
  5F82  47            		ld	b,a		;drive(0-3)
  5F83  0D            		dec	c
  5F84  0D            		dec	c
  5F85  13            		inc	de
  5F86  13            		inc	de
  5F87  1A            		ld	a,(de)
  5F88  FE2E          		cp	'.'
  5F8A  CA5342        		jp	z,NMERR
                      	
  5F8D                	SETFC:
  5F8D  3A3BFB        		ld	a,(DRIVES)
  5F90  3D            		dec	a
  5F91  FA4442        		jp	m,AOERR
  5F94  B8            		cp	b
  5F95  DA5C42        		jp	c,DNERR
  5F98  C5            		push	bc		;b=drive(0-3)
  5F99  2AFCFF        		ld	hl,(FATPTBL)
  5F9C  2ED7          		ld	l,0d7h		;ix+5
                      	
                      	;before dot
  5F9E  0C            		inc	c
  5F9F  0606          		ld	b,06h
  5FA1                	SETFLP1:
  5FA1  0D            		dec	c
  5FA2  2817          		jr	z,SETFLP2
  5FA4  1A            		ld	a,(de)
  5FA5  13            		inc	de
  5FA6  FE2E          		cp	'.'
  5FA8  2810          		jr	z,SETFZ1
  5FAA  77            		ld	(hl),a
  5FAB  23            		inc	hl
  5FAC  10F3          		djnz	SETFLP1
                      	
  5FAE  0D            		dec	c
  5FAF  280F          		jr	z,SETFZ2
  5FB1  1A            		ld	a,(de)
  5FB2  FE2E          		cp	'.'
  5FB4  200A          		jr	nz,SETFZ2
  5FB6  13            		inc	de
  5FB7  0D            		dec	c
  5FB8  1806          		jr	SETFZ2
                      	
  5FBA                	SETFZ1:
  5FBA  0D            		dec	c
  5FBB                	SETFLP2:
  5FBB  3620          		ld	(hl),' '
  5FBD  23            		inc	hl
  5FBE  10FB          		djnz	SETFLP2
                      	
                      	;after dot
  5FC0                	SETFZ2:
  5FC0  0C            		inc	c
  5FC1  0603          		ld	b,03h
  5FC3                	SETFLP3:
  5FC3  0D            		dec	c
  5FC4  280E          		jr	z,SETFLP4
  5FC6  1A            		ld	a,(de)
  5FC7  13            		inc	de
  5FC8  FE2E          		cp	'.'
  5FCA  CA5342        		jp	z,NMERR
  5FCD  77            		ld	(hl),a
  5FCE  23            		inc	hl
  5FCF  10F2          		djnz	SETFLP3
  5FD1  F1            		pop	af		;a=drive-1(0-3)
  5FD2  E1            		pop	hl
  5FD3  C9            		ret
                      	
  5FD4                	SETFLP4:
  5FD4  3620          		ld	(hl),' '
  5FD6  23            		inc	hl
  5FD7  10FB          		djnz	SETFLP4
  5FD9  F1            		pop	af		;a=drive-1(0-3)
  5FDA  E1            		pop	hl
  5FDB  C9            		ret
                      	
                      	
                      	;60EX ROM end
  5FDC                	_6000H:	ds	6000h-_6000H
                      	
                      	
  6000                	_CALLINI:ds	CALLINI-_CALLINI
  601C                		org	CALLINI
                      	
  601C  CDB942        		call	INIDSK
                      	
                      	;for patching by iP6/iP6win/iP6Plus/PC6001VW
  601F  00            		nop
  6020  00            		nop
                      	;
                      	
  6021  C9            		ret
                      	
                      	
                      	;read RAM data
                      	;input: hl
                      	;output: a
                      	;destroy: none
                      	;fe8dh
  6022                	READRAM_SRC:
  6022  CD6B01        		call	CHGRAM
  6025  7E            		ld	a,(hl)
  6026  1805          		jr	CHGBANK_SRC
                      	
                      	
                      	;LDIR in RAM
                      	;input: bc,de,hl
                      	;output: bc=0, de=de+bc, hl=hl+bc
                      	;destroy: f (no changes in szc-flag)
                      	;fe93h
  6028                	LDIRRAM_SRC:
  6028  CD6B01        		call	CHGRAM
  602B  EDB0          		ldir
                      	;	jp	CHGBANK
                      	
                      	
                      	;change bank
                      	;destroy: none
                      	;fe98h: used by HURRY FOX
  602D                	CHGBANK_SRC:
  602D  F5            		push	af
  602E  3A64FE        		ld	a,(PORTF0H)
  6031  D3F0          		out	(0f0h),a
  6033  F1            		pop	af
  6034  FB            		ei
  6035  C9            		ret
                      	
                      	
                      	;fea1h
  6036                	OUTF0H_SRC:
  6036  D3F0          		out	(0f0h),a
  6038  F1            		pop	af
  6039  C9            		ret
                      	
                      	
                      	;LDDR in RAM
                      	;input: bc,de,hl
                      	;output: bc=0, de=de-bc, hl=hl-bc
                      	;destroy: f (no changes in szc-flag)
                      	;fea5h
  603A                	LDDRRAM_SRC:
  603A  CD6B01        		call	CHGRAM
  603D  EDB8          		lddr
  603F  18EC          		jr	CHGBANK_SRC
  6041                	RAMEND:
                      	
                      	
  6041                	BOOTERR:
  6041  3EC9          		ld	a,0c9h		;ret
  6043  328DFF        		ld	(HOOKERR),a
                      	;	ld	sp,0e700h-2*2
  6046  F1            		pop	af		;cancel stack for "call HOOKERR"
  6047  F1            		pop	af		;cancel stack for "call DISK2"
  6048  1853          		jr	SKIPFD
                      	
                      	;print menu and select mode
                      	;output: z(1=mode 5), a=mode-1(if z=0)
  604A                	SELMOD:
  604A  3A4EFF        		ld	a,(PROGAD)
  604D  FE05          		cp	05h
  604F  DADC60        		jp	c,SELECTED
                      	
                      	;FD auto start
  6052  CDB942        		call	INIDSK
  6055  323BFB        		ld	(DRIVES),a
  6058  2843          		jr	z,SKIPFD
                      	
  605A  3E02          		ld	a,02h
  605C  3265FE        		ld	(MODE),a
  605F  328CFD        		ld	(PAGES),a
                      	
  6062  3EC3          		ld	a,0c3h		;jp
  6064  328DFF        		ld	(HOOKERR),a
  6067  214160        		ld	hl,BOOTERR	;temporary for boot
  606A  228EFF        		ld	(HOOKERR+1),hl
                      	
  606D  DD2100C4      		ld	ix,0c400h
  6071  010100        		ld	bc,0001h	;track=0, sector=1
  6074  DD7000        		ld	(ix+00h),b	;drive-1=0
  6077  DD701B        		ld	(ix+1bh),b	;error count=0
  607A  2100F9        		ld	hl,0f900h	;load address
  607D  79            		ld	a,c		;1 sector
  607E                	BOOTSECT:
  607E  B7            		or	a		;reset z- and c-flag for reading
  607F  CDFD5C        		call	DISK2
  6082  3A00F9        		ld	a,(0f900h)
  6085  115953        		ld	de,"SY"
  6088  BA            		cp	d		;'S'
  6089  2012          		jr	nz,SKIPFD
  608B  2A01F9        		ld	hl,(0f901h)
  608E  E7            		rst	CPHLDE
  608F  CC03F9        		call	z,0f903h
                      	
  6092  3E06          		ld	a,06h
  6094  D3C1          		out	(0c1h),a	;32x16 text mode
                      	
  6096  3A4EFF        		ld	a,(PROGAD)
  6099  FE05          		cp	05h
  609B  383F          		jr	c,SELECTED
                      	
                      	;select mode
  609D                	SKIPFD:
  609D  AF            		xor	a
  609E  3265FE        		ld	(MODE),a
                      	
  60A1  CDFB1D        		call	CLS
  60A4  211001        		ld	hl,0110h
  60A7  CD6D11        		call	SETCSR
  60AA  3E20          		ld	a,' '
  60AC  061F          		ld	b,1fh
  60AE                	SLMDLP1:
  60AE  CD7510        		call	PRTC
  60B1  10FB          		djnz	SLMDLP1
                      	
  60B3  213262        		ld	hl,MENU
  60B6  0609          		ld	b,09h
  60B8                	SLMDLP2:
  60B8  E5            		push	hl
  60B9  2602          		ld	h,02h
  60BB  3E0D          		ld	a,0dh
  60BD  90            		sub	b
  60BE  6F            		ld	l,a
  60BF  CD6D11        		call	SETCSR
  60C2  E1            		pop	hl
  60C3  E5            		push	hl
  60C4  C5            		push	bc
  60C5  CDCF30        		call	PUTS
  60C8  C1            		pop	bc
  60C9  E1            		pop	hl
                      	
  60CA                	SLMDLP3:
  60CA  7E            		ld	a,(hl)
  60CB  23            		inc	hl
  60CC  B7            		or	a
  60CD  20FB          		jr	nz,SLMDLP3
  60CF  10E7          		djnz	SLMDLP2
                      	
  60D1                	SLMDLP4:
  60D1  CD3A10        		call	GETKBF
  60D4  28FB          		jr	z,SLMDLP4
  60D6  D631          		sub	'1'
  60D8  FE05          		cp	05h
  60DA  30F5          		jr	nc,SLMDLP4
                      	
  60DC                	SELECTED:
  60DC  FE04          		cp	04h
  60DE  F5            		push	af		;a=mode-1, z=mode 5?
  60DF  2001          		jr	nz,SETMOD
  60E1  3D            		dec	a		;mode 5->4 for "How Many..."
  60E2                	SETMOD:
  60E2  3265FE        		ld	(MODE),a
                      	
  60E5  E601          		and	01h
  60E7  3E04          		ld	a,04h
  60E9  210080        		ld	hl,8000h
  60EC  2003          		jr	nz,RAM32K
  60EE  26C0          		ld	h,0c0h
  60F0  1F            		rra			;c-flag=0
  60F1                	RAM32K:
  60F1  328CFD        		ld	(PAGES),a
  60F4  47            		ld	b,a		;;
                      	
  60F5  7C            		ld	a,h
  60F6  3291FD        		ld	(VRAM),a
  60F9  CBD4          		set	2,h		;h=h+04h
  60FB  2229FF        		ld	(BASICAD),hl	;l=0
  60FE  2C            		inc	l		;inc hl
  60FF  225FFA        		ld	(STARTAD),hl
                      	
  6102                	SLMDLP5:
  6102  78            		ld	a,b		;;
  6103  3D            		dec	a
  6104  CD0C14        		call	CHGACT
  6107  CDFB1D        		call	CLS
  610A  10F6          		djnz	SLMDLP5
                      	
  610C  AF            		xor	a
  610D  CDED13        		call	CHGDSP
                      	
  6110  F1            		pop	af		;a=mode-1, z=mode 5?
  6111  C8            		ret	z		;mode5: (PORTF0H)=11h
                      	
  6112  F5            		push	af
  6113  FE02          		cp	02h
  6115  9F            		sbc	a,a
  6116  E6D0          		and	0d0h
  6118  C6A1          		add	a,0a1h		;71h or a1h
  611A  3264FE        		ld	(PORTF0H),a
  611D  F1            		pop	af
  611E  C9            		ret
                      	
                      	
                      	;continued from CHGDSP for mode 5
  611F                	CHGDSP66:
  611F  F5            		push	af
                      	
  6120  3A8FFD        		ld	a,(SCREEN2)
  6123  47            		ld	b,a
  6124  3A90FD        		ld	a,(SCREEN3)
  6127  B8            		cp	b
  6128  2003          		jr	nz,CHGDSP66NZ
  612A  2191FD        		ld	hl,VRAM
  612D                	CHGDSP66NZ:
  612D  23            		inc	hl
  612E  7E            		ld	a,(hl)		;(SCREEN1)
  612F  FE02          		cp	02h
  6131  3E00          		ld	a,00h
  6133  3804          		jr	c,CHGDSP12
  6135  2004          		jr	nz,CHGDSP4
  6137                	CHGDSP3:
  6137  C604          		add	a,04h
  6139                	CHGDSP12:
  6139  C604          		add	a,04h
  613B                	CHGDSP4:
  613B  D3C1          		out	(0c1h),a
                      	
  613D  3A95FD        		ld	a,(COLOR3)
  6140  D3C0          		out	(0c0h),a
                      	
  6142  F1            		pop	af
  6143  0F            		rrca
  6144  C9            		ret
                      	
                      	
                      	;continued from CHGMOD for mode 5
  6145                	CHGMOD66:
  6145  3A8FFD        		ld	a,(SCREEN2)
  6148  47            		ld	b,a
  6149  3A90FD        		ld	a,(SCREEN3)
  614C  B8            		cp	b
  614D  CCED13        		call	z,CHGDSP
                      	
  6150  3A92FD        		ld	a,(SCREEN1)
  6153  3D            		dec	a
  6154  2003          		jr	nz,CHGMOD66NZ
                      	;screen mode 2
  6156  F680          		or	80h
  6158  77            		ld	(hl),a
                      	
  6159                	CHGMOD66NZ:
  6159  3D            		dec	a
  615A  3E28          		ld	a,CLMN66
  615C  2002          		jr	nz,CHGMOD66OK
  615E  3E14          		ld	a,CLMN66/2
  6160                	CHGMOD66OK:
  6160  32ACFD        		ld	(WIDTH),a
  6163  011F03        		ld	bc,CLMN66*ROWS66-1
  6166  C9            		ret
                      	
                      	
  6167                	REGDATA:
  6167  FFAACCBBEEDD34		dw	0aaffh, 0bbcch, 0ddeeh, 1234h
                      	
  616F                	MODE5:
  616F  AF            		xor	a
  6170  3291FD        		ld	(VRAM),a
  6173  3C            		inc	a
  6174  3294FD        		ld	(COLOR2),a
  6177  3297FD        		ld	(M1COLOR+1),a
  617A  329AFD        		ld	(M2COLOR+1),a
  617D  329DFD        		ld	(M3COLOR+1),a
  6180  32A0FD        		ld	(M4COLOR+1),a
  6183  3C            		inc	a
  6184  3295FD        		ld	(COLOR3),a
  6187  3298FD        		ld	(M1COLOR+2),a
  618A  329BFD        		ld	(M2COLOR+2),a
  618D  329EFD        		ld	(M3COLOR+2),a
  6190  32A1FD        		ld	(M4COLOR+2),a
  6193  3E10          		ld	a,10h
  6195  3293FD        		ld	(COLOR1),a
  6198  3296FD        		ld	(M1COLOR),a
  619B  3299FD        		ld	(M2COLOR),a
  619E  329CFD        		ld	(M3COLOR),a
                      	
  61A1  3E28          		ld	a,CLMN66
  61A3  32ACFD        		ld	(WIDTH),a
  61A6  3E14          		ld	a,ROWS66
  61A8  3220FA        		ld	(HEIGHT),a
  61AB  32A3FD        		ld	(CONSOL2),a
  61AE  3D            		dec	a
  61AF  32A5FD        		ld	(LASTLIN),a
  61B2  3E06          		ld	a,06h
  61B4  32C7FE        		ld	(FKEYLEN),a
  61B7  3E04          		ld	a,04h
  61B9  3265FE        		ld	(MODE),a
  61BC  329FFD        		ld	(M4COLOR),a
                      	
                      	;	ld	a,04h
  61BF  2191FD        		ld	hl,VRAM
  61C2  11B9FD        		ld	de,PAGE1
  61C5                	MODE5LP1:
  61C5  012800        		ld	bc,PAGE1-VRAM
  61C8  EDB0          		ldir
  61CA  3D            		dec	a
  61CB  20F8          		jr	nz,MODE5LP1
                      	
  61CD  6F            		ld	l,a		;=0
  61CE  3A8CFD        		ld	a,(PAGES)
                      	
  61D1  2680          		ld	h,80h
  61D3  FE03          		cp	03h
  61D5  3806          		jr	c,SETAD
  61D7  2688          		ld	h,88h
  61D9  2802          		jr	z,SETAD
  61DB  26C8          		ld	h,0c8h
  61DD                	SETAD:
  61DD  2229FF        		ld	(BASICAD),hl
  61E0  2C            		inc	l
  61E1  225FFA        		ld	(STARTAD),hl
                      	
  61E4  21FFF9        		ld	hl,0f9ffh
  61E7  228DFD        		ld	(USREND),hl
                      	
  61EA  214A6B        		ld	hl,C_COL66
  61ED  2295FA        		ld	(0fa95h),hl	;COLOR command
  61F0  21C970        		ld	hl,C_LIN66
  61F3  229BFA        		ld	(0fa9bh),hl	;LINE command
  61F6  212571        		ld	hl,C_PAI66
  61F9  229DFA        		ld	(0fa9dh),hl	;PAINT command
  61FC  211C63        		ld	hl,F_PEEK66
  61FF  2203FB        		ld	(0fb03h),hl	;PEEK() function
                      	
  6202  F5            		push	af		;a=(PAGES)
  6203  57            		ld	d,a
  6204  1E00          		ld	e,00h
  6206                	MODE5LP2:
  6206  7A            		ld	a,d
  6207  3D            		dec	a
  6208  CD3314        		call	GETPGAD
                      	
  620B  73            		ld	(hl),e
  620C  7B            		ld	a,e
  620D  3291FD        		ld	(VRAM),a
  6210  C640          		add	a,40h
  6212  5F            		ld	e,a
  6213  15            		dec	d
  6214  20F0          		jr	nz,MODE5LP2
  6216  C1            		pop	bc		;b=(PAGES)
                      	
  6217                	MODE5LP3:
  6217  78            		ld	a,b
  6218  3D            		dec	a
  6219  CD0C14        		call	CHGACT
  621C  CDFB1D        		call	CLS
  621F  10F6          		djnz	MODE5LP3
                      	
  6221  3E04          		ld	a,04h		;40x20 text mode
  6223  D3C1          		out	(0c1h),a	;bit3: 0=320x200, 1=160x200
                      					;bit2: 0=graphic, 1=text
                      					;bit1: 0=40x20,   1=32x16
                      	;	ld	a,04h		;relay off,timer on, VRAM=0000h
                      	;	out	(0b0h),a	;bit3=CMT relay: 0=off, 1=on
                      					;bit21=VRAM address:
                      					; 00=c000h(60)/8000h(60m)
                      					; 01=e000h(60)/c000h(60m)
                      					; 10=8000h(60)/0000h(60m)*
                      					; 11=a000h(60)/4000h(60m)
                      					;bit0=timer: 0=on, 1=off
                      	
  6225  0F            		rrca			;2
  6226  D3C0          		out	(0c0h),a	;CSS2=1
                      	
  6228  AF            		xor	a
  6229  CDED13        		call	CHGDSP
                      	
  622C  CDD734        		call	NEWRESSTK
                      	
  622F  C34440        		jp	SETTBL
                      	
                      	
  6232                	MENU:
  6232  2A2A2050432D36		db	"** PC-6001Mk2/6601 ",9ah,0deh,96h,0fdh,"BASIC **",00h
  6252  0A00          		db	0ah,00h
  6254  313A3630204241		db	"1:60 BASIC          (RAM-16K)",00h
  6272  323A3630204241		db	"2:60 BASIC          (RAM-32K)",00h
  6290  333A3630204558		db	"3:60 EXTENDED BASIC (RAM-16K)",00h
  62AE  343A3630204558		db	"4:60 EXTENDED BASIC (RAM-32K)",00h
  62CC  353A3636204241		db	"5:66 BASIC          (RAM-64K)",00h
  62EA  0A00          		db	0ah,00h
  62EC  20202020202053		db	"      SELECT BASIC MODE",00h
                      	
                      	
  6304                	SYSNAME66:
  6304  36369ADE96FD42		db	"66", 9ah, 0deh, 96h, 0fdh, "BASIC Ver.0.4.1", 0dh, 0ah, 00h
                      	
                      	
                      	;PEEK() function
  631C                	F_PEEK66:
  631C  CD680B        		call	CHKNUM
  631F  CDBD0C        		call	FTOI
  6322  EB            		ex	de,hl
  6323  CD8DFE        		call	READRAM
  6326  C3650C        		jp	I1TOFA
                      	
                      	
                      	;continued from F_SCRN
  6329                	F_SCRN66:
  6329  CD8DFE        		call	READRAM
  632C  CD650C        		call	I1TOFA
  632F  C3AD18        		jp	FNCRTN
                      	
                      	
                      	;input: bc=X, de=Y
                      	;output: a=color
                      	;destroy: f,bc,de,hl
  6332                	POINT66:
  6332  3A92FD        		ld	a,(SCREEN1)
  6335  3D            		dec	a
  6336  282E          		jr	z,POINT662
  6338  F24963        		jp	p,POINT66G
                      	
                      	;screen mode 1
  633B                	POINT661:
  633B  CD2E66        		call	GXY2AD66
  633E  CD8DFE        		call	READRAM
  6341  0F            		rrca
  6342  0F            		rrca
  6343  0F            		rrca
  6344  0F            		rrca
  6345  E607          		and	07h
  6347  3C            		inc	a
  6348  C9            		ret
                      	
                      	
                      	;graphic mode (screen mode 3,4)
  6349                	POINT66G:
  6349  F5            		push	af		;
  634A  CD1566        		call	GXY2GAD66
  634D  CD8DFE        		call	READRAM
  6350  A2            		and	d
  6351  07            		rlca
  6352  C1            		pop	bc		;
                      	;	dec	b
                      	;	jr	nz,POINT664
  6353  1001          		djnz	POINT664
  6355  07            		rlca
  6356                	POINT664:
  6356  5F            		ld	e,a
  6357  CBAC          		res	5,h
  6359  CD8DFE        		call	READRAM
  635C  A2            		and	d
  635D  B3            		or	e
  635E  07            		rlca
  635F                	POINT66LP:
  635F  0F            		rrca
  6360  CB0A          		rrc	d
  6362  30FB          		jr	nc,POINT66LP
  6364  3C            		inc	a
  6365  C9            		ret
                      	
                      	;screen mode 2
  6366                	POINT662:
  6366  C5            		push	bc		;x
  6367  CD2E66        		call	GXY2AD66
  636A  C1            		pop	bc		;x
  636B  CDE26B        		call	MASK266
  636E  57            		ld	d,a
  636F  CD8DFE        		call	READRAM
  6372  47            		ld	b,a
  6373  07            		rlca			;
  6374  24            		inc	h
  6375  24            		inc	h
  6376  24            		inc	h
  6377  24            		inc	h
  6378  CD8DFE        		call	READRAM
  637B  3001          		jr	nc,POINT662C	;
  637D  A2            		and	d		;;
  637E                	POINT662C:
  637E  78            		ld	a,b
  637F  2006          		jr	nz,POINT662NZ	;;
  6381  E670          		and	70h
  6383  0F            		rrca
  6384  0F            		rrca
  6385  0F            		rrca
  6386  0F            		rrca
  6387                	POINT662NZ:
  6387  E60F          		and	0fh
  6389  3C            		inc	a
  638A  C9            		ret
                      	
                      	
                      	;scroll up
                      	;input: h=first line+1, l=last line+1
                      	;destroy: af
  638B                	_SCRLU66:ds	SCRLU66-_SCRLU66
  63E2                		org	SCRLU66
                      	
  63E2  7D            		ld	a,l
  63E3  94            		sub	h		;a=(LASTLIN)-(CONSOL1) < 16
                      	;	ret	z
                      	;	ret	c
                      	
                      	;z=0:scroll up, z=1:scroll down
  63E4                	SCRLUD66:
  63E4  D5            		push	de
  63E5  E5            		push	hl
  63E6  C5            		push	bc
  63E7  F5            		push	af		;up/down
                      	
                      	
                      	;line connection status
  63E8  47            		ld	b,a
  63E9  04            		inc	b
  63EA  50            		ld	d,b		;>0
  63EB                	SCRLUD66LP:
  63EB  CD7615        		call	CHKLINE4
  63EE  4F            		ld	c,a
  63EF  7A            		ld	a,d
  63F0  E5            		push	hl
  63F1  CD8215        		call	SETLINE
  63F4  E1            		pop	hl
  63F5  51            		ld	d,c
  63F6  2D            		dec	l
  63F7  F1            		pop	af		;up/down
  63F8  F5            		push	af
  63F9  2002          		jr	nz,SCRLUD66NZ
  63FB  2C            		inc	l
  63FC  2C            		inc	l
  63FD                	SCRLUD66NZ:
  63FD  10EC          		djnz	SCRLUD66LP
                      	
  63FF  6C            		ld	l,h
  6400  3A92FD        		ld	a,(SCREEN1)
  6403  FE02          		cp	02h
  6405  D1            		pop	de		;d=a
  6406  D5            		push	de
  6407  7A            		ld	a,d
  6408  302A          		jr	nc,SCRLG66	;screen mode 3 4
                      	
  640A  CD8964        		call	MUL40
  640D  CDB811        		call	Y2AD
  6410  212800        		ld	hl,CLMN66
  6413  19            		add	hl,de
  6414  F1            		pop	af		;up/down
  6415  2003          		jr	nz,SCRL2NZ
  6417  EB            		ex	de,hl
  6418  1B            		dec	de
  6419  2B            		dec	hl
                      	
  641A                	SCRL2NZ:
  641A  E5            		push	hl
  641B  D5            		push	de
  641C  C5            		push	bc
  641D  CD8364        		call	LDIDRRAM
  6420  C1            		pop	bc
  6421  D1            		pop	de
  6422  E1            		pop	hl
                      	
                      	;attribute
  6423  CB94          		res	2,h
  6425  CB92          		res	2,d
  6427  C36664        		jp	SCRLATT66
                      	
                      	
                      	;scroll down
                      	;input: h=last line+1, l=first line+1
                      	;destroy: af
  642A                	_SCRLD66:ds	SCRLD66-_SCRLD66
  642F                		org	SCRLD66
                      	
  642F  7C            		ld	a,h
  6430  95            		sub	l
                      	;	ret	z
                      	;	ret	c
  6431  BF            		cp	a		;set z-flag
  6432  18B0          		jr	SCRLUD66
                      	
                      	
                      	;for graphic mode (screen mode 3,4) for mode 5
  6434                	SCRLG66:
                      	;bc=a*40*10=a*(256+128+16)
                      	
  6434  67            		ld	h,a
  6435  48            		ld	c,b		;b=0
  6436  47            		ld	b,a
  6437  1F            		rra			;c-flag=0
  6438  CB19          		rr	c
  643A  80            		add	a,b
  643B  47            		ld	b,a
                      	
  643C  7C            		ld	a,h
  643D  87            		add	a,a
  643E  87            		add	a,a
  643F  87            		add	a,a
  6440  87            		add	a,a
  6441  3001          		jr	nc,SCRLG66NC1
  6443  04            		inc	b
  6444                	SCRLG66NC1:
  6444  81            		add	a,c
  6445  4F            		ld	c,a
  6446  3001          		jr	nc,SCRLG66NC2
  6448  04            		inc	b
  6449                	SCRLG66NC2:
                      	
  6449  2601          		ld	h,1
  644B  CDD565        		call	XY2GAD66
  644E  EB            		ex	de,hl
  644F  219001        		ld	hl,CLMN66*10
  6452  19            		add	hl,de
  6453  F1            		pop	af		;up/down
  6454  2003          		jr	nz,SCRLG66NZ
  6456  EB            		ex	de,hl
  6457  1B            		dec	de
  6458  2B            		dec	hl
                      	
  6459                	SCRLG66NZ:
  6459  E5            		push	hl
  645A  D5            		push	de
  645B  C5            		push	bc
  645C  CD8364        		call	LDIDRRAM
  645F  C1            		pop	bc
  6460  D1            		pop	de
  6461  E1            		pop	hl
  6462  CBAC          		res	5,h
  6464  CBAA          		res	5,d
                      	
  6466                	SCRLATT66:
  6466  CD8364        		call	LDIDRRAM
  6469  C32512        		jp	SCRLATT2
                      	
                      	
                      	;continued from DELLIN
  646C                	DELLIN66:
  646C  3009          		jr	nc,DEL6634
  646E  E5            		push	hl
  646F  CB94          		res	2,h
                      	;	ld	bc,CLMN66
  6471  010128        		ld	bc,2801h
  6474  C3F111        		jp	DELLATT
                      	
  6477                	DEL6634:
  6477  CDCC65        		call	AD2GAD2
  647A  E5            		push	hl
  647B  CBAC          		res	5,h
                      	;	ld	bc,CLMN66*10
  647D  010290        		ld	bc,9002h
  6480  C3F111        		jp	DELLATT
                      	
                      	
                      	;ldir or lddr in RAM
                      	;input: bc,de,hl,z(0=ldir,1=lddr)
                      	;output: bc=0, de, hl
                      	;destroy: f
  6483                	LDIDRRAM:
  6483  C293FE        		jp	nz,LDIRRAM
  6486  C3A5FE        		jp	LDDRRAM
                      	
                      	
                      	;bc=a*40
                      	;input: a(<=20)
                      	;output: bc
                      	;destory: af,h
  6489                	MUL40:
  6489  47            		ld	b,a
  648A  87            		add	a,a		;*2
  648B  87            		add	a,a		;*4
  648C  80            		add	a,b		;*5
  648D  87            		add	a,a		;*10
  648E  45            		ld	b,l		;;
  648F  2600          		ld	h,00h
  6491  6F            		ld	l,a
  6492  29            		add	hl,hl		;*20
  6493  29            		add	hl,hl		;*40
  6494  4D            		ld	c,l
  6495  68            		ld	l,b		;;
  6496  44            		ld	b,h
  6497  C9            		ret
                      	
                      	
                      	;continued from PRTFKEY for mode 5
  6498                	PFK66:
  6498  CD4B66        		call	CHRREV66
                      	
  649B  3A5AFA        		ld	a,(KEYFLG)
  649E  CB57          		bit	2,a
  64A0  280E          		jr	z,PFK_ALP
  64A2  E602          		and	02h
  64A4  2005          		jr	nz,PFK_KATA
  64A6  11CD64        		ld	de,MODE_HIRAGANA
  64A9  1810          		jr	PFK66END
                      	
                      	;katakana
  64AB                	PFK_KATA:
  64AB  11D064        		ld	de,MODE_KATAKANA
  64AE  180B          		jr	PFK66END
                      	
                      	;alphabet
  64B0                	PFK_ALP:
  64B0  0F            		rrca
  64B1  3805          		jr	c,PFK_CAPS
  64B3  11C764        		ld	de,MODE_LOWER
  64B6  1803          		jr	PFK66END
                      	
                      	;upper case
  64B8                	PFK_CAPS:
  64B8  11CA64        		ld	de,MODE_UPPER
                      	
  64BB                	PFK66END:
  64BB  0603          		ld	b,03h
  64BD                	PFK66LP:
  64BD  1A            		ld	a,(de)
  64BE  CDCA14        		call	PRT12
  64C1  13            		inc	de
  64C2  10F9          		djnz	PFK66LP
  64C4  C34B66        		jp	CHRREV66
                      	
  64C7                	MODE_LOWER:
  64C7  616263        		db	"abc"
  64CA                	MODE_UPPER:
  64CA  414243        		db	"ABC"
  64CD                	MODE_HIRAGANA:
  64CD  96E520        		db	96h, 0e5h, ' '
  64D0                	MODE_KATAKANA:
  64D0  B6C520        		db	0b6h, 0c5h, ' '
                      	
                      	
                      	;continued from GETSP for mode 5
  64D3                	GETSP66:
  64D3  3D            		dec	a
  64D4  C8            		ret	z
  64D5  3D            		dec	a
  64D6  3E20          		ld	a,' '
  64D8  F8            		ret	m
  64D9  3A94FD        		ld	a,(COLOR2)
  64DC  2807          		jr	z,GETSP663
                      	
                      	;screen mode 4
  64DE                	GETSP664:
  64DE  B7            		or	a
  64DF  C8            		ret	z
  64E0  3D            		dec	a		;1,2,3,4,...->0,1,2,3,...
  64E1  0F            		rrca
  64E2  0F            		rrca
  64E3  9F            		sbc	a,a		;0,1,2,3,...->00,00,ff,ff,00,ff,...
  64E4  C9            		ret
                      	
                      	;screen mode 3
  64E5                	GETSP663:
  64E5  B7            		or	a
  64E6  C8            		ret	z
  64E7  3D            		dec	a
  64E8  E60C          		and	0ch
  64EA                	GETSP663BIT:
  64EA  C5            		push	bc
  64EB  4F            		ld	c,a
  64EC  0603          		ld	b,03h
  64EE                	GETSP663LP:
  64EE  0F            		rrca
  64EF  0F            		rrca
  64F0  B1            		or	c
  64F1  10FB          		djnz	GETSP663LP
  64F3  C1            		pop	bc
  64F4  C9            		ret
                      	
                      	
                      	;continued from GETSPA for mode 5
  64F5                	GETSPA66:
  64F5  CB3F          		srl	a
  64F7  2007          		jr	nz,GETSPA6634
  64F9  3A93FD        		ld	a,(COLOR1)
  64FC  303D          		jr	nc,GETSPA661
  64FE  1842          		jr	GETSPA662
                      	
  6500                	GETSPA6634:
  6500  3A94FD        		ld	a,(COLOR2)
  6503  381D          		jr	c,GETSPA664
  6505  182A          		jr	GETSPA663
                      	
                      	
                      	;continued from SETATT
  6507                	SETATT66:
  6507  F1            		pop	af
  6508  CD0F65        		call	CNVATT66
  650B  32ACFE        		ld	(ATTDAT),a
  650E  C9            		ret
                      	
                      	;convert to attribute data (screen mode 1,2)
                      	; or bit pattern (screen mode 3,4)
                      	;input: a=color code
                      	;output: a=attribute
                      	;destroy: f
  650F                	CNVATT66:
  650F  F5            		push	af
  6510  3A92FD        		ld	a,(SCREEN1)
  6513  CB3F          		srl	a
  6515  2821          		jr	z,ATT6612	;screen mode 1 or 2
  6517  300F          		jr	nc,ATT663	;screen mode 3
                      	
                      	;screen mode 4
  6519                	ATT664:
  6519  F1            		pop	af
  651A  F5            		push	af
  651B  CDDE64        		call	GETSP664
  651E  3260FE        		ld	(ATTDAT2),a
  6521  F1            		pop	af
  6522                	GETSPA664:
  6522  B7            		or	a
  6523  C8            		ret	z
  6524  3D            		dec	a
  6525  0F            		rrca
  6526  9F            		sbc	a,a		;0,1,2,3,...->00,ff,00,ff,00,ff,...
  6527  C9            		ret
                      	
                      	;screen mode 3
  6528                	ATT663:
  6528  F1            		pop	af
  6529  F5            		push	af
  652A  CDE564        		call	GETSP663
  652D  3260FE        		ld	(ATTDAT2),a
  6530  F1            		pop	af
  6531                	GETSPA663:
  6531  B7            		or	a
  6532  C8            		ret	z
  6533  3D            		dec	a
  6534  E603          		and	03h
  6536  18B2          		jr	GETSP663BIT
                      	
                      	;screen mode 1 or 2
  6538                	ATT6612:
  6538  3807          		jr	c,ATT662
                      	
                      	;screen mode 1
  653A                	ATT661:
  653A  F1            		pop	af
  653B                	GETSPA661:
  653B  CD4865        		call	ATTTXT66
  653E  E67F          		and	7fh		;bit7: semi-graphic flag
  6540  C9            		ret
                      	
                      	;screen mode 2
  6541                	ATT662:
  6541  F1            		pop	af
  6542                	GETSPA662:
  6542  CD4865        		call	ATTTXT66
  6545  F680          		or	80h		;bit7: semi-graphic flag
  6547  C9            		ret
                      	
                      	
                      	;get text attribute for mode5
                      	;input: a=color code
                      	;output: a[6:0]=attribute
                      	;destroy: f
  6548                	ATTTXT66:
  6548  E5            		push	hl
  6549  D601          		sub	01h		;if a<>0 then a=a-1
  654B  CE00          		adc	a,00h
  654D  E60F          		and	0fh
  654F  67            		ld	h,a
  6550  3A94FD        		ld	a,(COLOR2)
  6553  3D            		dec	a		;range is not checked, for compatibility with N60m/N66-BASIC
  6554  07            		rlca
  6555  07            		rlca
  6556  07            		rlca
  6557  07            		rlca
  6558  B4            		or	h		;bit6-4: background, bit3-0:foreground
  6559  E1            		pop	hl
  655A  C9            		ret
                      	
                      	
                      	;convert character VRAM address to graphic VRAM address for mode 5
                      	;(screen mode 1,2 -> screen mode 3,4)
                      	;input: hl=character VRAM address
                      	;output: hl=graphic VRAM address
                      	;destroy: none
  655B                	_AD2GAD2:ds	AD2GAD2-_AD2GAD2
  65CC                		org	AD2GAD2
                      	
  65CC  F5            		push	af
  65CD  CD4911        		call	AD2XY
  65D0  F1            		pop	af
  65D1  CDD565        		call	XY2GAD66
  65D4  C9            		ret
                      	
                      	
                      	;get VRAM address (screen mode 3,4) for mode 5
                      	;input: h=x+1, l=y+1
                      	;output: hl=graphic VRAM address =(VRAM+4000h)+y*400+x
                      	;destroy: none
  65D5                	XY2GAD66:
  65D5  F5            		push	af
  65D6  D5            		push	de
  65D7  C5            		push	bc
                      	
  65D8  25            		dec	h
  65D9  2D            		dec	l
  65DA  3A92FD        		ld	a,(SCREEN1)
  65DD  FE02          		cp	02h
  65DF  7C            		ld	a,h
  65E0  2001          		jr	nz,XY2GAD66C
  65E2  87            		add	a,a		;screen mode 3
  65E3                	XY2GAD66C:
  65E3  2600          		ld	h,00
  65E5  29            		add	hl,hl		;*2
  65E6  29            		add	hl,hl		;*4
  65E7  29            		add	hl,hl		;*8
  65E8  29            		add	hl,hl		;*16
  65E9  54            		ld	d,h
  65EA  5D            		ld	e,l
  65EB  29            		add	hl,hl		;*32
  65EC  29            		add	hl,hl		;*64
  65ED  29            		add	hl,hl		;*128
  65EE  44            		ld	b,h
  65EF  4D            		ld	c,l
  65F0  29            		add	hl,hl		;*256
  65F1  09            		add	hl,bc
  65F2  19            		add	hl,de
                      	
  65F3  85            		add	a,l		;c-flag
  65F4  6F            		ld	l,a
                      	
  65F5  3A91FD        		ld	a,(VRAM)
  65F8  CE20          		adc	a,20h		;c-flag
  65FA  84            		add	a,h
  65FB  67            		ld	h,a
                      	
  65FC  C1            		pop	bc
  65FD  D1            		pop	de
  65FE  F1            		pop	af
  65FF  C9            		ret
                      	
                      	
  6600                	Y2AD66:
  6600  7D            		ld	a,l	;(Y+1)
  6601  87            		add	a,a	;(Y+1)*2
  6602  87            		add	a,a	;(Y+1)*4
  6603  85            		add	a,l	;(Y+1)*5
  6604  D605          		sub	05h	;Y*5
  6606  87            		add	a,a	;Y*10
                      	
  6607  EB            		ex	de,hl	;
                      	
  6608  2601          		ld	h,01h
  660A  6F            		ld	l,a
  660B  29            		add	hl,hl	;Y*20+0200h
  660C  29            		add	hl,hl	;Y*40+0400h
  660D  3A91FD        		ld	a,(VRAM)
  6610  84            		add	a,h
  6611  67            		ld	h,a
                      	
  6612  EB            		ex	de,hl	;
                      	
  6613  F1            		pop	af
  6614  C9            		ret
                      	
                      	
                      	;get VRAM dot pattern address (screen mode 3,4) for mode 5
                      	;input: bc=graphic X, de=graphic Y
                      	;output: hl=VRAM address, d=bit
                      	;destroy: af,bc,e
                      	;hl=(VRAM+2000h)+(X/8)+Y*40
  6615                	GXY2GAD66:
  6615  CD196C        		call	CHKGXY66
  6618                	GXY2GAD662:
  6618  62            		ld	h,d
  6619  6B            		ld	l,e
  661A  29            		add	hl,hl		;*2
  661B  29            		add	hl,hl		;*4
  661C  19            		add	hl,de		;*5
  661D  29            		add	hl,hl		;*10
  661E  29            		add	hl,hl		;*20
  661F  29            		add	hl,hl		;*40
                      	
  6620  3A91FD        		ld	a,(VRAM)
  6623  F620          		or	20h
  6625  CB38          		srl	b
  6627  47            		ld	b,a
  6628  79            		ld	a,c
  6629  CB19          		rr	c
                      	
  662B  C35714        		jp	GXY2GADEND
                      	
                      	
                      	;get VRAM attirbute address (screen mode 1,2) for mode 5
                      	;hl=(VRAM)+X/8+Y/10*40
                      	;input: bc=graphic X, de=graphic Y
                      	;output: hl=VRAM address, d=Y mod 10
                      	;destroy: af,bc,e
  662E                	GXY2AD66:
  662E  CD196C        		call	CHKGXY66
  6631  CD7F6C        		call	DIV10
  6634  62            		ld	h,d
  6635  6B            		ld	l,e
  6636  29            		add	hl,hl		;*2
  6637  29            		add	hl,hl		;*4
  6638  19            		add	hl,de		;*5
  6639  29            		add	hl,hl		;*10
  663A  29            		add	hl,hl		;*20
  663B  29            		add	hl,hl		;*40
  663C  57            		ld	d,a
  663D  CB38          		srl	b
  663F  CB19          		rr	c
  6641  CB39          		srl	c
  6643  CB39          		srl	c
  6645  3A91FD        		ld	a,(VRAM)
  6648  47            		ld	b,a
  6649  09            		add	hl,bc
  664A  C9            		ret
                      	
                      	
  664B                	CHRREV66:
  664B  E5            		push	hl
  664C  2A93FD        		ld	hl,(COLOR1)	;l=(COLOR1), h=(COLOR2)
  664F  7C            		ld	a,h
  6650  65            		ld	h,l
  6651  6F            		ld	l,a
  6652  2293FD        		ld	(COLOR1),hl
  6655  E1            		pop	hl
  6656  C9            		ret
                      	
                      	
                      	;continued from CSRREV
  6657                	CSRREV66:
  6657  CB94          		res	2,h
  6659  CD8DFE        		call	READRAM
  665C  2F            		cpl
  665D  EE80          		xor	80h
  665F  77            		ld	(hl),a
  6660  C9            		ret
                      	
                      	
  6661                	GETSCRC66:
  6661  E5            		push	hl
  6662  CD410E        		call	CHR2ATT
  6665  CD8DFE        		call	READRAM
  6668  E1            		pop	hl
  6669  07            		rlca
  666A  D28DFE        		jp	nc,READRAM
  666D  3E20          		ld	a,' '
  666F  C9            		ret
                      	
                      	
  6670                	PRT34XY66:
                      	;	push	de
                      	;	push	bc
                      	;
                      	;	call	CGROM
                      	;	ld	a,(COLOR1)
                      	;	call	SETATT
                      	
  6670  CDD565        		call	XY2GAD66	;no change in c-flag
                      	
  6673  060A          		ld	b,0ah
  6675                	PRT34XY66LP:
  6675  D5            		push	de
  6676  CD2915        		call	READCGROM
                      	
  6679  3A92FD        		ld	a,(SCREEN1)
  667C  0F            		rrca
  667D  3005          		jr	nc,CALL366
                      	
  667F  CDA566        		call	PRT466
  6682  1804          		jr	CALL3466END
  6684                	CALL366:
  6684  CD9366        		call	PRT366
  6687  2B            		dec	hl
                      	
  6688                	CALL3466END:
  6688  112800        		ld	de,CLMN66
  668B  19            		add	hl,de
  668C  D1            		pop	de
  668D  1C            		inc	e		;inc de
  668E  10E5          		djnz	PRT34XY66LP
                      	
  6690  C1            		pop	bc
  6691  D1            		pop	de
  6692  C9            		ret
                      	
                      	
  6693                	PRT366:
  6693  CD9866        		call	PRT3HALF66
  6696  23            		inc	hl
  6697  51            		ld	d,c
                      	
  6698                	PRT3HALF66:
  6698  1E04          		ld	e,04h
  669A                	PRT366LP:
  669A  CB02          		rlc	d
  669C  17            		rla
  669D  0F            		rrca
  669E  07            		rlca
  669F  17            		rla
  66A0  1D            		dec	e
  66A1  20F7          		jr	nz,PRT366LP
  66A3  4A            		ld	c,d
  66A4  57            		ld	d,a
                      	
                      	
                      	;input: hl=address, d=bit
                      	;destroy: af,e
  66A5                	PRT466:
  66A5  CD8DFE        		call	READRAM
  66A8  5F            		ld	e,a
  66A9  3A60FE        		ld	a,(ATTDAT2)
  66AC  AB            		xor	e
  66AD  A2            		and	d
  66AE  AB            		xor	e
  66AF  77            		ld	(hl),a
                      	
  66B0  CBAC          		res	5,h
  66B2  CD8DFE        		call	READRAM
  66B5  5F            		ld	e,a
  66B6  3AACFE        		ld	a,(ATTDAT)
  66B9  AB            		xor	e
  66BA  A2            		and	d
  66BB  AB            		xor	e
  66BC  77            		ld	(hl),a
  66BD  CBEC          		set	5,h
                      	
  66BF  C9            		ret
                      	
                      	
                      	;set border attribute used by HURRY FOX
                      	;input: a=color code
                      	;destroy: af,bc
  66C0                	_SETBO66:ds	SETBO66-_SETBO66
  69F3                		org	SETBO66
                      	
  69F3  47            		ld	b,a
                      	
  69F4  3AACFE        		ld	a,(ATTDAT)
  69F7  F5            		push	af
  69F8  3A60FE        		ld	a,(ATTDAT2)
  69FB  F5            		push	af
                      	
  69FC  78            		ld	a,b
  69FD  CDC015        		call	SETATT
  6A00  3AACFE        		ld	a,(ATTDAT)
  6A03  32C5FE        		ld	(BORDERA),a
  6A06  3A60FE        		ld	a,(ATTDAT2)
  6A09  3261FE        		ld	(BORDERA2),a
                      	
  6A0C  F1            		pop	af
  6A0D  3260FE        		ld	(ATTDAT2),a
  6A10  F1            		pop	af
  6A11  32ACFE        		ld	(ATTDAT),a
                      	
  6A14  C9            		ret
                      	
                      	
                      	
                      	;COLOR command
  6A15                	_C_COL66:
  6A15                		ds	C_COL66-_C_COL66
  6B4A                		org	C_COL66
                      	
  6B4A  1193FD        		ld	de,COLOR1
  6B4D  0602          		ld	b,02h
  6B4F                	COLR66LP:
  6B4F  CD723F        		call	CHKCMM
  6B52  2810          		jr	z,COLR66Z
  6B54  C5            		push	bc
  6B55  D5            		push	de
  6B56  CDE40D        		call	INT1ARG		;1st and 2nd parameter
  6B59  D1            		pop	de
  6B5A  C1            		pop	bc
  6B5B  12            		ld	(de),a
  6B5C  CD673F        		call	CHKCLN		;a=(hl)
  6B5F  C8            		ret	z
  6B60  FE2C          		cp	','
  6B62  C0            		ret	nz
  6B63  23            		inc	hl
  6B64                	COLR66Z:
  6B64  13            		inc	de
  6B65  10E8          		djnz	COLR66LP
                      	
  6B67  CDE40D        		call	INT1ARG		;3rd parameter
  6B6A  1D            		dec	e
                      	
  6B6B  3A92FD        		ld	a,(SCREEN1)
  6B6E  4F            		ld	c,a
  6B6F  3C            		inc	a
  6B70  E604          		and	04h
  6B72  3C            		inc	a		;a=1 if screen mode=1-3, a=5 if screen mode=4
  6B73  BB            		cp	e
  6B74  DACB03        		jp	c,FCERR
  6B77  7B            		ld	a,e
                      	;	jp	SETC366
                      	
                      	
                      	;set color 3rd parameter for mode 5
                      	;input: a=3rd color parameter-1, c=screen mode-1
                      	;destroy: af
  6B78                	_SETC366:ds	SETC366-_SETC366
  6B7A                		org	SETC366
                      	
  6B7A  CB49          		bit	1,c
  6B7C  2805          		jr	z,C366TXT
  6B7E  CB41          		bit	0,c
  6B80  2002          		jr	nz,C3664
                      	
                      	;screen mode 3: 0,1->2,6
  6B82  87            		add	a,a
                      	
                      	;screen mode 1,2: 0,1->2,0
  6B83                	C366TXT:
  6B83  87            		add	a,a
                      	
                      	;screen mode 4: 0,1,2,3,4,5->2,3,0,1,6,7
  6B84                	C3664:
  6B84  EE02          		xor	02h
                      	
  6B86  D3C0          		out	(0c0h),a
  6B88  3295FD        		ld	(COLOR3),a
  6B8B  C9            		ret
                      	
                      	
                      	;SCREEN command
  6B8C                	_C_SCR66:ds	C_SCR66-_C_SCR66
  6B9B                		org	C_SCR66
  6B9B  00            		nop
  6B9C  00            		nop
  6B9D  00            		nop
                      	
                      	;used by PROGRESS
                      	;input: hl=parameter string address
  6B9E                	_SCRN66:ds	SCRN66-_SCRN66
  6B9E                		org	SCRN66
                      	
  6B9E  C3041E        		jp	C_SCRN
                      	
                      	
                      	;continued from PSET
  6BA1                	PSET66:
  6BA1  3A92FD        		ld	a,(SCREEN1)
  6BA4  3D            		dec	a
  6BA5  2819          		jr	z,PSET662
  6BA7  F2F16B        		jp	p,PSET66G
                      	
                      	;screen mode 1
  6BAA                	PSET661:
  6BAA  CD2E66        		call	GXY2AD66
  6BAD  CD8DFE        		call	READRAM
  6BB0  E68F          		and	8fh
  6BB2  5F            		ld	e,a
  6BB3  3AACFE        		ld	a,(ATTDAT)
  6BB6  E607          		and	07h
  6BB8  07            		rlca
  6BB9  07            		rlca
  6BBA  07            		rlca
  6BBB  07            		rlca
  6BBC  B3            		or	e
  6BBD  77            		ld	(hl),a
  6BBE  E1            		pop	hl
  6BBF  C9            		ret
                      	
                      	
                      	;screen mode 2
  6BC0                	PSET662:
  6BC0  C5            		push	bc		;X
  6BC1  CD2E66        		call	GXY2AD66
                      	
  6BC4  CD8DFE        		call	READRAM
  6BC7  5F            		ld	e,a		;
                      	
  6BC8  3AACFE        		ld	a,(ATTDAT)
  6BCB  77            		ld	(hl),a
  6BCC  CBD4          		set	2,h
  6BCE  CB7B          		bit	7,e		;
  6BD0  2004          		jr	nz,PS662SEMI
  6BD2  CD1216        		call	GETSP
  6BD5  77            		ld	(hl),a
                      	
  6BD6                	PS662SEMI:
  6BD6  C1            		pop	bc		;X
  6BD7  CDE26B        		call	MASK266
  6BDA  47            		ld	b,a
                      	
  6BDB  CD8DFE        		call	READRAM
                      	;	and	0fh
  6BDE  B0            		or	b
  6BDF  77            		ld	(hl),a
  6BE0  E1            		pop	hl
  6BE1  C9            		ret
                      	
                      	
                      	;screen mode 2 dot bit mask
                      	;input: c=X, d=Y mod 10
                      	;output: a
                      	; bit3 bit2
                      	; bit1 bit0
                      	;destroy: f,bc
  6BE2                	MASK266:
  6BE2  79            		ld	a,c
  6BE3  2F            		cpl
  6BE4  E604          		and	04h
  6BE6  C604          		add	a,04h
  6BE8  47            		ld	b,a
  6BE9  7A            		ld	a,d
  6BEA  FE05          		cp	05h
  6BEC  78            		ld	a,b
  6BED  D8            		ret	c	;0<=d<=4
  6BEE  0F            		rrca
  6BEF  0F            		rrca
  6BF0  C9            		ret		;5<=d<=9
                      	
                      	
                      	;screen mode 3,4
  6BF1                	PSET66G:
  6BF1  CD1566        		call	GXY2GAD66
  6BF4  CDA566        		call	PRT466
  6BF7  E1            		pop	hl
  6BF8  C9            		ret
                      	
                      	
                      	;continued from LINE
  6BF9                	LINE66:
  6BF9  FE02          		cp	02h
  6BFB  2803          		jr	z,LINE663
  6BFD  3002          		jr	nc,SKIPY66
  6BFF  29            		add	hl,hl		;screen mode 1,2: dy=dy*4
  6C00                	LINE663:
  6C00  29            		add	hl,hl		;screen mode 3: dy=dy*2
                      	
  6C01                	SKIPY66:
  6C01  EB            		ex	de,hl
  6C02  ED4BB1FE      		ld	bc,(GRPX3)	;start (x)
  6C06  2AADFE        		ld	hl,(GRPX2)	;end (x)
  6C09  B7            		or	a
  6C0A  ED42          		sbc	hl,bc		;dx
  6C0C  FE02          		cp	02h
  6C0E  D28C2E        		jp	nc,SKIPX
  6C11  44            		ld	b,h
  6C12  4D            		ld	c,l
  6C13  29            		add	hl,hl
  6C14  29            		add	hl,hl
  6C15  09            		add	hl,bc		;screen mode 1,2: dx=dx*5
  6C16  C38C2E        		jp	SKIPX
                      	
                      	
                      	;check and round graphic coordinates (x,y) for mode 5
                      	;input: bc=x, de=y
                      	;output: bc=x, de=y
                      	;destroy: af,hl
  6C19                	CHKGXY66:
  6C19  78            		ld	a,b
  6C1A  B2            		or	d
  6C1B  FACB03        		jp	m,FCERR
  6C1E  213F01        		ld	hl,319
                      	;	or	a
  6C21  ED42          		sbc	hl,bc
  6C23  3003          		jr	nc,CHKXOK66
  6C25  013F01        		ld	bc,319
                      	
  6C28                	CHKXOK66:
  6C28  3A92FD        		ld	a,(SCREEN1)
  6C2B  0F            		rrca
  6C2C  2F            		cpl
  6C2D  21A6FD        		ld	hl,CONSOL3
  6C30  A6            		and	(hl)
  6C31  0F            		rrca
  6C32  21C700        		ld	hl,199
  6C35  3003          		jr	nc,NOFKEY66
  6C37  21BD00        		ld	hl,199-10
  6C3A                	NOFKEY66:
  6C3A  E7            		rst	CPHLDE
  6C3B  3001          		jr	nc,CHKYOK66
  6C3D  EB            		ex	de,hl
  6C3E                	CHKYOK66:
  6C3E  3A92FD        		ld	a,(SCREEN1)
  6C41  3D            		dec	a
  6C42  280D          		jr	z,ROUNDY662
  6C44  F2596C        		jp	p,ROUNDX66	;screen mode 3,4
                      	
                      	;round off y for screen mode 1
  6C47                	ROUNDY661:
  6C47  CD7F6C        		call	DIV10
  6C4A  7B            		ld	a,e
  6C4B  87            		add	a,a		;*2
  6C4C  87            		add	a,a		;*4
  6C4D  83            		add	a,e		;*5
  6C4E  87            		add	a,a		;*10
  6C4F  1807          		jr	ROUNDY662END
                      	
                      	;round off y for screen mode 2
  6C51                	ROUNDY662:
  6C51  CD7B6C        		call	DIV5
                      	
  6C54  7B            		ld	a,e
  6C55  87            		add	a,a		;*2
  6C56  87            		add	a,a		;*4
  6C57  83            		add	a,e		;*5
                      	
  6C58                	ROUNDY662END:
  6C58  5F            		ld	e,a
                      	
  6C59                	ROUNDX66:
  6C59  3A92FD        		ld	a,(SCREEN1)
  6C5C  57            		ld	d,a
  6C5D  14            		inc	d
  6C5E  3EF0          		ld	a,0f0h
  6C60                	ROUNDX66LP:
  6C60  37            		scf
  6C61  1F            		rra			;f8,fc,fe,ff
  6C62  15            		dec	d
  6C63  20FB          		jr	nz,ROUNDX66LP
                      	
  6C65  A1            		and	c
  6C66  4F            		ld	c,a
  6C67  C9            		ret			;d=0
                      	
                      	
                      	;continued from INCGY
  6C68                	INCGY66:
  6C68  3A92FD        		ld	a,(SCREEN1)
  6C6B  3D            		dec	a
  6C6C  3E05          		ld	a,05h		;BASIC mode 5, screen mode 2
  6C6E  CA632B        		jp	z,INCGYZ
  6C71  3E01          		ld	a,01h		;BASIC mode 5, screen mode 3,4
  6C73  F2632B        		jp	p,INCGYZ
  6C76  3E0A          		ld	a,0ah		;BASIC mode 5, screen mode 1
  6C78  C3632B        		jp	INCGYZ
                      	
                      	
                      	;e=e/10 (or e/5)
                      	;input: e
                      	;output: e=int(e/10), a=e mod 10
                      	;destroy: f,hl
  6C7B                	DIV5:
  6C7B  2606          		ld	h,6
  6C7D  1802          		jr	DIV10OR5
  6C7F                	DIV10:
  6C7F  2605          		ld	h,5
  6C81                	DIV10OR5:
  6C81  7B            		ld	a,e
  6C82  1E00          		ld	e,00h
  6C84  2EA0          		ld	l,10100000b
  6C86                	DIV10LP:
  6C86  BD            		cp	l
  6C87  3801          		jr	c,DIV10C
  6C89  95            		sub	l
  6C8A                	DIV10C:
  6C8A  3F            		ccf
  6C8B  CB13          		rl	e
  6C8D  CB3D          		srl	l
  6C8F  25            		dec	h
  6C90  20F4          		jr	nz,DIV10LP
  6C92  C9            		ret
                      	
                      	
  6C93                	BFG662:
  6C93  EB            		ex	de,hl
  6C94  2AADFE        		ld	hl,(GRPX2)	;larger x
  6C97  ED4BB1FE      		ld	bc,(GRPX3)	;smaller x
  6C9B  79            		ld	a,c
  6C9C  E6F8          		and	0f8h
  6C9E  4F            		ld	c,a
                      	;	or	a
  6C9F  ED42          		sbc	hl,bc
                      	
  6CA1  7D            		ld	a,l
  6CA2  CB3C          		srl	h
  6CA4  1F            		rra
  6CA5  CB3F          		srl	a
  6CA7  CB3F          		srl	a		;int(larger/8)-int(smaller/8)
                      	
  6CA9  EB            		ex	de,hl		;hl=VRAM address
  6CAA  D1            		pop	de		;d=left part mask, e=right part mask
  6CAB  C1            		pop	bc		;c=lines
                      	
  6CAC  47            		ld	b,a
                      	;	or	a
  6CAD  2003          		jr	nz,BFG66LP3
                      	
  6CAF  7A            		ld	a,d
  6CB0  A3            		and	e
  6CB1  57            		ld	d,a
                      	
  6CB2                	BFG66LP3:
                      	;left part
  6CB2  C5            		push	bc
  6CB3  D5            		push	de
  6CB4  4B            		ld	c,e		;;
  6CB5  CDA566        		call	PRT466
                      	
  6CB8  05            		dec	b		;
  6CB9  FAD46C        		jp	m,BFGNEXT66	;
                      	
                      	;middle part
  6CBC  E5            		push	hl		;VRAM address
  6CBD  280F          		jr	z,BFGRGT66	;
                      	
  6CBF                	BFG66LP4:
  6CBF  23            		inc	hl
  6CC0  3A60FE        		ld	a,(ATTDAT2)
  6CC3  77            		ld	(hl),a
  6CC4  3AACFE        		ld	a,(ATTDAT)
  6CC7  CBAC          		res	5,h
  6CC9  77            		ld	(hl),a
  6CCA  CBEC          		set	5,h
  6CCC  10F1          		djnz	BFG66LP4
                      	
                      	;right part
  6CCE                	BFGRGT66:
  6CCE  23            		inc	hl
  6CCF  51            		ld	d,c		;;
  6CD0  CDA566        		call	PRT466
  6CD3  E1            		pop	hl		;VRAM address
                      	
  6CD4                	BFGNEXT66:
  6CD4  012800        		ld	bc,0028h
  6CD7  09            		add	hl,bc
  6CD8  D1            		pop	de
  6CD9  C1            		pop	bc
  6CDA  0D            		dec	c
  6CDB  20D5          		jr	nz,BFG66LP3
  6CDD  C3CA2E        		jp	LINEEND2
                      	
                      	
                      	;LINE command for mode 5
  6CE0                	_C_LIN66:ds	C_LIN66-_C_LIN66
  70C9                		org	C_LIN66
                      	
  70C9  CD7F2D        		call	PRELINE
  70CC  D21F2E        		jp	nc,LINE
  70CF  2051          		jr	nz,LINEB66
  70D1  1814          		jr	LINBF66
                      	
                      	
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2,
                      	; (ATTDAT)=attribute, (ATTDAT2)=attribute2
                      	;destroy: af,bc,de
  70D3                	_LINBF66:ds	LINBF66-_LINBF66
  70E7                		org	LINBF66
                      	
  70E7  E5            		push	hl
  70E8  CDBE2B        		call	PUSHGXY
  70EB  CDAF2B        		call	SORTXY2
                      	
  70EE  3A92FD        		ld	a,(SCREEN1)
  70F1  FE02          		cp	02h
  70F3  DA5A2E        		jp	c,BF12
                      	
                      	;line bf (graphic mdoe)
  70F6                	BFG66:
  70F6  3AADFE        		ld	a,(GRPX2)	;larger x lower byte
  70F9  2001          		jr	nz,BF664
  70FB  3C            		inc	a		;screen mode 3
  70FC                	BF664:
  70FC  E607          		and	07h
  70FE  3C            		inc	a
  70FF  47            		ld	b,a
  7100  AF            		xor	a
  7101                	BFG66LP1:
  7101  37            		scf
  7102  1F            		rra			;right part mask
  7103  10FC          		djnz	BFG66LP1
                      	
                      	;	or	a
  7105  ED52          		sbc	hl,de
  7107  2C            		inc	l
  7108  E5            		push	hl		;l=lines
                      	
  7109  6F            		ld	l,a		;right part mask
                      	
  710A  79            		ld	a,c		;smaller x
  710B  E607          		and	07h
  710D  47            		ld	b,a
  710E  3EFF          		ld	a,0ffh
  7110  2804          		jr	z,BFG66Z
  7112                	BFG66LP2:
  7112  CB3F          		srl	a
  7114  10FC          		djnz	BFG66LP2
  7116                	BFG66Z:
  7116  67            		ld	h,a		;left part mask
  7117  ED4BB1FE      		ld	bc,(GRPX3)	;smaller x
                      	
  711B  E5            		push	hl
  711C  CD1566        		call	GXY2GAD66
                      	
  711F  C3936C        		jp	BFG662
                      	
                      	
                      	;input: bc=x1, de=y1, (GRPX2)=x2, (GRPY2)=y2,
                      	; (ATTDAT)=attribute1, (ATTDAT2)=attribute2
                      	;destroy: af,bc,de
  7122                	_LINEB66:ds	LINEB66-_LINEB66
  7122                		org	LINEB66
                      	
  7122  C3352E        		jp	LINEB
                      	
                      	
                      	;C_PAI66	equ	714ch
                      	;PAINT command for mode 5
                      	;_C_PAI66:ds	C_PAI66-_C_PAI66
                      	;	org	C_PAI66
  7125                	C_PAI66:
                      	
  7125  CDF72C        		call	GETGXY
  7128  C5            		push	bc		;X
  7129  D5            		push	de		;Y
  712A  3A93FD        		ld	a,(COLOR1)
  712D  CCE30D        		call	z,INT1INC
  7130  CDC015        		call	SETATT
  7133  7E            		ld	a,(hl)
  7134  FE2C          		cp	','
  7136  3AC6FE        		ld	a,(BORDERC)
  7139  CCE30D        		call	z,INT1INC
  713C  32C6FE        		ld	(BORDERC),a
  713F  5F            		ld	e,a
                      	
                      	
                      	;input: e=color, (sp)=y, (sp+2)=x
                      	;used by PERDU, MINTMARK
  7140                	_PA66POP:ds	PA66POP-_PA66POP
  7161                		org	PA66POP
                      	
  7161  7B            		ld	a,e
  7162  CDF369        		call	SETBO66
  7165  D1            		pop	de		;Y
  7166  C1            		pop	bc		;X
  7167  C36A71        		jp	PAINT66
                      	
                      	
                      	;input: bc=x, de=y, (ATTDAT)=attribute1, (ATTDAT2)=attribute2
                      	; (BORDERA)=attribute, (BORDERA2)=attribute2, (BORDERC)=color
                      	;destroy: af,bc,de
  716A                	_PAINT66:ds	PAINT66-_PAINT66
  716A                		org	PAINT66
                      	
  716A  E5            		push	hl
  716B  CD196C        		call	CHKGXY66
  716E  E1            		pop	hl
  716F  3A92FD        		ld	a,(SCREEN1)
  7172  3D            		dec	a
  7173  C8            		ret	z		;screen mode 2
  7174  ED43B1FE      		ld	(GRPX3),bc
  7178  ED53B3FE      		ld	(GRPY3),de
  717C  E5            		push	hl
  717D  FA8871        		jp	m,PAINT661	;screen mode 1
  7180  CD1566        		call	GXY2GAD66
  7183                	PAMAIN66:
  7183  CD8F71        		call	PADWN66
  7186  E1            		pop	hl
  7187  C9            		ret
                      	
  7188                	PAINT661:
  7188  CD2E66        		call	GXY2AD66
  718B  16FF          		ld	d,0ffh
  718D  18F4          		jr	PAMAIN66
                      	
                      	
  718F                	PADWN66:
  718F  CD8272        		call	PALINE66
  7192  C8            		ret	z
                      	
  7193  E5            		push	hl		;address
  7194  D5            		push	de		;bit
  7195  ED4BB5FE      		ld	bc,(PAWRK)
  7199  C5            		push	bc
  719A  ED4BB1FE      		ld	bc,(GRPX3)
  719E  C5            		push	bc
  719F  3AB3FE        		ld	a,(GRPY3)
  71A2  F5            		push	af
                      	
  71A3  CD2C72        		call	PAUP662
                      	
  71A6  F1            		pop	af
  71A7  32B3FE        		ld	(GRPY3),a
  71AA  E1            		pop	hl
  71AB  22B1FE        		ld	(GRPX3),hl
  71AE  E1            		pop	hl
  71AF  22B5FE        		ld	(PAWRK),hl
  71B2  D1            		pop	de		;bit
  71B3  E1            		pop	hl		;address
                      	
  71B4                	PADWN662:
  71B4  D5            		push	de
  71B5  CD686C        		call	INCGY66
  71B8  7B            		ld	a,e
  71B9  D1            		pop	de
  71BA  FEC8          		cp	200
  71BC  D0            		ret	nc
                      	
  71BD  012800        		ld	bc,CLMN66
  71C0  09            		add	hl,bc
  71C1  CDD072        		call	READVRAM
                      	
  71C4  AF            		xor	a
  71C5  32B7FE        		ld	(PACNT),a
                      	
  71C8                	PADWN66LP1:
  71C8  CD5573        		call	SRCHOK66
  71CB  381C          		jr	c,CALLDWN66
                      	
  71CD  ED4BB1FE      		ld	bc,(GRPX3)
  71D1  C5            		push	bc
  71D2  ED4BB3FE      		ld	bc,(GRPY3)
  71D6  C5            		push	bc
                      	
  71D7  E5            		push	hl
  71D8  D5            		push	de
  71D9  21B7FE        		ld	hl,PACNT
  71DC  34            		inc	(hl)
  71DD  CDE934        		call	CHKFRE
  71E0  D1            		pop	de
  71E1  E1            		pop	hl
                      	
  71E2  E5            		push	hl		;address
  71E3  D5            		push	de		;bit
                      	
  71E4  CD6473        		call	SRCHNG66
  71E7  30DF          		jr	nc,PADWN66LP1
                      	
  71E9                	CALLDWN66:
  71E9  3AB7FE        		ld	a,(PACNT)
  71EC  B7            		or	a
  71ED  C8            		ret	z
                      	
  71EE                	PADWN66LP2:
  71EE  D1            		pop	de		;bit
  71EF  E1            		pop	hl		;address
  71F0  C1            		pop	bc
  71F1  ED43B3FE      		ld	(GRPY3),bc
  71F5  C1            		pop	bc
  71F6  ED43B1FE      		ld	(GRPX3),bc
                      	
  71FA  3D            		dec	a
  71FB  32B7FE        		ld	(PACNT),a
  71FE  288F          		jr	z,PADWN66
  7200  F5            		push	af
  7201  CD8F71        		call	PADWN66
  7204  F1            		pop	af
  7205  18E7          		jr	PADWN66LP2
                      	
                      	
  7207                	PAUP66:
  7207  CD8272        		call	PALINE66
  720A  C8            		ret	z
                      	
  720B  E5            		push	hl		;address
  720C  D5            		push	de		;bit
  720D  ED4BB5FE      		ld	bc,(PAWRK)
  7211  C5            		push	bc
  7212  ED4BB1FE      		ld	bc,(GRPX3)
  7216  C5            		push	bc
  7217  3AB3FE        		ld	a,(GRPY3)
  721A  F5            		push	af
                      	
  721B  CDB471        		call	PADWN662
                      	
  721E  F1            		pop	af
  721F  32B3FE        		ld	(GRPY3),a
  7222  E1            		pop	hl
  7223  22B1FE        		ld	(GRPX3),hl
  7226  E1            		pop	hl
  7227  22B5FE        		ld	(PAWRK),hl
  722A  D1            		pop	de		;bit
  722B  E1            		pop	hl		;address
                      	
  722C                	PAUP662:
                      	;	ld	a,(GRPY3)
  722C  B7            		or	a
  722D  C8            		ret	z
                      	
  722E  CB6C          		bit	5,h
  7230  2002          		jr	nz,PAUP66NZ
  7232  D609          		sub	09h
  7234                	PAUP66NZ:
  7234  3D            		dec	a
  7235  32B3FE        		ld	(GRPY3),a
  7238  01D8FF        		ld	bc,0-CLMN66
  723B  09            		add	hl,bc
  723C  CDD072        		call	READVRAM
                      	
  723F  AF            		xor	a
  7240  32B7FE        		ld	(PACNT),a
                      	
  7243                	PAUP66LP1:
  7243  CD5573        		call	SRCHOK66
  7246  381C          		jr	c,CALLUP66
                      	
  7248  ED4BB1FE      		ld	bc,(GRPX3)
  724C  C5            		push	bc
  724D  ED4BB3FE      		ld	bc,(GRPY3)
  7251  C5            		push	bc
                      	
  7252  E5            		push	hl
  7253  D5            		push	de
  7254  21B7FE        		ld	hl,PACNT
  7257  34            		inc	(hl)
  7258  CDE934        		call	CHKFRE
  725B  D1            		pop	de
  725C  E1            		pop	hl
                      	
  725D  E5            		push	hl		;address
  725E  D5            		push	de		;bit
                      	
  725F  CD6473        		call	SRCHNG66
  7262  30DF          		jr	nc,PAUP66LP1
                      	
  7264                	CALLUP66:
  7264  3AB7FE        		ld	a,(PACNT)
  7267  B7            		or	a
  7268  C8            		ret	z
                      	
  7269                	PAUP66LP2:
  7269  D1            		pop	de		;bit
  726A  E1            		pop	hl		;address
  726B  C1            		pop	bc
  726C  ED43B3FE      		ld	(GRPY3),bc
  7270  C1            		pop	bc
  7271  ED43B1FE      		ld	(GRPX3),bc
                      	
  7275  3D            		dec	a
  7276  32B7FE        		ld	(PACNT),a
  7279  288C          		jr	z,PAUP66
  727B  F5            		push	af
  727C  CD0772        		call	PAUP66
  727F  F1            		pop	af
  7280  18E7          		jr	PAUP66LP2
                      	
                      	
  7282                	PALINE66:
  7282  CDD072        		call	READVRAM
                      	
  7285  CD4D27        		call	STOPESC
  7288  CD2173        		call	CHKPA66
  728B  C8            		ret	z
                      	
  728C  E5            		push	hl		;address
  728D  D5            		push	de		;bit
  728E  ED4BB1FE      		ld	bc,(GRPX3)
  7292  C5            		push	bc
                      	
  7293  CDF172        		call	PAINTR66
  7296  2AB1FE        		ld	hl,(GRPX3)
  7299  22B5FE        		ld	(PAWRK),hl	;X_right
                      	
  729C  E1            		pop	hl
  729D  22B1FE        		ld	(GRPX3),hl
  72A0  D1            		pop	de		;bit
  72A1  E1            		pop	hl		;address
                      	
  72A2  CDD072        		call	READVRAM
  72A5  CDAA72        		call	PAINTL66
                      	
  72A8  B2            		or	d		;d>0, reset z-flag
  72A9  C9            		ret
                      	
                      	
                      	;paint to left direction for mode 5
                      	;input: hl=address, d=bit
                      	;output: hl,d
                      	;destroy: af,bc
  72AA                	PAINTL66:
  72AA  ED4BB1FE      		ld	bc,(GRPX3)
  72AE  78            		ld	a,b
  72AF  B1            		or	c
  72B0  C8            		ret	z
  72B1  CDFB72        		call	DECGXPA66
  72B4  CD2173        		call	CHKPA66
  72B7  20F1          		jr	nz,PAINTL66
                      	;	jp	INCGXPA66
                      	
                      	
                      	;increment x for paint for mode 5
                      	;input: hl=address, d=bit
                      	;output: hl, d, bc=(GRPX3)
                      	;destroy: af,bc
  72B9                	INCGXPA66:
  72B9  ED4BB1FE      		ld	bc,(GRPX3)
  72BD  CB6C          		bit	5,h
  72BF  2823          		jr	z,INCGXPA661	;screen mode 1
  72C1  03            		inc	bc
  72C2  CB0A          		rrc	d
  72C4  E2CA72        		jp	po,INCGXPA664	;screen mode 4
  72C7  03            		inc	bc		;screen mode 3
  72C8  CB0A          		rrc	d
  72CA                	INCGXPA664:
  72CA  ED43B1FE      		ld	(GRPX3),bc
  72CE  D0            		ret	nc
                      	
  72CF  23            		inc	hl
                      	;	jr	READVRAM
                      	
                      	
                      	;read VRAM
                      	;input: hl=address
                      	;output: (PAWRK2),(PAWRK2+1)
                      	;destroy: af
  72D0                	READVRAM:
  72D0  CB6C          		bit	5,h
  72D2  C8            		ret	z
  72D3  CD8DFE        		call	READRAM
  72D6  32B8FE        		ld	(PAWRK2),a
  72D9  CBAC          		res	5,h
  72DB  CD8DFE        		call	READRAM
  72DE  CBEC          		set	5,h
  72E0  32B9FE        		ld	(PAWRK2+1),a
  72E3  C9            		ret
                      	
                      	
  72E4                	INCGXPA661:
  72E4  79            		ld	a,c
  72E5  C608          		add	a,08h
  72E7  4F            		ld	c,a
  72E8  3001          		jr	nc,INCGXPA661NC
  72EA  04            		inc	b
  72EB                	INCGXPA661NC:
  72EB  ED43B1FE      		ld	(GRPX3),bc
  72EF  23            		inc	hl
  72F0  C9            		ret
                      	
                      	
                      	;paint to right direction for mode 5
                      	;input: hl=address, d=bit
                      	;output: hl,d
                      	;destroy: af,bc
  72F1                	PAINTR66:
  72F1  CD7373        		call	GXLARGE66
  72F4  2805          		jr	z,DECGXPA66
  72F6  CD2173        		call	CHKPA66
  72F9  20F6          		jr	nz,PAINTR66
                      	;	jp	DECGXPA66
                      	
                      	
                      	;decrement x for paint for mode 5
                      	;input: hl=address, d=bit
                      	;output: hl, d, bc=(GRPX3)
                      	;destroy: af
  72FB                	DECGXPA66:
  72FB  ED4BB1FE      		ld	bc,(GRPX3)
  72FF  CB6C          		bit	5,h
  7301  2811          		jr	z,DECGXPA661	;screen mode 1
  7303  0B            		dec	bc
  7304  CB02          		rlc	d
  7306  E20C73        		jp	po,DECGXPA664	;screen mode 4
  7309  0D            		dec	c		;dec bc, screen mode3
  730A  CB02          		rlc	d
  730C                	DECGXPA664:
  730C  ED43B1FE      		ld	(GRPX3),bc
  7310  D0            		ret	nc
                      	
  7311  2B            		dec	hl
  7312  18BC          		jr	READVRAM
                      	
                      	
  7314                	DECGXPA661:
  7314  79            		ld	a,c
  7315  D608          		sub	08h
  7317  4F            		ld	c,a
  7318  3001          		jr	nc,DECGXPA661NC
  731A  05            		dec	b
  731B                	DECGXPA661NC:
  731B  ED43B1FE      		ld	(GRPX3),bc
  731F  2B            		dec	hl
  7320  C9            		ret
                      	
                      	
                      	;check and paint for mode 5
                      	;input: hl=address, d=bit
                      	;output: z(1=not painted)
                      	;destroy: af,e
  7321                	CHKPA66:
  7321  CDBE73        		call	CMPBOR66
  7324  C8            		ret	z
                      	
                      	;	ld	bc,(PAWRK2)
                      	
  7325  CB6C          		bit	5,h
  7327  281A          		jr	z,CHKPA661
                      	
  7329  3A60FE        		ld	a,(ATTDAT2)
  732C  A9            		xor	c
  732D  A2            		and	d
  732E  A9            		xor	c
  732F  32B8FE        		ld	(PAWRK2),a
  7332  77            		ld	(hl),a
                      	
  7333  3AACFE        		ld	a,(ATTDAT)
  7336  A8            		xor	b
  7337  A2            		and	d
  7338  A8            		xor	b
  7339  32B9FE        		ld	(PAWRK2+1),a
  733C  CBAC          		res	5,h
  733E  77            		ld	(hl),a
  733F  CBEC          		set	5,h
                      	
  7341  B2            		or	d		;d>0, reset z-flag
  7342  C9            		ret
                      	
                      	;screen mode 1
  7343                	CHKPA661:
  7343  CD8DFE        		call	READRAM
  7346  5F            		ld	e,a
  7347  3AACFE        		ld	a,(ATTDAT)
  734A  07            		rlca
  734B  07            		rlca
  734C  07            		rlca
  734D  07            		rlca
  734E  AB            		xor	e
  734F  E670          		and	70h
  7351  AB            		xor	e
  7352  77            		ld	(hl),a
  7353  B2            		or	d		;d>0, reset z-flag
  7354  C9            		ret
                      	
                      	
                      	;search for paintable area for mode 5
                      	;input: hl=address, d=bit
                      	;output: hl,d,c-flag(1=over,0=OK)
                      	;destroy: af,bc,e
  7355                	SRCHOK66:
  7355  CD7C73        		call	CMPPAX66
  7358  D8            		ret	c
  7359  CD8973        		call	CMPATT66
  735C  C0            		ret	nz
  735D  CD7373        		call	GXLARGE66
  7360  20F3          		jr	nz,SRCHOK66
  7362  37            		scf
  7363  C9            		ret
                      	
                      	
                      	;search for unpaintable area for mode 5
                      	;get unpaintable area
                      	;input: hl=address, d=bit
                      	;output: hl,d,c-flag(1=over,0=NG)
                      	;destroy: af,bc
  7364                	SRCHNG66:
  7364  CD7C73        		call	CMPPAX66
  7367  D8            		ret	c
  7368  CDBE73        		call	CMPBOR66
  736B  C8            		ret	z
  736C  CD7373        		call	GXLARGE66
  736F  20F3          		jr	nz,SRCHNG66
  7371  37            		scf
  7372  C9            		ret
                      	
                      	
                      	;increment x and compare graphic width (=320)
                      	;input: hl=address, d=bit
                      	;output: hl, d, bc=(GRPX3), z-flag(1=over)
                      	;destroy: af,bc
  7373                	GXLARGE66:
  7373  CDB972        		call	INCGXPA66
                      	;	ld	bc,(GRPX3)
  7376  05            		dec	b
  7377  C0            		ret	nz
  7378  79            		ld	a,c
  7379  FE40          		cp	320-256
  737B  C9            		ret
                      	
                      	
                      	;compare (GRPX3) to (PAWRK)
                      	;output: f
                      	;destroy: f,bc
  737C                	CMPPAX66:
  737C  E5            		push	hl
  737D  2AB5FE        		ld	hl,(PAWRK)
  7380  ED4BB1FE      		ld	bc,(GRPX3)
  7384  B7            		or	a
  7385  ED42          		sbc	hl,bc
  7387  E1            		pop	hl
  7388  C9            		ret
                      	
                      	
                      	;compare attribute and border color to VRAM
                      	;output: bc=(PAWRK2), z-flag(1=same), c-flag=0
  7389                	CMPATT66:
  7389  CB6C          		bit	5,h
  738B  2813          		jr	z,CMPATT661
  738D  ED4BB8FE      		ld	bc,(PAWRK2)
  7391  3A60FE        		ld	a,(ATTDAT2)
  7394  A9            		xor	c
  7395  A2            		and	d
  7396  202E          		jr	nz,CMPBOR662
  7398  3AACFE        		ld	a,(ATTDAT)
  739B  A8            		xor	b
  739C  A2            		and	d
  739D  C8            		ret	z
  739E  1826          		jr	CMPBOR662
                      	
                      	;screen mode 1
  73A0                	CMPATT661:
  73A0  CD8DFE        		call	READRAM
  73A3  5F            		ld	e,a
  73A4  3AACFE        		ld	a,(ATTDAT)
  73A7  07            		rlca
  73A8  07            		rlca
  73A9  07            		rlca
  73AA  07            		rlca
  73AB  AB            		xor	e
  73AC  E670          		and	70h
  73AE  C8            		ret	z
                      	
  73AF                	CMPBOR661:
  73AF  CD8DFE        		call	READRAM
  73B2  5F            		ld	e,a
  73B3  3AC5FE        		ld	a,(BORDERA)
  73B6  07            		rlca
  73B7  07            		rlca
  73B8  07            		rlca
  73B9  07            		rlca
  73BA  AB            		xor	e
  73BB  E670          		and	70h
  73BD  C9            		ret
                      	
                      	
                      	;compare border color to VRAM
                      	;output: bc=(PAWRK2), z-flag(1=same), c-flag=0
  73BE                	CMPBOR66:
  73BE  CB6C          		bit	5,h
  73C0  28ED          		jr	z,CMPBOR661
  73C2  ED4BB8FE      		ld	bc,(PAWRK2)
  73C6                	CMPBOR662:
  73C6  3A61FE        		ld	a,(BORDERA2)
  73C9  A9            		xor	c
  73CA  A2            		and	d
  73CB  C0            		ret	nz
                      	
  73CC  3AC5FE        		ld	a,(BORDERA)
  73CF  A8            		xor	b
  73D0  A2            		and	d
  73D1  C9            		ret
                      	
                      	
  73D2                	C_KANJ:
  73D2  3A92FD        		ld	a,(SCREEN1)
  73D5  FE02          		cp	02h
  73D7  DACB03        		jp	c,FCERR
                      	
  73DA  CDF72C        		call	GETGXY
  73DD  C0            		ret	nz
                      	
  73DE  ED43ADFE      		ld	(GRPX2),bc
  73E2  ED53AFFE      		ld	(GRPY2),de
                      	
  73E6  3A93FD        		ld	a,(COLOR1)
  73E9  CDC015        		call	SETATT
                      	
  73EC  CD5F3F        		call	SKIPSPINC
  73EF  224EFF        		ld	(PROGAD),hl
  73F2  FE2C          		cp	','
  73F4  280A          		jr	z,KANJLP1
                      	
  73F6  CDE40D        		call	INT1ARG
  73F9  CDC015        		call	SETATT
  73FC  7E            		ld	a,(hl)
  73FD  FE2C          		cp	','
  73FF  C0            		ret	nz
                      	
  7400                	KANJLP1:
  7400  CD5F3F        		call	SKIPSPINC
  7403  224EFF        		ld	(PROGAD),hl
  7406  FE2C          		cp	','
  7408  28F6          		jr	z,KANJLP1
                      	
  740A  CD673F        		call	CHKCLN
  740D  C8            		ret	z
                      	
  740E  CD6017        		call	ARG
  7411  3A25FF        		ld	a,(ARGTYP)
  7414  3D            		dec	a
  7415  284D          		jr	z,KANJSTR
  7417  F2C203        		jp	p,SNERR
                      	
  741A                	KANJNUM:
  741A  CDBD0C        		call	FTOI
                      	
                      	;check extkanji
  741D  210000        		ld	hl,0000h
  7420  CD7175        		call	READEKROM
  7423  7C            		ld	a,h
  7424  B5            		or	l
  7425  CAC074        		jp	z,KANJEXT
                      	
  7428  1B            		dec	de
  7429  EB            		ex	de,hl
  742A  010004        		ld	bc,0400h
  742D  B7            		or	a
  742E  ED42          		sbc	hl,bc
  7430  D2CB03        		jp	nc,FCERR
  7433  09            		add	hl,bc
                      	
  7434  29            		add	hl,hl		;*2
  7435  29            		add	hl,hl		;*4
  7436  29            		add	hl,hl		;*8
  7437  29            		add	hl,hl		;*16
                      	
  7438  0610          		ld	b,10h
  743A                	KANJLP2:
  743A  C5            		push	bc
  743B  E5            		push	hl		;kanji ROM address
  743C  CD5375        		call	READKROM
  743F  CD8775        		call	CALLPRTHL
  7442  E1            		pop	hl
  7443  23            		inc	hl		;kanji ROM address
  7444  C1            		pop	bc
  7445  10F3          		djnz	KANJLP2
                      	
  7447                	KLP2END:
  7447  2AADFE        		ld	hl,(GRPX2)
  744A  111000        		ld	de,0010h
  744D  19            		add	hl,de
  744E  3A92FD        		ld	a,(SCREEN1)
  7451  0F            		rrca
  7452  3801          		jr	c,KNUMC		;screen mode 4
  7454  19            		add	hl,de		;screen mode 3
  7455                	KNUMC:
  7455  22ADFE        		ld	(GRPX2),hl
                      	
  7458                	KNEXT:
  7458  2AB0FD        		ld	hl,(GRPY1)
  745B  22AFFE        		ld	(GRPY2),hl
                      	
  745E  2A4EFF        		ld	hl,(PROGAD)
  7461  2B            		dec	hl
  7462  189C          		jr	KANJLP1
                      	
                      	;string
  7464                	KANJSTR:
  7464  2AAFFE        		ld	hl,(GRPY2)
  7467  110600        		ld	de,0006h
  746A  19            		add	hl,de
  746B  22AFFE        		ld	(GRPY2),hl
                      	
  746E  2A67FF        		ld	hl,(FAC1+1)
  7471  4E            		ld	c,(hl)
                      	
  7472  23            		inc	hl
  7473  23            		inc	hl
  7474  46            		ld	b,(hl)
  7475  23            		inc	hl
  7476  66            		ld	h,(hl)
  7477  68            		ld	l,b
                      	
  7478                	KANJLP3:
  7478  79            		ld	a,c
  7479  B7            		or	a
  747A  28DC          		jr	z,KNEXT
                      	
  747C  7E            		ld	a,(hl)
  747D  FE14          		cp	14h
  747F  2007          		jr	nz,KSTRNZ
  7481  0D            		dec	c
  7482  28D4          		jr	z,KNEXT
  7484  23            		inc	hl
  7485  7E            		ld	a,(hl)
  7486  D630          		sub	30h
  7488                	KSTRNZ:
  7488  E5            		push	hl		;string address
  7489  CDA014        		call	CGROM
                      	
  748C  060A          		ld	b,0ah
  748E                	KANJLP4:
  748E  C5            		push	bc
  748F  D5            		push	de		;CGROM address
  7490  CD2915        		call	READCGROM
                      	
  7493  62            		ld	h,d
  7494  2E00          		ld	l,00h
  7496  CD8775        		call	CALLPRTHL
  7499  D1            		pop	de
  749A  13            		inc	de
  749B  C1            		pop	bc
  749C  10F0          		djnz	KANJLP4
                      	
  749E                	KLP4END:
  749E  2AADFE        		ld	hl,(GRPX2)
  74A1  110800        		ld	de,0008h
  74A4  19            		add	hl,de
  74A5  3A92FD        		ld	a,(SCREEN1)
  74A8  0F            		rrca
  74A9  3E08          		ld	a,08h
  74AB  3801          		jr	c,KSTRC		;screen mode 4
  74AD  19            		add	hl,de		;screen mode 3
  74AE                	KSTRC:
  74AE  22ADFE        		ld	(GRPX2),hl
  74B1  2AB0FD        		ld	hl,(GRPY1)
  74B4  110600        		ld	de,0006h
  74B7  19            		add	hl,de
  74B8  22AFFE        		ld	(GRPY2),hl
                      	
  74BB  E1            		pop	hl		;string address
  74BC  23            		inc	hl
  74BD  0D            		dec	c
  74BE  18B8          		jr	KANJLP3
                      	
                      	
                      	;extended kanji ROM
  74C0                	KANJEXT:
  74C0  EB            		ex	de,hl
                      	
  74C1  112000        		ld	de,0020h
  74C4  E7            		rst	CPHLDE
  74C5  DACB03        		jp	c,FCERR
                      	
  74C8  110001        		ld	de,00ffh+1
  74CB  E7            		rst	CPHLDE
  74CC  3866          		jr	c,KEXT816
                      	
  74CE  110002        		ld	de,01ffh+1
  74D1  E7            		rst	CPHLDE
  74D2  384E          		jr	c,KEXT88
                      	
  74D4  7D            		ld	a,l
  74D5  D621          		sub	21h
  74D7  FE5E          		cp	7eh-21h+1	;hl=xx21-xx7e: ok
  74D9  D2CB03        		jp	nc,FCERR	;hl=xx00-xx20, xx7f-xxff: error
                      	
  74DC  112121        		ld	de,2121h
  74DF  E7            		rst	CPHLDE
  74E0  DACB03        		jp	c,FCERR
  74E3  117F27        		ld	de,277eh+1
  74E6  E7            		rst	CPHLDE
  74E7  3815          		jr	c,KEXT1616
                      	
  74E9  112130        		ld	de,3021h
  74EC  E7            		rst	CPHLDE
  74ED  DACB03        		jp	c,FCERR
  74F0  117F4F        		ld	de,4f7eh+1
  74F3  E7            		rst	CPHLDE
  74F4  D2CB03        		jp	nc,FCERR
                      	
                      	
                      	;hl=3021h-4f7eh
                      	;16x16 character
                      	;JIS level-1 kanji set
                      	;JIS    =0xxaaaaa 0bbccccc
                      	;address=bbaaaaac cccc0000
  74F7  7D            		ld	a,l
  74F8  AC            		xor	h
  74F9  E660          		and	60h
  74FB  AC            		xor	h
  74FC  1808          		jr	KEXT16162
                      	
                      	
                      	;hl=2120h-277eh
                      	;16x16 character
                      	;JIS    =00100aaa 0bbccccc
                      	;address=00bbaaac cccc0000
  74FE                	KEXT1616:
  74FE  CBAC          		res	5,h
  7500  7D            		ld	a,l
  7501  E660          		and	60h
  7503  0F            		rrca
  7504  0F            		rrca
  7505  B4            		or	h
  7506                	KEXT16162:
  7506  67            		ld	h,a
                      	
  7507  7D            		ld	a,l
  7508  87            		add	a,a
  7509  87            		add	a,a
  750A  87            		add	a,a
  750B  87            		add	a,a
  750C  6F            		ld	l,a
                      	
  750D  7C            		ld	a,h
  750E  8F            		adc	a,a
  750F  67            		ld	h,a
                      	
  7510  0610          		ld	b,10h
  7512                	KANJLP5:
  7512  C5            		push	bc
  7513  E5            		push	hl		;kanji ROM address
  7514  CD7175        		call	READEKROM
  7517  CD8775        		call	CALLPRTHL
  751A  E1            		pop	hl
  751B  23            		inc	hl		;kanji ROM address
  751C  C1            		pop	bc
  751D  10F3          		djnz	KANJLP5
  751F  C34774        		jp	KLP2END
                      	
                      	
                      	;hl=100h-1ffh
                      	;8x8 character
  7522                	KEXT88:
  7522  7D            		ld	a,l
  7523  2AAFFE        		ld	hl,(GRPY2)
  7526  010800        		ld	bc,0008h
  7529  09            		add	hl,bc
  752A  22AFFE        		ld	(GRPY2),hl
  752D  6F            		ld	l,a
  752E  2602          		ld	h,02h
                      	
  7530  0604          		ld	b,04h
  7532  1803          		jr	KEXT8162
                      	
                      	;hl=20h-ffh
                      	;8x16 character
  7534                	KEXT816:
  7534  0608          		ld	b,08h
  7536  29            		add	hl,hl		;*2
  7537                	KEXT8162:
  7537  29            		add	hl,hl		;*4
  7538  29            		add	hl,hl		;*8
  7539                	KANJLP6:
  7539  C5            		push	bc
  753A  E5            		push	hl		;address
  753B  CD7175        		call	READEKROM
  753E  E5            		push	hl
  753F  2E00          		ld	l,00h
  7541  CD8775        		call	CALLPRTHL
  7544  E1            		pop	hl
  7545  65            		ld	h,l
  7546  2E00          		ld	l,00h
  7548  CD8775        		call	CALLPRTHL
  754B  E1            		pop	hl
  754C  23            		inc	hl		;kanji ROM address
  754D  C1            		pop	bc
  754E  10E9          		djnz	KANJLP6
  7550  C34774        		jp	KLP2END
                      	
                      	
                      	;read kanji ROM data
                      	;input: hl=address
                      	;output: h=left data, l=right data
                      	;destroy: none
  7553                	READKROM:
  7553  F5            		push	af
  7554  C5            		push	bc
  7555  3E03          		ld	a,03h
  7557  D3C3          		out	(0c3h),a	;port c2h direction: bit0,1=output
  7559  3E12          		ld	a,12h
  755B  F3            		di
  755C  D3F0          		out	(0f0h),a	;0000-3fff:voice/kanji ROM
  755E  3E01          		ld	a,01h
  7560  D3C2          		out	(0c2h),a	;kanji left
  7562  46            		ld	b,(hl)
  7563  3E03          		ld	a,03h
  7565  D3C2          		out	(0c2h),a	;kanji right
  7567  6E            		ld	l,(hl)
  7568  3E11          		ld	a,11h
  756A  D3F0          		out	(0f0h),a	;0000-7fff:BASIC ROM
  756C  FB            		ei
  756D  60            		ld	h,b
  756E  C1            		pop	bc
  756F  F1            		pop	af
  7570  C9            		ret
                      	
                      	
                      	;read extended kanji ROM data
                      	;input: hl=address
                      	;output: h=left data, l=right data
                      	;destroy: none
  7571                	READEKROM:
  7571  F5            		push	af
  7572  C5            		push	bc
  7573  45            		ld	b,l
  7574  0EFC          		ld	c,0fch
  7576  ED61          		out	(c),h
  7578  AF            		xor	a
  7579  D3FF          		out	(0ffh),a
  757B  0C            		inc	c
  757C  ED60          		in	h,(c)		;c=fdh
  757E  0C            		inc	c
  757F  ED68          		in	l,(c)		;c=feh
  7581  3D            		dec	a
  7582  D3FF          		out	(0ffh),a	;a=ffh
  7584  C1            		pop	bc
  7585  F1            		pop	af
  7586  C9            		ret
                      	
                      	
                      	;check Y, call PRTHL, increment Y
                      	;input: h,l=data, (GRPX2),(GRPY2),(ATTDAT),(ATTDAT2)
                      	;destroy: af,bc,de,hl
  7587                	CALLPRTHL:
  7587  E5            		push	hl
  7588  21C700        		ld	hl,199
  758B  ED5BAFFE      		ld	de,(GRPY2)
  758F  E7            		rst	CPHLDE
  7590  E1            		pop	hl
  7591  D8            		ret	c
  7592  ED4BADFE      		ld	bc,(GRPX2)
  7596  CD9F75        		call	PRTHL
  7599  13            		inc	de
  759A  ED53AFFE      		ld	(GRPY2),de
  759E  C9            		ret
                      	
                      	
                      	;put 2-byte data in graphic mode (screen mode 3,4)
                      	;input: bc=x, de=y,h,l=data, (ATTDAT),(ATTDAT2)
                      	;output: bc=bc+16or32
                      	;destroy: af,hl
  759F                	PRTHL:
  759F  ED43B1FE      		ld	(GRPX3),bc
  75A3  ED53B3FE      		ld	(GRPY3),de
                      	
  75A7  E5            		push	hl		;
                      	
                      	;check y range
  75A8  CB7A          		bit	7,d
  75AA  C2CB03        		jp	nz,FCERR
  75AD  21C700        		ld	hl,199
  75B0  E7            		rst	CPHLDE
  75B1  3001          		jr	nc,PRTHLYOK
  75B3  EB            		ex	de,hl
  75B4                	PRTHLYOK:
                      	
                      	;check x range
  75B4  CB78          		bit	7,b
  75B6  2806          		jr	z,PRTHLXOK
  75B8  0600          		ld	b,00h
  75BA  79            		ld	a,c
  75BB  E607          		and	07h
  75BD  4F            		ld	c,a
                      	
  75BE                	PRTHLXOK:
  75BE  CD1866        		call	GXY2GAD662
  75C1  44            		ld	b,h
  75C2  4D            		ld	c,l
  75C3  E1            		pop	hl		;
                      	
                      	;h-l -> d-h-l (left justified)
  75C4  3A92FD        		ld	a,(SCREEN1)
  75C7  0F            		rrca
  75C8  7A            		ld	a,d
  75C9  1600          		ld	d,00h
  75CB  3037          		jr	nc,PRTHL3
                      	
  75CD                	PRTHLLP1:
  75CD  29            		add	hl,hl
  75CE  CB12          		rl	d
  75D0  0F            		rrca
  75D1  30FA          		jr	nc,PRTHLLP1
                      	
  75D3  7D            		ld	a,l
  75D4  F5            		push	af
  75D5  E5            		push	hl
  75D6  D5            		push	de
                      	
  75D7  60            		ld	h,b
  75D8  69            		ld	l,c
                      	
  75D9  0603          		ld	b,03h
  75DB                	PRTHLLP2:
  75DB  E5            		push	hl
  75DC  2AB1FE        		ld	hl,(GRPX3)	;start x
  75DF  114001        		ld	de,320
  75E2  E7            		rst	CPHLDE
  75E3  110800        		ld	de,0008h
  75E6  F5            		push	af
  75E7  19            		add	hl,de
  75E8  F1            		pop	af
  75E9  22B1FE        		ld	(GRPX3),hl
  75EC  E1            		pop	hl
                      	
  75ED  D1            		pop	de
                      	
  75EE  3004          		jr	nc,PRTHLNC
  75F0  CDA566        		call	PRT466
  75F3  23            		inc	hl
  75F4                	PRTHLNC:
  75F4  10E5          		djnz	PRTHLLP2
                      	
  75F6  2AB1FE        		ld	hl,(GRPX3)
  75F9  11F8FF        		ld	de,0-0008h
  75FC  19            		add	hl,de
  75FD  44            		ld	b,h
  75FE  4D            		ld	c,l
  75FF  ED5BB3FE      		ld	de,(GRPY3)
  7603  C9            		ret
                      	
                      	
                      	;for screen mode 3
  7604                	PRTHL3:
                      	;h-l -> d-h-l (left justified)
  7604                	PRTHLLP3:
  7604  29            		add	hl,hl
  7605  CB12          		rl	d
  7607  0F            		rrca
  7608  0F            		rrca
  7609  30F9          		jr	nc,PRTHLLP3
                      	
  760B  7D            		ld	a,l
  760C  CD3276        		call	STRETCH
  760F  F5            		push	af
  7610  7D            		ld	a,l
  7611  0F            		rrca
  7612  0F            		rrca
  7613  0F            		rrca
  7614  0F            		rrca
  7615  CD3276        		call	STRETCH
  7618  F5            		push	af
                      	
  7619  7C            		ld	a,h
  761A  CD3276        		call	STRETCH
  761D  F5            		push	af
  761E  7C            		ld	a,h
  761F  0F            		rrca
  7620  0F            		rrca
  7621  0F            		rrca
  7622  0F            		rrca
  7623  CD3276        		call	STRETCH
  7626  F5            		push	af
                      	
  7627  7A            		ld	a,d
  7628  CD3276        		call	STRETCH
  762B  F5            		push	af
                      	
  762C  60            		ld	h,b
  762D  69            		ld	l,c
                      	
  762E  0605          		ld	b,05h
  7630  18A9          		jr	PRTHLLP2
                      	
  7632                	STRETCH:
  7632  D5            		push	de
  7633  57            		ld	d,a
  7634  1E04          		ld	e,04h
  7636                	STRETCHLP:
  7636  CB0A          		rrc	d
  7638  1F            		rra
  7639  07            		rlca
  763A  0F            		rrca
  763B  1F            		rra
  763C  1D            		dec	e
  763D  20F7          		jr	nz,STRETCHLP
  763F  D1            		pop	de
  7640  C9            		ret
                      	
                      	
                      	;TALK command
  7641                	C_TALK:
  7641  3EC9          		ld	a,0c9h
  7643  3266FE        		ld	(0fe66h),a	;for PC-6601 VOICEROM
                      	
                      	;	call	STRARG
                      	
  7646  CD673F        		call	CHKCLN
  7649  C8            		ret	z
  764A  CD9026        		call	STRARG3
                      	
  764D  EB            		ex	de,hl		;hl=string address
  764E  5F            		ld	e,a		;e=length
                      	
  764F  3E03          		ld	a,03h
  7651  D3C3          		out	(0c3h),a	;port c2h direction: bit0,1=output
  7653  AF            		xor	a
  7654  D3C2          		out	(0c2h),a	;bit0=0:VOICE ROM
  7656  3E51          		ld	a,51h		;0000-3fff,6000-7fff:BASIC ROM, 4000-5fff:VOICE ROM
  7658  3264FE        		ld	(PORTF0H),a
  765B  D3F0          		out	(0f0h),a
  765D  CD0040        		call	TALK
                      	
  7660  F5            		push	af
  7661  3E11          		ld	a,11h		;0000-7fff:BASIC ROM
  7663  3264FE        		ld	(PORTF0H),a
  7666  D3F0          		out	(0f0h),a
  7668  F1            		pop	af
                      	
  7669  FE20          		cp	20h
  766B  C8            		ret	z
  766C  C3CB03        		jp	FCERR
                      	
                      	
  766F                	C_MON:
  766F  ED7B5BFA      		ld	sp,(STACK)
                      	
  7673  F5            		push	af		;for Dezeni Land
  7674  F5            		push	af		;for Dezeni Land
                      	
  7675  3E41          		ld	a,41h
  7677  320EFD        		ld	(MONFLG),a
  767A  210000        		ld	hl,0000h
  767D  39            		add	hl,sp
  767E  2204FD        		ld	(REGSP),hl
                      	
  7681  3EC3          		ld	a,0c3h
  7683  32E1FF        		ld	(HOOK38H),a
  7686  219B77        		ld	hl,MONBRK
  7689  22E2FF        		ld	(HOOK38H+1),hl
  768C  216761        		ld	hl,REGDATA
  768F  11F9FC        		ld	de,REGF
  7692  010800        		ld	bc,0008h
  7695  EDB0          		ldir
                      	
  7697                	MONLP1:
  7697  210777        		ld	hl,READY
  769A  CD787E        		call	MPUTS
  769D                	MONLP2:
  769D  CD427E        		call	GETPUTC
  76A0  21BC76        		ld	hl,MONTBL1
  76A3  11CC76        		ld	de,MONTBL2
  76A6  0610          		ld	b,10h
  76A8                	MONLP3:
  76A8  BE            		cp	(hl)
  76A9  2807          		jr	z,MONCALL
  76AB  23            		inc	hl
  76AC  13            		inc	de
  76AD  13            		inc	de
  76AE  10F8          		djnz	MONLP3
  76B0  1841          		jr	MONERR
                      	
  76B2                	MONCALL:
  76B2  EB            		ex	de,hl
  76B3  5E            		ld	e,(hl)
  76B4  23            		inc	hl
  76B5  56            		ld	d,(hl)
  76B6  EB            		ex	de,hl
  76B7  CDA207        		call	JPHL
  76BA  18DB          		jr	MONLP1
                      	
  76BC                	MONTBL1:
  76BC  4243444546474C		db	'B',  'C',  'D',  'E',  'F',  'G',  'L',  'M'
  76C4  5051525357583F		db	'P',  'Q',  'R',  'S',  'W',  'X',  '?',  03h
  76CC                	MONTBL2:
  76CC  1177E7772C785F		dw	MONB, MONC, MOND, MONE, MONF, MONG, MONL, MONM
  76DC  707BEC7BD37823		dw	MONP, MONQ, MONR, MONS, MONW, MONX, MONQMARK, MONSTOP
                      	
  76EC                	MONQMARK:
  76EC  210EFD        		ld	hl,MONFLG
  76EF  7E            		ld	a,(hl)
  76F0  EE40          		xor	40h
  76F2  77            		ld	(hl),a
                      	;	jr	MONERR
                      	
  76F3                	MONERR:
  76F3  210077        		ld	hl,MONERRSTR
  76F6  CD787E        		call	MPUTS
  76F9  2A04FD        		ld	hl,(REGSP)
  76FC  F9            		ld	sp,hl
  76FD  C39D76        		jp	MONLP2
                      	
  7700                	MONERRSTR:
  7700  4552524F52213F		db	"ERROR!?"
                      	
  7707                	READY:
  7707  0D0A5245414459		db	0dh, 0ah, "READY", 0dh, 0ah, 00h
                      	
                      	
                      	;MON B command
  7711                	MONB:
  7711  3E2D          		ld	a,'-'
  7713  CD887E        		call	MPUTC
  7716  CD427E        		call	GETPUTC
  7719  282A          		jr	z,MONBASIC
  771B  FE52          		cp	'R'
  771D  2806          		jr	z,MONBR
  771F  FE47          		cp	'G'
  7721  2829          		jr	z,MONBG
  7723  18CE          		jr	MONERR
                      	
  7725                	MONBR:
  7725  2A5FFA        		ld	hl,(STARTAD)
  7728  54            		ld	d,h
  7729  5D            		ld	e,l
  772A  13            		inc	de
  772B  13            		inc	de
  772C  13            		inc	de
  772D                	MONBRLP1:
  772D  13            		inc	de
  772E  1A            		ld	a,(de)
  772F  B7            		or	a
  7730  20FB          		jr	nz,MONBRLP1
  7732  13            		inc	de
  7733  73            		ld	(hl),e
  7734  23            		inc	hl
  7735  72            		ld	(hl),d
  7736                	MONBRLP2:
  7736  EB            		ex	de,hl		;hl=link pointer address
  7737  5E            		ld	e,(hl)
  7738  23            		inc	hl
  7739  56            		ld	d,(hl)
  773A  7A            		ld	a,d
  773B  B3            		or	e
  773C  20F8          		jr	nz,MONBRLP2
  773E  23            		inc	hl
  773F  2256FF        		ld	(VARAD),hl
  7742  CDF934        		call	RESSTK
                      	
  7745                	MONBASIC:
  7745  ED7B5BFA      		ld	sp,(STACK)
  7749  C34204        		jp	EDIT
                      	
  774C                	MONBG:
  774C  210000        		ld	hl,0000h
  774F  2206FD        		ld	(BRKADR1),hl
  7752  2209FD        		ld	(BRKADR2),hl
  7755  CD427E        		call	GETPUTC
  7758  FE0D          		cp	0dh
  775A  2836          		jr	z,MONBGRUN
  775C  FE2C          		cp	','
  775E  2805          		jr	z,MONBGZ1
  7760  FE20          		cp	' '
  7762  C2F376        		jp	nz,MONERR
  7765                	MONBGZ1:
  7765  3E2D          		ld	a,'-'
  7767  CD887E        		call	MPUTC
  776A  CD0F7E        		call	GETHEX
  776D  EB            		ex	de,hl		;
  776E  FE0D          		cp	0dh
  7770  2816          		jr	z,MONBGZ
                      	
  7772  3E2D          		ld	a,'-'
  7774  CD887E        		call	MPUTC
  7777  CD0F7E        		call	GETHEX
  777A  FE0D          		cp	0dh
  777C  C2F376        		jp	nz,MONERR
  777F  2209FD        		ld	(BRKADR2),hl
  7782  7E            		ld	a,(hl)
  7783  320BFD        		ld	(BRKSAV2),a
  7786  36FF          		ld	(hl),0ffh
  7788                	MONBGZ:
  7788  EB            		ex	de,hl		;
  7789  2206FD        		ld	(BRKADR1),hl
  778C  7E            		ld	a,(hl)
  778D  3208FD        		ld	(BRKSAV1),a
  7790  36FF          		ld	(hl),0ffh
                      	
  7792                	MONBGRUN:
  7792  CDF934        		call	RESSTK
  7795  2A5FFA        		ld	hl,(STARTAD)
  7798  C3F406        		jp	RUNLP
                      	
  779B                	MONBRK:
  779B  ED7304FD      		ld	(REGSP),sp
  779F  F3            		di
  77A0  3102FD        		ld	sp,REGPC
  77A3  E5            		push	hl
  77A4  D5            		push	de
  77A5  C5            		push	bc
  77A6  F5            		push	af
  77A7  ED7B04FD      		ld	sp,(REGSP)
  77AB  FB            		ei
                      	
  77AC  21D977        		ld	hl,BRKSTR
  77AF  CD787E        		call	MPUTS
  77B2  E1            		pop	hl
  77B3  2B            		dec	hl
  77B4  2202FD        		ld	(REGPC),hl
  77B7  CDE07D        		call	MPUTHEX4
  77BA  CD817E        		call	MPUTNL
                      	
  77BD  2A06FD        		ld	hl,(BRKADR1)
  77C0  7C            		ld	a,h
  77C1  B5            		or	l
  77C2  2804          		jr	z,NOBRK1
  77C4  3A08FD        		ld	a,(BRKSAV1)
  77C7  77            		ld	(hl),a
  77C8                	NOBRK1:
  77C8  2A09FD        		ld	hl,(BRKADR2)
  77CB  7C            		ld	a,h
  77CC  B5            		or	l
  77CD  2804          		jr	z,NOBRK2
  77CF  3A0BFD        		ld	a,(BRKSAV2)
  77D2  77            		ld	(hl),a
  77D3                	NOBRK2:
  77D3  CDF934        		call	RESSTK
  77D6  C39D76        		jp	MONLP2
                      	
  77D9                	BRKSTR:
  77D9  425245414B2121		db	"BREAK!! ADDR=", 00h
                      	
                      	
                      	;MON C command
  77E7                	MONC:
  77E7  CD817E        		call	MPUTNL
  77EA  210EFD        		ld	hl,MONFLG
  77ED  7E            		ld	a,(hl)
  77EE  CB6F          		bit	5,a
  77F0  2009          		jr	nz,MONCNZ		;printer on?
  77F2  F620          		or	20h
  77F4  77            		ld	(hl),a
  77F5  211478        		ld	hl,PRTON
  77F8  C3787E        		jp	MPUTS
                      	
  77FB                	MONCNZ:
  77FB  0F            		rrca
  77FC  300C          		jr	nc,MONCNC		;printer only?
  77FE  3F            		ccf
  77FF  17            		rla
  7800  77            		ld	(hl),a
  7801  CD8111        		call	CSROFF
  7804  211B78        		ld	hl,PRTONLY
  7807  C3787E        		jp	MPUTS
                      	
  780A                	MONCNC:
  780A  07            		rlca
  780B  EE21          		xor	21h
  780D  77            		ld	(hl),a
  780E  212478        		ld	hl,PRTOFF
  7811  C3787E        		jp	MPUTS
                      	
  7814                	PRTON:
  7814  505254204F4E00		db	'PRT ON', 00h
  781B                	PRTONLY:
  781B  505254204F4E4C		db	'PRT ONLY', 00h
  7824                	PRTOFF:
  7824  505254204F4646		db	'PRT OFF', 00h
                      	
                      	
                      	;MON D command
  782C                	MOND:
  782C  CDF87D        		call	GETHEX2
  782F  EB            		ex	de,hl
                      	
                      	;hl...de
  7830                	MONDLP1:
  7830  3E20          		ld	a,' '
  7832  CD887E        		call	MPUTC
  7835  CDE07D        		call	MPUTHEX4
  7838  3E3A          		ld	a,':'
  783A  CD887E        		call	MPUTC
                      	
  783D                	MONDLP2:
  783D  3E20          		ld	a,' '
  783F  CD887E        		call	MPUTC
  7842  3A0EFD        		ld	a,(MONFLG)
  7845  E640          		and	40h
  7847  7E            		ld	a,(hl)
  7848  C48DFE        		call	nz,READRAM
  784B  CDE57D        		call	MPUTHEX2
  784E  E7            		rst	CPHLDE
  784F  300B          		jr	nc,MONDEND
  7851  23            		inc	hl
  7852  7D            		ld	a,l
  7853  E607          		and	07h
  7855  20E6          		jr	nz,MONDLP2
  7857  CD817E        		call	MPUTNL
  785A  18D4          		jr	MONDLP1
                      	
  785C                	MONDEND:
  785C  C3817E        		jp	MPUTNL
                      	
                      	
                      	;MON E command
  785F                	MONE:
  785F  CD817E        		call	MPUTNL
  7862  210EFD        		ld	hl,MONFLG
  7865  7E            		ld	a,(hl)
  7866  EE10          		xor	10h
  7868  77            		ld	(hl),a
  7869  E610          		and	10h
  786B  217678        		ld	hl,ECHOON
  786E  2003          		jr	nz,MONENZ
  7870  217E78        		ld	hl,ECHOOFF
  7873                	MONENZ:
  7873  C3787E        		jp	MPUTS
                      	
  7876                	ECHOON:
  7876  4543484F204F4E		db	"ECHO ON", 00h
  787E                	ECHOOFF:
  787E  4543484F204F46		db	"ECHO OFF", 00h
                      	
                      	
                      	;MON F command
  7887                	MONF:
  7887  CD067E        		call	GETHEX1
  788A  CAF376        		jp	z,MONERR
  788D  E5            		push	hl		;hl=start
                      	
  788E  CDF87D        		call	GETHEX2
  7891  4D            		ld	c,l		;c=data
  7892  E1            		pop	hl
  7893                	MONFLP:
  7893  71            		ld	(hl),c
  7894  E7            		rst	CPHLDE
  7895  D0            		ret	nc
  7896  23            		inc	hl
  7897  18FA          		jr	MONFLP
                      	
                      	
                      	;MON G command
  7899                	MONG:
  7899  210000        		ld	hl,0000h
  789C  2206FD        		ld	(BRKADR1),hl
  789F  2209FD        		ld	(BRKADR2),hl
  78A2  CD0F7E        		call	GETHEX
  78A5  EB            		ex	de,hl		;
  78A6  FE0D          		cp	0dh
  78A8  2827          		jr	z,MONGZ
  78AA  3E2D          		ld	a,'-'
  78AC  CD887E        		call	MPUTC
  78AF  CD067E        		call	GETHEX1
  78B2  2206FD        		ld	(BRKADR1),hl
  78B5  7E            		ld	a,(hl)
  78B6  3208FD        		ld	(BRKSAV1),a
  78B9  36FF          		ld	(hl),0ffh
  78BB  2814          		jr	z,MONGZ
  78BD  3E2D          		ld	a,'-'
  78BF  CD887E        		call	MPUTC
  78C2  CD067E        		call	GETHEX1
  78C5  C2F376        		jp	nz,MONERR
  78C8  2209FD        		ld	(BRKADR2),hl
  78CB  7E            		ld	a,(hl)
  78CC  320BFD        		ld	(BRKSAV2),a
  78CF  36FF          		ld	(hl),0ffh
                      	
  78D1                	MONGZ:
  78D1  EB            		ex	de,hl		;
  78D2  E9            		jp	(hl)
                      	
                      	
                      	;MON L/R command
  78D3                	MONL:
  78D3                	MONR:
  78D3  2F            		cpl
  78D4  210EFD        		ld	hl,MONFLG
  78D7  AE            		xor	(hl)
  78D8  E608          		and	08h		;'L'->00h, 'R'->08h
  78DA  AE            		xor	(hl)
  78DB  77            		ld	(hl),a
                      	
  78DC  EB            		ex	de,hl
  78DD  3E2D          		ld	a,'-'
  78DF  CD887E        		call	MPUTC
  78E2  CD067E        		call	GETHEX1
  78E5  C2F376        		jp	nz,MONERR
  78E8  EB            		ex	de,hl
  78E9  D5            		push	de		;offset address
  78EA  C3F97A        		jp	LOADHEX
                      	
                      	
                      	;load Intel HEX data
                      	;used by CORRIDOR
                      	;input: (sp)=offset, (sp+2)=return address, (MONFLG)-b3(1:CMT,0:RS-232C)
  78ED                	_LOADHEX:ds	LOADHEX-_LOADHEX
  7AF9                		org	LOADHEX
                      	
  7AF9  CDB67D        		call	DUMMY		;just return
  7AFC  D1            		pop	de
  7AFD  CB5E          		bit	3,(hl)		;(MONFLG)
  7AFF  C49A25        		call	nz,INPOPN
  7B02                	MONRLP1:
  7B02  CD8D7D        		call	MGETDEV
  7B05  FE0D          		cp	0dh
  7B07  2040          		jr	nz,MONRERR
  7B09  CD8D7D        		call	MGETDEV
  7B0C  FE0A          		cp	0ah
  7B0E  2039          		jr	nz,MONRERR
  7B10  CD8D7D        		call	MGETDEV
  7B13  FE3A          		cp	':'
  7B15  2032          		jr	nz,MONRERR
  7B17  CD6C7D        		call	MDEVHEX2
  7B1A  2823          		jr	z,MONREND
  7B1C  47            		ld	b,a		;length
  7B1D  CD6C7D        		call	MDEVHEX2	;address (high)
  7B20  67            		ld	h,a
  7B21  CD6C7D        		call	MDEVHEX2	;address (low)
  7B24  6F            		ld	l,a
  7B25  19            		add	hl,de
  7B26  80            		add	a,b
  7B27  84            		add	a,h
  7B28  4F            		ld	c,a		;check sum=b+h+l+...
  7B29  CD6C7D        		call	MDEVHEX2	;record type
  7B2C  201B          		jr	nz,MONRERR
  7B2E                	MONRLP2:
  7B2E  CD6C7D        		call	MDEVHEX2
  7B31  77            		ld	(hl),a
  7B32  81            		add	a,c		;check sum
  7B33  4F            		ld	c,a
  7B34  23            		inc	hl
  7B35  10F7          		djnz	MONRLP2
                      	
  7B37  CD6C7D        		call	MDEVHEX2	;check sum
  7B3A  81            		add	a,c
  7B3B  200C          		jr	nz,MONRERR
  7B3D  18C3          		jr	MONRLP1
                      	
  7B3F                	MONREND:
  7B3F  CD8D7D        		call	MGETDEV
  7B42  FE1A          		cp	1ah
  7B44  20F9          		jr	nz,MONREND
  7B46  C3AA1A        		jp	RCLOSE
                      	
                      	;error for MON-R
  7B49                	MONRERR:
  7B49  CDAA1A        		call	RCLOSE
  7B4C  C3F376        		jp	MONERR
                      	
                      	
                      	;MON M command
  7B4F                	MONM:
  7B4F  CD067E        		call	GETHEX1
  7B52  CAF376        		jp	z,MONERR
                      	
  7B55  E5            		push	hl
  7B56  CDF87D        		call	GETHEX2
  7B59  44            		ld	b,h
  7B5A  4D            		ld	c,l
  7B5B  E1            		pop	hl
                      	
  7B5C  E7            		rst	CPHLDE
  7B5D  3801          		jr	c,MONMLP
  7B5F  EB            		ex	de,hl
                      	
  7B60                	MONMLP:
  7B60  3A0EFD        		ld	a,(MONFLG)
  7B63  E640          		and	40h
  7B65  7E            		ld	a,(hl)
  7B66  C48DFE        		call	nz,READRAM
  7B69  02            		ld	(bc),a
  7B6A  E7            		rst	CPHLDE
  7B6B  23            		inc	hl
  7B6C  03            		inc	bc
  7B6D  38F1          		jr	c,MONMLP
  7B6F  C9            		ret
                      	
                      	
                      	;MON P/W command
  7B70                	MONP:
  7B70                	MONW:
  7B70  D604          		sub	04h		;'P'->4ch, 'W'->53h
  7B72  E605          		and	05h		;04h, 01h
  7B74  0F            		rrca			;02h,80h
  7B75  F5            		push	af
                      	
  7B76  CDF87D        		call	GETHEX2
  7B79  E7            		rst	CPHLDE
  7B7A  DAF376        		jp	c,MONERR
  7B7D  EB            		ex	de,hl		;hl=start address
                      	
  7B7E  F1            		pop	af		;'P'->02h, 'W'->80h
  7B7F  3258FA        		ld	(DEVICE),a
  7B82  DCA825        		call	c,PRTOPN
  7B85                	MONWLP1:
  7B85  3E0D          		ld	a,0dh
  7B87  CDC726        		call	PUTDEV
  7B8A  3E0A          		ld	a,0ah
  7B8C  CDC726        		call	PUTDEV
  7B8F  3E3A          		ld	a,':'
                      	
  7B91  0610          		ld	b,10h		;16 bytes
  7B93  CDC726        		call	PUTDEV
  7B96  78            		ld	a,b		;length
  7B97  CDCC7D        		call	PUTHEX2
  7B9A  7C            		ld	a,h		;address (high)
  7B9B  CDCC7D        		call	PUTHEX2
  7B9E  7D            		ld	a,l		;address (low)
  7B9F  CDCC7D        		call	PUTHEX2
  7BA2  AF            		xor	a		;record type
  7BA3  CDCC7D        		call	PUTHEX2
                      	
  7BA6  AF            		xor	a
  7BA7  90            		sub	b
  7BA8  94            		sub	h
  7BA9  95            		sub	l
  7BAA  4F            		ld	c,a		;check sum
  7BAB                	MONWLP2:
  7BAB  7E            		ld	a,(hl)
  7BAC  CDCC7D        		call	PUTHEX2
  7BAF  79            		ld	a,c
  7BB0  96            		sub	(hl)
  7BB1  4F            		ld	c,a		;check sum
  7BB2  E7            		rst	CPHLDE
  7BB3  300D          		jr	nc,MONWEND
  7BB5  23            		inc	hl
  7BB6  10F3          		djnz	MONWLP2
  7BB8  79            		ld	a,c
  7BB9  CDCC7D        		call	PUTHEX2
  7BBC  18C7          		jr	MONWLP1
                      	
  7BBE                	MONWLP3:
  7BBE  AF            		xor	a
  7BBF  CDCC7D        		call	PUTHEX2
  7BC2                	MONWEND:
  7BC2  10FA          		djnz	MONWLP3
                      	
  7BC4  79            		ld	a,c
  7BC5  CDCC7D        		call	PUTHEX2
  7BC8  3E0D          		ld	a,0dh
  7BCA  CDC726        		call	PUTDEV
  7BCD  3E0A          		ld	a,0ah
  7BCF  CDC726        		call	PUTDEV
  7BD2  3E3A          		ld	a,':'
  7BD4  CDC726        		call	PUTDEV
  7BD7  0608          		ld	b,08h
  7BD9                	MONWLP4:
  7BD9  AF            		xor	a
  7BDA  CDCC7D        		call	PUTHEX2
  7BDD  10FA          		djnz	MONWLP4
  7BDF  3E1A          		ld	a,1ah
  7BE1  CDC726        		call	PUTDEV
  7BE4  CD061B        		call	WCLOSE
  7BE7  AF            		xor	a
  7BE8  3258FA        		ld	(DEVICE),a
  7BEB  C9            		ret
                      	
                      	
                      	;MON Q command
  7BEC                	MONQ:
  7BEC  CDF87D        		call	GETHEX2
  7BEF  EB            		ex	de,hl
                      	
                      	;hl...de
  7BF0                	MONQLP1:
  7BF0  3E20          		ld	a,' '
  7BF2  CD887E        		call	MPUTC
  7BF5  CDE07D        		call	MPUTHEX4
  7BF8  3E3A          		ld	a,':'
  7BFA  CD887E        		call	MPUTC
  7BFD  3E20          		ld	a,' '
  7BFF  CD887E        		call	MPUTC
                      	
  7C02                	MONQLP2:
  7C02  3A0EFD        		ld	a,(MONFLG)
  7C05  E640          		and	40h
  7C07  7E            		ld	a,(hl)
  7C08  C48DFE        		call	nz,READRAM
                      	
  7C0B  FE20          		cp	20h
  7C0D  3002          		jr	nc,MONQNC
  7C0F  3E2E          		ld	a,'.'
  7C11                	MONQNC:
  7C11  CD887E        		call	MPUTC
  7C14  E7            		rst	CPHLDE
  7C15  D2817E        		jp	nc,MPUTNL
  7C18  23            		inc	hl
  7C19  7D            		ld	a,l
  7C1A  E60F          		and	0fh
  7C1C  20E4          		jr	nz,MONQLP2
  7C1E  CD817E        		call	MPUTNL
  7C21  18CD          		jr	MONQLP1
                      	
                      	
                      	;MON S command
  7C23                	MONS:
  7C23  CD067E        		call	GETHEX1
  7C26  C8            		ret	z
  7C27                	MONSLP:
  7C27  3A0EFD        		ld	a,(MONFLG)
  7C2A  E640          		and	40h
  7C2C  7E            		ld	a,(hl)
  7C2D  C48DFE        		call	nz,READRAM
  7C30  CDE57D        		call	MPUTHEX2
  7C33  3E2D          		ld	a,'-'
  7C35  CD887E        		call	MPUTC
  7C38  EB            		ex	de,hl
  7C39  CD0F7E        		call	GETHEX
  7C3C  EB            		ex	de,hl
  7C3D  2001          		jr	nz,MONSNZ
  7C3F  73            		ld	(hl),e
  7C40                	MONSNZ:
  7C40  FE0D          		cp	0dh
  7C42  C8            		ret	z
  7C43  23            		inc	hl
  7C44  7D            		ld	a,l
  7C45  E60F          		and	0fh
  7C47  20DE          		jr	nz,MONSLP
  7C49  CD817E        		call	MPUTNL
  7C4C  CDE07D        		call	MPUTHEX4
  7C4F  3E3A          		ld	a,':'
  7C51  CD887E        		call	MPUTC
  7C54  3E20          		ld	a,' '
  7C56  CD887E        		call	MPUTC
  7C59  18CC          		jr	MONSLP
                      	
                      	
                      	;MON X command
  7C5B                	MONX:
  7C5B  CD427E        		call	GETPUTC
  7C5E  012E7D        		ld	bc,REGWKTBL
  7C61  283E          		jr	z,PRTREG
  7C63  D641          		sub	'A'
  7C65  CAEE7C        		jp	z,SETREG
  7C68  03            		inc	bc
  7C69  03            		inc	bc
  7C6A  3D            		dec	a		;B
  7C6B  CAEE7C        		jp	z,SETREG
  7C6E  03            		inc	bc
  7C6F  03            		inc	bc
  7C70  3D            		dec	a		;C
  7C71  CAEE7C        		jp	z,SETREG
  7C74  03            		inc	bc
  7C75  03            		inc	bc
  7C76  3D            		dec	a		;D
  7C77  2875          		jr	z,SETREG
  7C79  03            		inc	bc
  7C7A  03            		inc	bc
  7C7B  3D            		dec	a		;E
  7C7C  2870          		jr	z,SETREG
  7C7E  03            		inc	bc
  7C7F  03            		inc	bc
  7C80  3D            		dec	a		;F
  7C81  286B          		jr	z,SETREG
  7C83  03            		inc	bc
  7C84  03            		inc	bc
  7C85  FE02          		cp	'H'-'F'
  7C87  2865          		jr	z,SETREG
  7C89  03            		inc	bc
  7C8A  03            		inc	bc
  7C8B  FE06          		cp	'L'-'F'
  7C8D  285F          		jr	z,SETREG
                      	
  7C8F  FE4D          		cp	'M'
  7C91  CA1D7D        		jp	z,SETREGM
  7C94  FE50          		cp	'P'
  7C96  CA1D7D        		jp	z,SETREGP
  7C99  FE53          		cp	'S'
  7C9B  CA1D7D        		jp	z,SETREGS
  7C9E  C3F376        		jp	MONERR
                      	
  7CA1                	PRTREG:
  7CA1  111E7D        		ld	de,REGEQTBL
                      	
  7CA4  2E08          		ld	l,08h
                      	
  7CA6                	PRTREGLP1:
  7CA6  E5            		push	hl
  7CA7  1A            		ld	a,(de)
  7CA8  6F            		ld	l,a
  7CA9  13            		inc	de
  7CAA  1A            		ld	a,(de)
  7CAB  67            		ld	h,a
  7CAC  13            		inc	de
  7CAD                	PRTREGLP2:
  7CAD  7E            		ld	a,(hl)
  7CAE  B7            		or	a
  7CAF  2806          		jr	z,PRTREGZ
  7CB1  CD887E        		call	MPUTC
  7CB4  23            		inc	hl
  7CB5  18F6          		jr	PRTREGLP2
  7CB7                	PRTREGZ:
  7CB7  0A            		ld	a,(bc)
  7CB8  6F            		ld	l,a
  7CB9  03            		inc	bc
  7CBA  0A            		ld	a,(bc)
  7CBB  67            		ld	h,a
  7CBC  03            		inc	bc
  7CBD  7E            		ld	a,(hl)
  7CBE  C5            		push	bc
  7CBF  CDE57D        		call	MPUTHEX2
  7CC2  C1            		pop	bc
  7CC3  E1            		pop	hl
  7CC4  2D            		dec	l
  7CC5  20DF          		jr	nz,PRTREGLP1
                      	
  7CC7  21607D        		ld	hl,REGMEQ
  7CCA  CD787E        		call	MPUTS
  7CCD  2AFFFC        		ld	hl,(REGL)
  7CD0  CD8DFE        		call	READRAM
  7CD3  CDE57D        		call	MPUTHEX2
                      	
  7CD6  21647D        		ld	hl,REGPEQ
  7CD9  CD787E        		call	MPUTS
  7CDC  2A02FD        		ld	hl,(REGPC)
  7CDF  CDE07D        		call	MPUTHEX4
                      	
  7CE2  21687D        		ld	hl,REGSEQ
  7CE5  CD787E        		call	MPUTS
  7CE8  2A04FD        		ld	hl,(REGSP)
  7CEB  C3E07D        		jp	MPUTHEX4
                      	
  7CEE                	SETREG:
  7CEE  3E20          		ld	a,' '
  7CF0  CD887E        		call	MPUTC
  7CF3                	SETREGLP:
  7CF3  FE0D          		cp	0dh
  7CF5  C8            		ret	z
                      	
  7CF6  213D7D        		ld	hl,REGWKTBLEND-1
  7CF9  B7            		or	a
  7CFA  ED42          		sbc	hl,bc
  7CFC  DA1D7D        		jp	c,SETREGM
                      	
  7CFF  0A            		ld	a,(bc)
  7D00  6F            		ld	l,a
  7D01  03            		inc	bc
  7D02  0A            		ld	a,(bc)
  7D03  67            		ld	h,a
  7D04  03            		inc	bc
  7D05  7E            		ld	a,(hl)
  7D06  EB            		ex	de,hl		;
  7D07  C5            		push	bc
  7D08  CDE57D        		call	MPUTHEX2
  7D0B  3E2D          		ld	a,'-'
  7D0D  CD887E        		call	MPUTC
  7D10  CD0F7E        		call	GETHEX
  7D13  C1            		pop	bc
  7D14  20DD          		jr	nz,SETREGLP
  7D16  EB            		ex	de,hl		;
  7D17  73            		ld	(hl),e
  7D18  FE2C          		cp	','
  7D1A  28D7          		jr	z,SETREGLP
  7D1C  C9            		ret
                      	
  7D1D                	SETREGM:
  7D1D                	SETREGP:
  7D1D                	SETREGS:
  7D1D  C9            		ret
                      	
  7D1E                	REGEQTBL:
  7D1E  3E7D427D467D4A		dw	REGAEQ, REGBEQ, REGCEQ, REGDEQ, REGEEQ, REGFEQ
  7D2A  567D5C7D      		dw	REGHEQ, REGLEQ
                      	
  7D2E                	REGWKTBL:
  7D2E  FAFCFCFCFBFCFE		dw	REGA, REGB, REGC, REGD, REGE, REGF, REGH, REGL
  7D3E                	REGWKTBLEND:
  7D3E                	REGAEQ:
  7D3E  20413D00      		db	" A=", 00h
  7D42                	REGBEQ:
  7D42  20423D00      		db	" B=", 00h
  7D46                	REGCEQ:
  7D46  20433D00      		db	" C=", 00h
  7D4A                	REGDEQ:
  7D4A  20443D00      		db	" D=", 00h
  7D4E                	REGEEQ:
  7D4E  20453D00      		db	" E=", 00h
  7D52                	REGFEQ:
  7D52  20463D00      		db	" F=", 00h
  7D56                	REGHEQ:
  7D56  0D0A20483D00  		db	0dh, 0ah, " H=", 00h
  7D5C                	REGLEQ:
  7D5C  204C3D00      		db	" L=", 00h
  7D60                	REGMEQ:
  7D60  204D3D00      		db	" M=", 00h
  7D64                	REGPEQ:
  7D64  20503D00      		db	" P=", 00h
  7D68                	REGSEQ:
  7D68  20533D00      		db	" S=", 00h
                      	
                      	
                      	;output: a,z-flag
                      	;destroy: f
  7D6C                	MDEVHEX2:
  7D6C  C5            		push	bc
  7D6D  CD7B7D        		call	MDEVAN
  7D70  07            		rlca
  7D71  07            		rlca
  7D72  07            		rlca
  7D73  07            		rlca
  7D74  47            		ld	b,a
  7D75  CD7B7D        		call	MDEVAN
  7D78  B0            		or	b
  7D79  C1            		pop	bc
  7D7A  C9            		ret
                      	
                      	;alphabet or numeric
                      	;output: a
                      	;destroy: f
  7D7B                	MDEVAN:
  7D7B  CD8D7D        		call	MGETDEV
  7D7E  D630          		sub	'0'
  7D80  FE0A          		cp	'9'-'0'+1
  7D82  D8            		ret	c
  7D83  D611          		sub	'A'-'0'
  7D85  FE06          		cp	'F'-'A'+1
  7D87  D2497B        		jp	nc,MONRERR
  7D8A  C60A          		add	a,0ah
  7D8C  C9            		ret
                      	
                      	;output: a
                      	;destroy: none
  7D8D                	MGETDEV:
  7D8D  3A0EFD        		ld	a,(MONFLG)
  7D90  E608          		and	08h
  7D92  2808          		jr	z,MGETDEVLP	;RS-232C
  7D94  CD701A        		call	GETCMT
  7D97  C2497B        		jp	nz,MONRERR
  7D9A  180D          		jr	MGETDEVEND
                      	
  7D9C                	MGETDEVLP:
  7D9C  3A18FA        		ld	a,(STOPFLG)
  7D9F  FE03          		cp	03h
  7DA1  CAB77D        		jp	z,MONSTOP2
  7DA4  CD4310        		call	GETRSBF
  7DA7  28F3          		jr	z,MGETDEVLP
                      	
  7DA9                	MGETDEVEND:
  7DA9  F5            		push	af
  7DAA  3A0EFD        		ld	a,(MONFLG)
  7DAD  E610          		and	10h
  7DAF  2804          		jr	z,MGETDEVZ
  7DB1  F1            		pop	af
  7DB2  C3977E        		jp	MPUTC2
                      	
  7DB5                	MGETDEVZ:
  7DB5  F1            		pop	af
  7DB6                	DUMMY:
  7DB6  C9            		ret
                      	
  7DB7                	MONSTOP2:
  7DB7  CDBC0F        		call	GETCH
  7DBA                	MONSTOP:
  7DBA  2A04FD        		ld	hl,(REGSP)
  7DBD  F9            		ld	sp,hl
  7DBE  F5            		push	af		;for Dezeni Land
  7DBF  F5            		push	af		;for Dezeni Land
  7DC0  CDCD1B        		call	BELL
  7DC3  216035        		ld	hl,BREAK+1
  7DC6  CD787E        		call	MPUTS
  7DC9  C39776        		jp	MONLP1
                      	
                      	
                      	;destroy: af
  7DCC                	PUTHEX2:
  7DCC  F5            		push	af
  7DCD  07            		rlca
  7DCE  07            		rlca
  7DCF  07            		rlca
  7DD0  07            		rlca
  7DD1  CDD57D        		call	PUTHEX1
  7DD4  F1            		pop	af
                      	
  7DD5                	PUTHEX1:
  7DD5  E60F          		and	0fh
  7DD7  FE0A          		cp	0ah
  7DD9  DE69          		sbc	a,69h
  7DDB  27            		daa
  7DDC  CDC726        		call	PUTDEV
  7DDF  C9            		ret
                      	
                      	
                      	;input: hl
                      	;destroy: af,b
  7DE0                	MPUTHEX4:
  7DE0  7C            		ld	a,h
  7DE1  CDE57D        		call	MPUTHEX2
  7DE4  7D            		ld	a,l
                      	;	jr	MPUTHEX2
                      	
                      	;input: a
                      	;destroy: af,b
  7DE5                	MPUTHEX2:
  7DE5  47            		ld	b,a
  7DE6  0F            		rrca
  7DE7  0F            		rrca
  7DE8  0F            		rrca
  7DE9  0F            		rrca
  7DEA  CDEE7D        		call	MPUTHEX1
  7DED  78            		ld	a,b
                      	;	jr	MPUTHEX1
                      	
                      	;input: a
                      	;destroy: af
  7DEE                	MPUTHEX1:
  7DEE  E60F          		and	0fh
  7DF0  FE0A          		cp	0ah
  7DF2  DE69          		sbc	a,69h
  7DF4  27            		daa
  7DF5  C3887E        		jp	MPUTC
                      	
                      	
                      	;output: de=start address, hl=end address
  7DF8                	GETHEX2:
  7DF8  CD067E        		call	GETHEX1
  7DFB  CAF376        		jp	z,MONERR
  7DFE  EB            		ex	de,hl
  7DFF  CD067E        		call	GETHEX1
  7E02  C2F376        		jp	nz,MONERR
  7E05  C9            		ret
                      	
                      	;output: hl=address, z(terminator=0dh?)
  7E06                	GETHEX1:
  7E06  CD0F7E        		call	GETHEX
  7E09  C2F376        		jp	nz,MONERR
  7E0C  FE0D          		cp	0dh
  7E0E  C9            		ret
                      	
                      	
                      	;get hex value keyboard input
                      	;output: hl, a(0dh or ',' or ' ' if no error), z-flag(0=no input)
                      	;destroy: af
  7E0F                	GETHEX:
  7E0F  210000        		ld	hl,0000h
  7E12  CD427E        		call	GETPUTC
  7E15  2808          		jr	z,GETHEXZ
  7E17  FE20          		cp	' '
  7E19  2804          		jr	z,GETHEXZ
  7E1B  FE2C          		cp	','
  7E1D  200C          		jr	nz,GETHEXNZ
  7E1F                	GETHEXZ:
  7E1F  B7            		or	a
  7E20  C9            		ret
                      	
  7E21                	GETHEXLP:
  7E21  CD427E        		call	GETPUTC
  7E24  C8            		ret	z
  7E25  FE2C          		cp	','
  7E27  C8            		ret	z
  7E28  FE20          		cp	' '
  7E2A  C8            		ret	z
  7E2B                	GETHEXNZ:
  7E2B  D630          		sub	'0'
  7E2D  FE0A          		cp	'9'-'0'+1
  7E2F  3809          		jr	c,GETHEX0F
  7E31  D611          		sub	'A'-'0'
  7E33  FE06          		cp	'F'-'A'+1
  7E35  D2F376        		jp	nc,MONERR
  7E38  C60A          		add	a,0ah
  7E3A                	GETHEX0F:
  7E3A  29            		add	hl,hl		;*2
  7E3B  29            		add	hl,hl		;*4
  7E3C  29            		add	hl,hl		;*8
  7E3D  29            		add	hl,hl		;*16
  7E3E  85            		add	a,l
  7E3F  6F            		ld	l,a
  7E40  18DF          		jr	GETHEXLP
                      	
                      	;output: a,z-flag(1=return)
                      	;destroy: f
  7E42                	GETPUTC:
                      	;	call	GETC
  7E42  CD637E        		call	MGETC
  7E45  FE0D          		cp	0dh
  7E47  2814          		jr	z,GETPUTCRET
  7E49  FEFE          		cp	0feh		;page switching key
  7E4B  203B          		jr	nz,MPUTC
  7E4D  3A8FFD        		ld	a,(SCREEN2)
  7E50  3C            		inc	a
  7E51  218CFD        		ld	hl,PAGES
  7E54  BE            		cp	(hl)
  7E55  3801          		jr	c,GETPUTCC
  7E57  AF            		xor	a
  7E58                	GETPUTCC:
  7E58  CD7A13        		call	CHGSCR
  7E5B  18E5          		jr	GETPUTC
                      	
  7E5D                	GETPUTCRET:
  7E5D  F5            		push	af
  7E5E  CD817E        		call	MPUTNL
  7E61  F1            		pop	af
  7E62  C9            		ret
                      	
                      	
                      	;get a character for MON
                      	;output: a,z-flag(1=return)
                      	;destroy: f
  7E63                	MGETC:
  7E63  3A0EFD        		ld	a,(MONFLG)
  7E66  0F            		rrca
  7E67  DC7911        		call	c,CSRON
  7E6A                	MGETCLP:
  7E6A  CDBC0F        		call	GETCH
  7E6D  28FB          		jr	z,MGETCLP
  7E6F  E5            		push	hl
  7E70  CD8111        		call	CSROFF
  7E73  E1            		pop	hl
  7E74  CDEF0B        		call	TOUPPER
  7E77  C9            		ret
                      	
                      	;put string for MON
  7E78                	MPUTS:
  7E78  7E            		ld	a,(hl)
  7E79  B7            		or	a
  7E7A  C8            		ret	z
  7E7B  CD887E        		call	MPUTC
  7E7E  23            		inc	hl
  7E7F  18F7          		jr	MPUTS
                      	
                      	
                      	;destroy:  a
                      	;put new line for MON
  7E81                	MPUTNL:
  7E81  3E0D          		ld	a,0dh
  7E83  CD887E        		call	MPUTC
  7E86  3E0A          		ld	a,0ah
                      	;	jr	MPUTC
                      	
                      	;put a character for MON
                      	;input: a
                      	;destroy: none
  7E88                	MPUTC:
  7E88  F5            		push	af
  7E89  CDBC0F        		call	GETCH
  7E8C  2808          		jr	z,MPUTCZ
  7E8E  CD637E        		call	MGETC
  7E91  FE03          		cp	03h
  7E93  CABA7D        		jp	z,MONSTOP
  7E96                	MPUTCZ:
  7E96  F1            		pop	af
                      	
                      	;no stop check
                      	;destroy: none
  7E97                	MPUTC2:
  7E97  F5            		push	af
  7E98  C5            		push	bc
  7E99  47            		ld	b,a		;
  7E9A  3A0EFD        		ld	a,(MONFLG)
  7E9D  4F            		ld	c,a		;;
  7E9E  0F            		rrca
  7E9F  78            		ld	a,b		;
  7EA0  DC7510        		call	c,PRTC
  7EA3  79            		ld	a,c		;;
  7EA4  E620          		and	20h
  7EA6  3E01          		ld	a,01h
  7EA8  3258FA        		ld	(DEVICE),a
  7EAB  78            		ld	a,b		;
  7EAC  C4C726        		call	nz,PUTDEV
  7EAF  AF            		xor	a
  7EB0  3258FA        		ld	(DEVICE),a
  7EB3  C1            		pop	bc
  7EB4  F1            		pop	af
  7EB5  C9            		ret
                      	
                      	
                      	;DELETE command
  7EB6                	C_DEL:
  7EB6  F1            		pop	af		;cancel return address
  7EB7  CD673F        		call	CHKCLN
  7EBA  CACB03        		jp	z,FCERR
                      	
  7EBD  CD6B07        		call	GETLN
  7EC0  D5            		push	de		;start line number
  7EC1  CD673F        		call	CHKCLN
  7EC4  281D          		jr	z,DELSTRT
                      	
  7EC6  FECB          		cp	MINUS_
  7EC8  C2C203        		jp	nz,SNERR
  7ECB  CD663F        		call	CHKCLNINC
  7ECE  2007          		jr	nz,DELNZ
  7ED0  D1            		pop	de
  7ED1  01FAFF        		ld	bc,65530
  7ED4  C5            		push	bc
  7ED5  180C          		jr	DELSTRT
                      	
  7ED7                	DELNZ:
  7ED7  CD6B07        		call	GETLN
  7EDA  CD673F        		call	CHKCLN
  7EDD  C2C203        		jp	nz,SNERR
                      	
  7EE0  E1            		pop	hl
  7EE1  D5            		push	de		;push end line number
  7EE2  EB            		ex	de,hl		;de <- start line number
                      	
                      	;de=start line number, (sp)=end line number
  7EE3                	DELSTRT:
  7EE3  CDFA04        		call	SRCHLN
  7EE6  D1            		pop	de		;end line number
  7EE7  C5            		push	bc		;start address
  7EE8  CDFA04        		call	SRCHLN
  7EEB  3802          		jr	c,DELC
  7EED  60            		ld	h,b		;end address
  7EEE  69            		ld	l,c
  7EEF                	DELC:
  7EEF  D1            		pop	de		;start address
                      	
  7EF0  EB            		ex	de,hl
  7EF1  E7            		rst	CPHLDE		;start-end
  7EF2  D24204        		jp	nc,EDIT
  7EF5  EB            		ex	de,hl
                      	
  7EF6  42            		ld	b,d
  7EF7  4B            		ld	c,e
  7EF8  C5            		push	bc		;dummy,(bc)=0
  7EF9  CDE404        		call	DELPRG
  7EFC  C3CE23        		jp	OKCHGLKP
                      	
                      	
                      	;66 ROM end
  7EFF                	_8000H:	ds	8000h-_8000H
                      	
  8000                		end
